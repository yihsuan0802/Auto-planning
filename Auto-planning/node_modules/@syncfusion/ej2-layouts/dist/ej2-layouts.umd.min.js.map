{"version":3,"file":"ej2-layouts.umd.min.js","sources":["../src/splitter/splitter.js","../src/dashboard-layout/dashboard-layout.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, setStyleAttribute, ChildProperty, compile, isBlazor } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, addClass, Collection, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, selectAll, removeClass, select, Browser, detach, formatUnit } from '@syncfusion/ej2-base';\nimport { SanitizeHtmlHelper, extend } from '@syncfusion/ej2-base';\nvar ROOT = 'e-splitter';\nvar HORIZONTAL_PANE = 'e-splitter-horizontal';\nvar VERTICAL_PANE = 'e-splitter-vertical';\nvar PANE = 'e-pane';\nvar SPLIT_H_PANE = 'e-pane-horizontal';\nvar SPLIT_V_PANE = 'e-pane-vertical';\nvar SPLIT_BAR = 'e-split-bar';\nvar SPLIT_H_BAR = 'e-split-bar-horizontal';\nvar SPLIT_V_BAR = 'e-split-bar-vertical';\nvar STATIC_PANE = 'e-static-pane';\nvar SCROLL_PANE = 'e-scrollable';\nvar RESIZE_BAR = 'e-resize-handler';\nvar RESIZABLE_BAR = 'e-resizable-split-bar';\nvar SPLIT_BAR_HOVER = 'e-split-bar-hover';\nvar SPLIT_BAR_ACTIVE = 'e-split-bar-active';\nvar HIDE_HANDLER = 'e-hide-handler';\nvar SPLIT_TOUCH = 'e-splitter-touch';\nvar DISABLED = 'e-disabled';\nvar RTL = 'e-rtl';\nvar E_ICONS = 'e-icons';\nvar COLLAPSIBLE = 'e-collapsible';\nvar NAVIGATE_ARROW = 'e-navigate-arrow';\nvar ARROW_RIGHT = 'e-arrow-right';\nvar ARROW_LEFT = 'e-arrow-left';\nvar ARROW_UP = 'e-arrow-up';\nvar ARROW_DOWN = 'e-arrow-down';\nvar HIDE_ICON = 'e-icon-hidden';\nvar EXPAND_PANE = 'e-expanded';\nvar COLLAPSE_PANE = 'e-collapsed';\nvar PANE_HIDDEN = 'e-pane-hidden';\nvar RESIZABLE_PANE = 'e-resizable';\nvar LAST_BAR = 'e-last-bar';\nvar BAR_SIZE_DEFAULT = 1;\n/**\n * Interface to configure pane properties such as its content, size, min, max, resizable, collapsed and collapsible.\n */\nvar PaneProperties = /** @class */ (function (_super) {\n    __extends(PaneProperties, _super);\n    function PaneProperties() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"size\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsible\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsed\", void 0);\n    __decorate([\n        Property(true)\n    ], PaneProperties.prototype, \"resizable\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"min\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"max\", void 0);\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], PaneProperties.prototype, \"cssClass\", void 0);\n    return PaneProperties;\n}(ChildProperty));\nexport { PaneProperties };\n/**\n * Splitter is a layout user interface (UI) control that has resizable and collapsible split panes.\n * The container can be split into multiple panes, which are oriented horizontally or vertically.\n * The separator (divider) splits the panes and resizes and expands/collapses the panes.\n * The splitter is placed inside the split pane to make a nested layout user interface.\n *\n * ```html\n * <div id=\"splitter\">\n *  <div> Left Pane </div>\n *  <div> Center Pane </div>\n *  <div> Right Pane </div>\n * </div>\n * ```\n * ```typescript\n * <script>\n *   var splitterObj = new Splitter({ width: '300px', height: '200px'});\n *   splitterObj.appendTo('#splitter');\n * </script>\n * ```\n */\nvar Splitter = /** @class */ (function (_super) {\n    __extends(Splitter, _super);\n    /**\n     * Initializes a new instance of the Splitter class.\n     * @param options  - Specifies Splitter model properties as options.\n     * @param element  - Specifies the element that is rendered as an Splitter.\n     */\n    function Splitter(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.allPanes = [];\n        _this.paneOrder = [];\n        _this.separatorOrder = [];\n        _this.allBars = [];\n        _this.previousCoordinates = {};\n        _this.currentCoordinates = {};\n        _this.updatePrePaneInPercentage = false;\n        _this.updateNextPaneInPercentage = false;\n        _this.panesDimensions = [];\n        _this.border = 0;\n        _this.validDataAttributes = ['data-size', 'data-min', 'data-max', 'data-collapsible', 'data-resizable', 'data-content', 'data-collapsed'];\n        _this.validElementAttributes = ['data-orientation', 'data-width', 'data-height'];\n        _this.iconsDelay = 300;\n        _this.templateElement = [];\n        _this.collapseFlag = false;\n        _this.expandFlag = true;\n        return _this;\n    }\n    /**\n     * Gets called when the model property changes.The data that describes the old and new values of the property that changed.\n     * @param  {SplitterModel} newProp\n     * @param  {SplitterModel} oldProp\n     * @returns void\n     * @private\n     */\n    Splitter.prototype.onPropertyChanged = function (newProp, oldProp) {\n        if (!this.element.classList.contains(ROOT)) {\n            return;\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'height':\n                    this.setSplitterSize(this.element, newProp.height, 'height');\n                    break;\n                case 'width':\n                    this.setSplitterSize(this.element, newProp.width, 'width');\n                    break;\n                case 'cssClass':\n                    this.setCssClass(this.element, newProp.cssClass);\n                    break;\n                case 'enabled':\n                    this.isEnabled(this.enabled);\n                    break;\n                case 'separatorSize':\n                    this.setSeparatorSize(newProp.separatorSize);\n                    break;\n                case 'orientation':\n                    this.changeOrientation(newProp.orientation);\n                    break;\n                case 'paneSettings':\n                    if (!(newProp.paneSettings instanceof Array && oldProp.paneSettings instanceof Array)) {\n                        var paneCounts = Object.keys(newProp.paneSettings);\n                        for (var i = 0; i < paneCounts.length; i++) {\n                            var index = parseInt(Object.keys(newProp.paneSettings)[i], 10);\n                            var changedPropsCount = Object.keys(newProp.paneSettings[index]).length;\n                            for (var j = 0; j < changedPropsCount; j++) {\n                                var property = Object.keys(newProp.paneSettings[index])[j];\n                                switch (property) {\n                                    case 'content':\n                                        var newValue = Object(newProp.paneSettings[index])[property];\n                                        if (!isNullOrUndefined(newValue)) {\n                                            this.allPanes[index].innerHTML = '';\n                                            this.setTemplate(newValue, this.allPanes[index]);\n                                        }\n                                        break;\n                                    case 'resizable':\n                                        var newVal = Object(newProp.paneSettings[index])[property];\n                                        this.resizableModel(index, newVal);\n                                        break;\n                                    case 'collapsible':\n                                        this.collapsibleModelUpdate(index);\n                                        break;\n                                    case 'collapsed':\n                                        newProp.paneSettings[index].collapsed ? this.isCollapsed(index) : this.collapsedOnchange(index);\n                                        break;\n                                    case 'cssClass':\n                                        this.setCssClass(this.allPanes[index], newProp.paneSettings[index].cssClass);\n                                        break;\n                                    case 'size':\n                                        var newValSize = Object(newProp.paneSettings[index])[property];\n                                        if (newValSize !== '' && !isNullOrUndefined(newValSize)) {\n                                            this.updatePaneSize(newValSize, index);\n                                        }\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        this.destroyPaneSettings();\n                        this.allBars = [];\n                        this.allPanes = [];\n                        this.createSplitPane(this.element);\n                        this.addSeparator(this.element);\n                        this.getPanesDimensions();\n                        this.setRTL(this.enableRtl);\n                        this.isCollapsed();\n                    }\n                    break;\n                case 'enableRtl':\n                    this.setRTL(newProp.enableRtl);\n                    break;\n            }\n        }\n    };\n    Splitter.prototype.updatePaneSize = function (newValSize, index) {\n        this.allPanes[index].style.flexBasis = newValSize;\n        var flexPaneIndexes = [];\n        var staticPaneWidth;\n        var flexCount = 0;\n        for (var i = 0; i < this.allPanes.length; i++) {\n            if (!this.paneSettings[i].size && !(this.allPanes[i].innerText === '')) {\n                flexPaneIndexes[flexCount] = i;\n                flexCount++;\n            }\n            else if (this.paneSettings[i].size) {\n                staticPaneWidth = this.orientation === 'Horizontal' ? this.allPanes[index].offsetWidth : this.allPanes[index].offsetHeight;\n            }\n        }\n        staticPaneWidth = this.orientation === 'Horizontal' ? (this.allBars[0].offsetWidth * this.allBars.length) + staticPaneWidth :\n            (this.allBars[0].offsetHeight * this.allBars.length) + staticPaneWidth;\n        var flexPaneWidth = (this.orientation === 'Horizontal' ? this.element.offsetWidth : this.element.offsetHeight)\n            - staticPaneWidth - (this.border * 2);\n        var avgDiffWidth = flexPaneWidth / flexPaneIndexes.length;\n        for (var j = 0; j < flexPaneIndexes.length; j++) {\n            this.allPanes[flexPaneIndexes[j]].style.flexBasis = avgDiffWidth + 'px';\n        }\n        this.allPanes[index].classList.add(STATIC_PANE);\n    };\n    Splitter.prototype.preRender = function () {\n        this.wrapper = this.element.cloneNode(true);\n        this.wrapperParent = this.element.parentElement;\n        if (!this.checkBlazor()) {\n            removeClass([this.wrapper], ['e-control', 'e-lib', ROOT]);\n            var orientation_1 = this.orientation === 'Horizontal' ? HORIZONTAL_PANE : VERTICAL_PANE;\n            addClass([this.element], orientation_1);\n        }\n        var name = Browser.info.name;\n        var css = (name === 'msie') ? 'e-ie' : '';\n        if (!this.checkBlazor()) {\n            this.setCssClass(this.element, css);\n        }\n        if (Browser.isDevice) {\n            addClass([this.element], SPLIT_TOUCH);\n        }\n    };\n    Splitter.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    Splitter.prototype.getModuleName = function () {\n        return 'splitter';\n    };\n    /**\n     * To Initialize the control rendering\n     * @private\n     */\n    Splitter.prototype.render = function () {\n        if (!this.checkBlazor()) {\n            this.checkDataAttributes();\n            this.setCssClass(this.element, this.cssClass);\n            this.isEnabled(this.enabled);\n            this.setDimension(this.getHeight(this.element), this.getWidth(this.element));\n        }\n        this.createSplitPane(this.element);\n        this.addSeparator(this.element);\n        this.getPanesDimensions();\n        this.setPaneSettings();\n        if (!this.checkBlazor()) {\n            this.setRTL(this.enableRtl);\n        }\n        this.collapseFlag = true;\n        this.isCollapsed();\n        this.collapseFlag = false;\n        EventHandler.add(document, 'touchstart click', this.onDocumentClick, this);\n        this.renderComplete();\n        EventHandler.add(this.element, 'keydown', this.onMove, this);\n    };\n    Splitter.prototype.onDocumentClick = function (e) {\n        if (!e.target.classList.contains(SPLIT_BAR) && !isNullOrUndefined(this.currentSeparator)) {\n            this.currentSeparator.classList.remove(SPLIT_BAR_HOVER);\n            this.currentSeparator.classList.remove(SPLIT_BAR_ACTIVE);\n        }\n    };\n    Splitter.prototype.checkPaneSize = function (e) {\n        var prePaneSize;\n        var nextPaneSize;\n        var splitBarSize = isNullOrUndefined(this.separatorSize) ? BAR_SIZE_DEFAULT : this.separatorSize;\n        prePaneSize = this.orientation === 'Horizontal' ? this.previousPane.offsetWidth : this.previousPane.offsetHeight;\n        nextPaneSize = this.orientation === 'Horizontal' ? this.nextPane.offsetWidth : this.nextPane.offsetHeight;\n        if ((this.previousPane.style.flexBasis.indexOf('%') > 0 || this.nextPane.style.flexBasis.indexOf('%') > 0)) {\n            var previousFlexBasis = this.updatePaneFlexBasis(this.previousPane);\n            var nextFlexBasis = this.updatePaneFlexBasis(this.nextPane);\n            this.totalPercent = previousFlexBasis + nextFlexBasis;\n            this.totalWidth = this.convertPercentageToPixel(this.totalPercent + '%');\n            if (e.type === 'keydown' && (!isNullOrUndefined(e.keyCode))) {\n                if ((e.keyCode === 39 || (e.keyCode === 40)) && nextPaneSize > 0) {\n                    this.previousPane.style.flexBasis = (previousFlexBasis + 1) + '%';\n                    this.nextPane.style.flexBasis = (nextFlexBasis - 1) + '%';\n                }\n                else if ((e.keyCode === 37 || (e.keyCode === 38)) && prePaneSize > 0) {\n                    this.previousPane.style.flexBasis = (previousFlexBasis - 1) + '%';\n                    this.nextPane.style.flexBasis = (nextFlexBasis + 1) + '%';\n                }\n            }\n        }\n        else {\n            this.totalWidth = (this.orientation === 'Horizontal') ? this.previousPane.offsetWidth + this.nextPane.offsetWidth :\n                this.previousPane.offsetHeight + this.nextPane.offsetHeight;\n            if (e.type === 'keydown' && (!isNullOrUndefined(e.keyCode))) {\n                if ((e.keyCode === 39 || (e.keyCode === 40)) && nextPaneSize > 0) {\n                    this.addStaticPaneClass();\n                    this.previousPane.style.flexBasis = (prePaneSize + splitBarSize) + 'px';\n                    this.nextPane.style.flexBasis = (nextPaneSize < splitBarSize) ? '0px' :\n                        (nextPaneSize - splitBarSize) + 'px';\n                }\n                else if ((e.keyCode === 37 || (e.keyCode === 38)) && prePaneSize > 0) {\n                    this.addStaticPaneClass();\n                    this.previousPane.style.flexBasis = (prePaneSize < splitBarSize) ? '0px' :\n                        (prePaneSize - splitBarSize) + 'px';\n                    this.nextPane.style.flexBasis = (nextPaneSize + splitBarSize) + 'px';\n                }\n            }\n        }\n    };\n    Splitter.prototype.onMove = function (event) {\n        if (this.allPanes.length > 1) {\n            var index = this.getSeparatorIndex(this.currentSeparator);\n            var isPrevpaneCollapsed = this.previousPane.classList.contains(COLLAPSE_PANE);\n            var isPrevpaneExpanded = this.previousPane.classList.contains(EXPAND_PANE);\n            var isNextpaneCollapsed = this.nextPane.classList.contains(COLLAPSE_PANE);\n            if (((this.orientation !== 'Horizontal' && event.keyCode === 38) || (this.orientation === 'Horizontal' &&\n                event.keyCode === 39) ||\n                (this.orientation === 'Horizontal' && event.keyCode === 37) || (this.orientation !== 'Horizontal' && event.keyCode === 40))\n                && (!isPrevpaneExpanded && !isNextpaneCollapsed && !isPrevpaneCollapsed || (isPrevpaneExpanded) && !isNextpaneCollapsed) &&\n                document.activeElement.classList.contains(SPLIT_BAR) && (this.paneSettings[index].resizable &&\n                this.paneSettings[index + 1].resizable)) {\n                this.checkPaneSize(event);\n                this.triggerResizing(event);\n            }\n            else if (event.keyCode === 13 && this.paneSettings[index].collapsible &&\n                document.activeElement.classList.contains(SPLIT_BAR)) {\n                if (!this.previousPane.classList.contains(COLLAPSE_PANE)) {\n                    this.collapse(index);\n                    addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n                }\n                else {\n                    this.expand(index);\n                    addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n                }\n            }\n        }\n    };\n    ;\n    /**\n     * @hidden\n     */\n    Splitter.prototype.sanitizeHelper = function (value) {\n        if (this.enableHtmlSanitizer) {\n            var item = SanitizeHtmlHelper.beforeSanitize();\n            var beforeEvent = {\n                cancel: false,\n                helper: null\n            };\n            extend(item, item, beforeEvent);\n            this.trigger('beforeSanitizeHtml', item);\n            if (item.cancel && !isNullOrUndefined(item.helper)) {\n                value = item.helper(value);\n            }\n            else if (!item.cancel) {\n                value = SanitizeHtmlHelper.serializeValue(item, value);\n            }\n        }\n        return value;\n    };\n    Splitter.prototype.checkDataAttributes = function () {\n        var api;\n        var value;\n        // Element values\n        for (var dataIndex = 0; dataIndex < this.validElementAttributes.length; dataIndex++) {\n            value = this.element.getAttribute(this.validElementAttributes[dataIndex]);\n            if (!isNullOrUndefined(value)) {\n                api = this.removeDataPrefix(this.validElementAttributes[dataIndex]);\n                // tslint:disable-next-line\n                this[api] = value;\n            }\n        }\n        // Pane values\n        for (var paneIndex = 0; paneIndex < this.element.children.length; paneIndex++) {\n            for (var dataAttr = 0; dataAttr < this.validDataAttributes.length; dataAttr++) {\n                value = this.element.children[paneIndex].getAttribute(this.validDataAttributes[dataAttr]);\n                if (!isNullOrUndefined(value)) {\n                    api = this.removeDataPrefix(this.validDataAttributes[dataAttr]);\n                    value = (api === 'collapsible' || api === 'resizable') ? (value === 'true') : value;\n                    if (isNullOrUndefined(this.paneSettings[paneIndex])) {\n                        this.paneSettings[paneIndex] = {\n                            size: '',\n                            min: null,\n                            max: null,\n                            content: '',\n                            resizable: true,\n                            collapsible: false,\n                            collapsed: false\n                        };\n                    }\n                    // tslint:disable-next-line\n                    var paneAPI = this.paneSettings[paneIndex][api];\n                    if (api === 'resizable' || api === 'collapsible' || api === 'collapsed') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                    if (isNullOrUndefined(paneAPI) || paneAPI === '') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.destroyPaneSettings = function () {\n        [].slice.call(this.element.children).forEach(function (el) { detach(el); });\n        this.restoreElem();\n    };\n    Splitter.prototype.checkBlazor = function () {\n        return isBlazor() && this.isServerRendered;\n    };\n    Splitter.prototype.setPaneSettings = function () {\n        var childCount = this.allPanes.length;\n        var paneCollection = [];\n        var paneValue = {\n            size: '',\n            min: null,\n            max: null,\n            content: '',\n            resizable: true,\n            collapsed: false,\n            collapsible: false,\n            cssClass: ''\n        };\n        for (var i = 0; i < childCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i])) {\n                paneCollection[i] = paneValue;\n            }\n            else {\n                paneCollection[i] = this.paneSettings[i];\n            }\n        }\n        this.setProperties({ 'paneSettings': paneCollection }, true);\n    };\n    Splitter.prototype.checkArrow = function (paneIndex, targetArrow) {\n        return (this.allBars[paneIndex].querySelector('.' + NAVIGATE_ARROW + '.' + targetArrow));\n    };\n    Splitter.prototype.removeDataPrefix = function (attribute) {\n        return attribute.slice(attribute.lastIndexOf('-') + 1);\n    };\n    Splitter.prototype.setRTL = function (rtl) {\n        rtl ? addClass([this.element], RTL) : removeClass([this.element], RTL);\n    };\n    Splitter.prototype.setSplitterSize = function (element, size, property) {\n        var style = property === 'width' ? { 'width': formatUnit(size) } : { 'height': formatUnit(size) };\n        setStyleAttribute(element, style);\n    };\n    Splitter.prototype.getPanesDimensions = function () {\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.orientation === 'Horizontal' ? this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().width) :\n                this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().height);\n        }\n    };\n    Splitter.prototype.setCssClass = function (element, className) {\n        if (className) {\n            addClass([element], className.split(className.indexOf(',') > -1 ? ',' : ' '));\n        }\n    };\n    Splitter.prototype.hideResizer = function (target) {\n        addClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n    };\n    Splitter.prototype.showResizer = function (target) {\n        if (!isNullOrUndefined(this.previousPane) && this.previousPane.classList.contains(RESIZABLE_PANE) &&\n            !isNullOrUndefined(this.nextPane) && this.nextPane.classList.contains(RESIZABLE_PANE)) {\n            removeClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n        }\n    };\n    Splitter.prototype.resizableModel = function (index, newVal) {\n        var paneIndex;\n        var i = index;\n        paneIndex = (index === (this.allBars.length)) ? (index - 1) : index;\n        EventHandler.remove(this.allBars[paneIndex], 'mousedown', this.onMouseDown);\n        if (newVal) {\n            EventHandler.add(this.allBars[paneIndex], 'mousedown', this.onMouseDown, this);\n            if (this.isResizable()) {\n                this.showResizer(this.allBars[paneIndex]);\n                removeClass([select('.' + RESIZE_BAR, this.allBars[paneIndex])], HIDE_HANDLER);\n                this.allBars[paneIndex].classList.add(RESIZABLE_BAR);\n                (index === (this.allBars.length)) ? this.allPanes[index].classList.add(RESIZABLE_PANE) :\n                    this.allPanes[paneIndex].classList.add(RESIZABLE_PANE);\n                this.updateResizablePanes(i);\n            }\n        }\n        else {\n            this.updateResizablePanes(i);\n            this.hideResizer(this.allBars[paneIndex]);\n            this.allBars[paneIndex].classList.remove(RESIZABLE_BAR);\n            (index === (this.allBars.length)) ? this.allPanes[index].classList.remove(RESIZABLE_PANE) :\n                this.allPanes[paneIndex].classList.remove(RESIZABLE_PANE);\n        }\n    };\n    Splitter.prototype.collapsibleModelUpdate = function (index) {\n        var arrow2;\n        var arrow1;\n        var paneIndex;\n        paneIndex = index === (this.allBars.length) ? (index - 1) : index;\n        arrow2 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_LEFT) : this.checkArrow(paneIndex, ARROW_UP);\n        arrow1 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_RIGHT) : this.checkArrow(paneIndex, ARROW_DOWN);\n        this.paneCollapsible(this.allPanes[index], index);\n        this.updateCollapseIcons(paneIndex, arrow1, arrow2);\n    };\n    Splitter.prototype.collapseArrow = function (barIndex, arrow) {\n        return selectAll('.' + arrow, this.allBars[barIndex])[0];\n    };\n    Splitter.prototype.updateIsCollapsed = function (index, collapseArrow, lastBarArrow) {\n        if (!isNullOrUndefined(index)) {\n            var targetEle = void 0;\n            var lastBarIndex = (index === this.allBars.length);\n            var barIndex = lastBarIndex ? index - 1 : index;\n            if (!lastBarIndex && this.allPanes[index + 1].classList.contains(COLLAPSE_PANE) && index !== 0) {\n                targetEle = this.collapseArrow(barIndex - 1, lastBarArrow);\n            }\n            else {\n                targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, lastBarArrow) : this.collapseArrow(barIndex, collapseArrow);\n            }\n            targetEle.click();\n        }\n    };\n    Splitter.prototype.isCollapsed = function (index) {\n        var _this = this;\n        if (!isNullOrUndefined(index) && this.paneSettings[index].collapsed\n            && isNullOrUndefined(this.allPanes[index].classList.contains(COLLAPSE_PANE))) {\n            return;\n        }\n        this.expandFlag = false;\n        if (!isNullOrUndefined(index)) {\n            this.collapseFlag = true;\n            var targetEle = void 0;\n            var lastBarIndex = (index === this.allBars.length);\n            var barIndex = lastBarIndex ? index - 1 : index;\n            if (!lastBarIndex && this.allPanes[index + 1].classList.contains(COLLAPSE_PANE) && index !== 0) {\n                targetEle = this.collapseArrow(barIndex - 1, this.targetArrows().lastBarArrow);\n            }\n            else {\n                targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, this.targetArrows().lastBarArrow) :\n                    this.collapseArrow(barIndex, this.targetArrows().collapseArrow);\n            }\n            var event_1 = { target: targetEle };\n            var eventArgs = this.beforeAction(event_1);\n            this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n                if (!beforeCollapseArgs.cancel) {\n                    var collapsedindex = [];\n                    collapsedindex[0] = index;\n                    var j = 1;\n                    for (var i = 0; i < _this.allPanes.length; i++) {\n                        if (_this.allPanes[i].classList.contains(COLLAPSE_PANE)) {\n                            collapsedindex[j] = i;\n                            j++;\n                        }\n                    }\n                    collapsedindex = collapsedindex.sort();\n                    _this.updateIsCollapsed(index, _this.targetArrows().collapseArrow, _this.targetArrows().lastBarArrow);\n                    for (var i = 0; i < collapsedindex.length; i++) {\n                        if (!_this.allPanes[collapsedindex[i]].classList.contains(COLLAPSE_PANE)) {\n                            _this.updateIsCollapsed(collapsedindex[i], _this.targetArrows().collapseArrow, _this.targetArrows().lastBarArrow);\n                        }\n                    }\n                    for (var i = collapsedindex.length; i > 0; i--) {\n                        if (!_this.allPanes[collapsedindex[i - 1]].classList.contains(COLLAPSE_PANE)) {\n                            var targetArrow = _this.targetArrows();\n                            _this.updateIsCollapsed(collapsedindex[i - 1], targetArrow.collapseArrow, targetArrow.lastBarArrow);\n                        }\n                    }\n                    var collapseEventArgs = _this.afterAction(event_1);\n                    _this.trigger('collapsed', collapseEventArgs);\n                    _this.collapseFlag = false;\n                }\n            });\n        }\n        else {\n            for (var m = 0; m < this.allPanes.length; m++) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed) {\n                    this.updateIsCollapsed(m, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n                }\n            }\n            for (var m = this.allPanes.length - 1; m >= 0; m--) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed &&\n                    !this.allPanes[m].classList.contains(COLLAPSE_PANE)) {\n                    var collapseArrow = this.orientation === 'Horizontal' ? ARROW_RIGHT : ARROW_DOWN;\n                    if (m !== 0) {\n                        var targetEle = this.collapseArrow(m - 1, collapseArrow);\n                        targetEle.click();\n                    }\n                    if (!this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                        var targetEle = this.collapseArrow(m - 1, collapseArrow);\n                        targetEle.click();\n                    }\n                }\n            }\n        }\n        this.expandFlag = true;\n    };\n    Splitter.prototype.targetArrows = function () {\n        this.splitterProperty();\n        return { collapseArrow: (this.orientation === 'Horizontal') ? ARROW_LEFT : ARROW_UP,\n            lastBarArrow: (this.orientation === 'Vertical') ? ARROW_DOWN : ARROW_RIGHT\n        };\n    };\n    Splitter.prototype.collapsedOnchange = function (index) {\n        if (!isNullOrUndefined(this.paneSettings[index]) && !isNullOrUndefined(this.paneSettings[index].collapsed)\n            && this.allPanes[index].classList.contains(COLLAPSE_PANE)) {\n            this.updateIsCollapsed(index, this.targetArrows().lastBarArrow, this.targetArrows().collapseArrow);\n        }\n    };\n    Splitter.prototype.isEnabled = function (enabled) {\n        enabled ? removeClass([this.element], DISABLED) : addClass([this.element], DISABLED);\n    };\n    Splitter.prototype.setSeparatorSize = function (size) {\n        var sizeValue = isNullOrUndefined(size) ? 'auto' : size + 'px';\n        var separator = this.orientation === 'Horizontal' ? SPLIT_H_BAR : SPLIT_V_BAR;\n        for (var index = 0; index < this.allBars.length; index++) {\n            var splitBar = selectAll('.' + separator, this.element)[index];\n            var resizeBar = selectAll('.' + RESIZE_BAR, splitBar)[0];\n            if (this.orientation === 'Horizontal') {\n                splitBar.style.width = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.width = sizeValue;\n                }\n            }\n            else {\n                splitBar.style.height = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.height = sizeValue;\n                }\n            }\n        }\n    };\n    Splitter.prototype.changeOrientation = function (orientation) {\n        var isVertical = orientation === 'Vertical';\n        this.element.classList.remove(isVertical ? HORIZONTAL_PANE : VERTICAL_PANE);\n        this.element.classList.add(isVertical ? VERTICAL_PANE : HORIZONTAL_PANE);\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.allPanes[index].classList.remove(isVertical ? SPLIT_H_PANE : SPLIT_V_PANE);\n            this.allPanes[index].classList.add(isVertical ? SPLIT_V_PANE : SPLIT_H_PANE);\n        }\n        for (var index = 0; index < this.allBars.length; index++) {\n            detach(this.allBars[index]);\n        }\n        this.allBars = [];\n        this.addSeparator(this.element);\n    };\n    Splitter.prototype.checkSplitPane = function (currentBar, elementIndex) {\n        var paneEle = this.collectPanes(currentBar.parentElement.children)[elementIndex];\n        return paneEle;\n    };\n    Splitter.prototype.collectPanes = function (childNodes) {\n        var elements = [];\n        for (var i = 0; i < childNodes.length; i++) {\n            if (childNodes[i].classList.contains(PANE)) {\n                elements.push(childNodes[i]);\n            }\n        }\n        return elements;\n    };\n    Splitter.prototype.getPrevPane = function (currentBar, order) {\n        return this.checkSplitPane(currentBar, ((order - 1) / (2)));\n    };\n    Splitter.prototype.getNextPane = function (currentBar, order) {\n        return this.checkSplitPane(currentBar, (((order - 1) / 2) + 1));\n    };\n    Splitter.prototype.updateSeparatorSize = function (resizeHanlder) {\n        var sizeValue = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        this.orientation === 'Horizontal' ? (resizeHanlder.style.width = sizeValue) : resizeHanlder.style.height = sizeValue;\n    };\n    Splitter.prototype.addResizeHandler = function (currentBar) {\n        var resizeHanlder = this.createElement('div');\n        addClass([resizeHanlder], [RESIZE_BAR, E_ICONS]);\n        this.updateSeparatorSize(resizeHanlder);\n        currentBar.appendChild(resizeHanlder);\n    };\n    Splitter.prototype.getHeight = function (target) {\n        var height = this.height;\n        height = target.style.height !== '' && this.height === '100%' ? target.style.height : this.height;\n        return height;\n    };\n    Splitter.prototype.getWidth = function (target) {\n        var width = this.width;\n        width = target.style.width !== '' && this.width === '100%' ? target.style.width : this.width;\n        return width;\n    };\n    Splitter.prototype.setDimension = function (height, width) {\n        setStyleAttribute(this.element, { 'height': height, 'width': width });\n    };\n    Splitter.prototype.updateCollapseIcons = function (index, arrow1, arrow2) {\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].collapsible)) {\n                this.paneSettings[index].collapsible ? removeClass([arrow2], [HIDE_ICON]) : addClass([arrow2], [HIDE_ICON]);\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                }\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    if ((this.paneSettings[index + 1].collapsible)) {\n                        this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.updateIconClass = function () {\n        if (this.orientation === 'Horizontal') {\n            this.leftArrow = ARROW_LEFT;\n            this.rightArrow = ARROW_RIGHT;\n        }\n        else {\n            this.leftArrow = ARROW_UP;\n            this.rightArrow = ARROW_DOWN;\n        }\n    };\n    Splitter.prototype.createSeparator = function (i) {\n        var separator = this.createElement('div');\n        this.allBars.push(separator);\n        var arrow1 = this.createElement('button');\n        var arrow2 = this.createElement('button');\n        arrow1.setAttribute('tabindex', '-1');\n        arrow2.setAttribute('tabindex', '-1');\n        arrow1.setAttribute('aria-label', 'Toggle navigation');\n        arrow2.setAttribute('aria-label', 'Toggle navigation');\n        arrow1.setAttribute('type', 'button');\n        arrow2.setAttribute('type', 'button');\n        var size;\n        var proxy;\n        size = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        if (this.orientation === 'Horizontal') {\n            this.updateIconClass();\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_LEFT, HIDE_ICON]);\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_RIGHT, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_H_BAR]);\n            separator.style.width = size;\n        }\n        else {\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_DOWN, HIDE_ICON]);\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_UP, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_V_BAR]);\n            this.updateIconClass();\n            separator.style.height = size;\n        }\n        this.addMouseActions(separator);\n        separator.appendChild(arrow2);\n        this.addResizeHandler(separator);\n        separator.appendChild(arrow1);\n        this.updateCollapseIcons(i, arrow1, arrow2);\n        separator.setAttribute('tabindex', '0');\n        proxy = this;\n        separator.addEventListener('focus', function () {\n            separator.classList.add(SPLIT_BAR_ACTIVE);\n            proxy.currentSeparator = separator;\n            proxy.getPaneDetails();\n        });\n        separator.addEventListener('blur', function () {\n            separator.classList.remove(SPLIT_BAR_ACTIVE);\n        });\n        return separator;\n    };\n    Splitter.prototype.updateResizablePanes = function (index) {\n        this.getPaneDetails();\n        this.isResizable() ? this.allPanes[index].classList.add(RESIZABLE_PANE) : this.allPanes[index].classList.remove(RESIZABLE_PANE);\n    };\n    Splitter.prototype.addSeparator = function (target) {\n        var _this = this;\n        var childCount = this.allPanes.length;\n        var clonedEle = target.children;\n        var separator;\n        var proxy;\n        for (var i = 0; i < childCount; i++) {\n            if (i < childCount - 1) {\n                if (!this.checkBlazor()) {\n                    separator = this.createSeparator(i);\n                    setStyleAttribute(separator, { 'order': (i * 2) + 1 });\n                    this.separatorOrder.push((i * 2) + 1);\n                    clonedEle[i].parentNode.appendChild(separator);\n                    this.currentSeparator = separator;\n                    separator.setAttribute('role', 'separator');\n                    separator.setAttribute('aria-orientation', this.orientation.toLowerCase());\n                }\n                if (this.checkBlazor()) {\n                    proxy = this;\n                    separator = this.element.getElementsByClassName('e-split-bar')[i];\n                    if (this.checkBlazor()) {\n                        this.allBars.push(separator);\n                    }\n                    this.updateIconClass();\n                }\n                if (!this.checkBlazor()) {\n                    this.wireClickEvents();\n                }\n                if (this.checkBlazor() && !isNullOrUndefined(separator)) {\n                    this.currentSeparator = separator;\n                    this.addMouseActions(separator);\n                    this.wireClickEvents();\n                    separator.addEventListener('focus', function () {\n                        if (document.activeElement.classList.contains('e-split-bar')) {\n                            proxy.currentSeparator = document.activeElement;\n                            proxy.currentSeparator.classList.add(SPLIT_BAR_ACTIVE);\n                        }\n                        _this.getPaneDetails();\n                    });\n                    separator.addEventListener('blur', function () {\n                        proxy.currentSeparator.classList.remove(SPLIT_BAR_ACTIVE);\n                    });\n                }\n                if (!isNullOrUndefined(separator)) {\n                    if (this.isResizable()) {\n                        EventHandler.add(separator, 'mousedown', this.onMouseDown, this);\n                        var eventName = (Browser.info.name === 'msie') ? 'pointerdown' : 'touchstart';\n                        EventHandler.add(separator, eventName, this.onMouseDown, this);\n                        separator.classList.add(RESIZABLE_BAR);\n                        this.updateResizablePanes(i);\n                    }\n                    else {\n                        addClass([select('.' + RESIZE_BAR, separator)], HIDE_HANDLER);\n                    }\n                }\n            }\n            else {\n                if (separator) {\n                    addClass([separator], LAST_BAR);\n                }\n                if (childCount > 1) {\n                    this.updateResizablePanes(i);\n                }\n            }\n        }\n        if (Browser.info.name === 'msie') {\n            var allBar = this.element.querySelectorAll('.e-splitter .e-resize-handler');\n            for (var i = 0; i < allBar.length; i++) {\n                var sepSize = isNullOrUndefined(this.separatorSize) ? 1 : this.separatorSize;\n                allBar[i].style.paddingLeft = sepSize / 2 + 'px';\n                allBar[i].style.paddingRight = sepSize / 2 + 'px';\n            }\n        }\n    };\n    Splitter.prototype.isResizable = function () {\n        var resizable = false;\n        if ((!isNullOrUndefined(this.paneSettings[this.getPreviousPaneIndex()]) &&\n            this.paneSettings[this.getPreviousPaneIndex()].resizable &&\n            !isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()]) &&\n            this.paneSettings[this.getNextPaneIndex()].resizable) ||\n            isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()])) {\n            resizable = true;\n        }\n        return resizable;\n    };\n    Splitter.prototype.addMouseActions = function (separator) {\n        var _this = this;\n        var sTout;\n        var hoverTimeOut;\n        separator.addEventListener('mouseenter', function () {\n            /* istanbul ignore next */\n            sTout = setTimeout(function () { addClass([separator], [SPLIT_BAR_HOVER]); }, _this.iconsDelay);\n        });\n        separator.addEventListener('mouseleave', function () {\n            clearTimeout(sTout);\n            removeClass([separator], [SPLIT_BAR_HOVER]);\n        });\n        separator.addEventListener('mouseout', function () {\n            clearTimeout(hoverTimeOut);\n        });\n        separator.addEventListener('mouseover', function () {\n            /* istanbul ignore next */\n            hoverTimeOut = setTimeout(function () { addClass([separator], [SPLIT_BAR_HOVER]); }, _this.iconsDelay);\n        });\n    };\n    Splitter.prototype.getEventType = function (e) {\n        return (e.indexOf('mouse') > -1) ? 'mouse' : 'touch';\n    };\n    Splitter.prototype.updateCurrentSeparator = function (target) {\n        this.currentSeparator = this.isSeparator(target) ? target.parentElement : target;\n    };\n    Splitter.prototype.isSeparator = function (target) {\n        return ((target.classList.contains(RESIZE_BAR) || target.classList.contains(SPLIT_BAR)) ? false : true);\n    };\n    Splitter.prototype.isMouseEvent = function (e) {\n        var isMouse = false;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType) &&\n            this.getEventType(e.pointerType) === 'mouse')) {\n            isMouse = true;\n        }\n        return isMouse;\n    };\n    Splitter.prototype.updateCursorPosition = function (e, type) {\n        if (this.isMouseEvent(e)) {\n            this.changeCoordinates({ x: e.pageX, y: e.pageY }, type);\n        }\n        else {\n            var eventType = Browser.info.name !== 'msie' ? e.touches[0] : e;\n            this.changeCoordinates({ x: eventType.pageX, y: eventType.pageY }, type);\n        }\n    };\n    Splitter.prototype.changeCoordinates = function (coordinates, type) {\n        if (type === 'previous') {\n            this.previousCoordinates = coordinates;\n        }\n        else {\n            this.currentCoordinates = coordinates;\n        }\n    };\n    Splitter.prototype.reportWindowSize = function () {\n        var paneCount = this.allPanes.length;\n        for (var i = 0; i < paneCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i].size)) {\n                this.allPanes[i].classList.remove(STATIC_PANE);\n            }\n            if (paneCount - 1 === i) {\n                var staticPaneCount = this.element.querySelectorAll('.' + STATIC_PANE).length;\n                if (staticPaneCount === paneCount) {\n                    removeClass([this.allPanes[i]], STATIC_PANE);\n                }\n            }\n        }\n    };\n    Splitter.prototype.wireResizeEvents = function () {\n        window.addEventListener('resize', this.reportWindowSize.bind(this));\n        EventHandler.add(document, 'mousemove', this.onMouseMove, this);\n        EventHandler.add(document, 'mouseup', this.onMouseUp, this);\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.add(document, touchMoveEvent, this.onMouseMove, this);\n        EventHandler.add(document, touchEndEvent, this.onMouseUp, this);\n    };\n    Splitter.prototype.unwireResizeEvents = function () {\n        window.removeEventListener('resize', this.reportWindowSize.bind(this));\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.remove(document, 'mousemove', this.onMouseMove);\n        EventHandler.remove(document, 'mouseup', this.onMouseUp);\n        EventHandler.remove(document, touchMoveEvent, this.onMouseMove);\n        EventHandler.remove(document, touchEndEvent, this.onMouseUp);\n    };\n    Splitter.prototype.wireClickEvents = function () {\n        EventHandler.add(this.currentSeparator, 'touchstart click', this.clickHandler, this);\n    };\n    Splitter.prototype.clickHandler = function (e) {\n        if (!e.target.classList.contains(NAVIGATE_ARROW)) {\n            var hoverBars = selectAll('.' + ROOT + ' > .' + SPLIT_BAR + '.' + SPLIT_BAR_HOVER);\n            if (hoverBars.length > 0) {\n                removeClass(hoverBars, SPLIT_BAR_HOVER);\n            }\n            e.target.classList.add(SPLIT_BAR_HOVER);\n        }\n        var icon = e.target;\n        if (icon.classList.contains(ARROW_LEFT) || icon.classList.contains(ARROW_UP)) {\n            this.collapseAction(e);\n        }\n        if (icon.classList.contains(ARROW_RIGHT) || icon.classList.contains(ARROW_DOWN)) {\n            this.expandAction(e);\n        }\n    };\n    Splitter.prototype.expandAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var eventArgs = this.beforeAction(e);\n        if (this.expandFlag) {\n            this.trigger('beforeExpand', eventArgs, function (beforeExpandArgs) {\n                if (!beforeExpandArgs.cancel) {\n                    _this.expandPane(e);\n                }\n                var expandEventArgs = _this.afterAction(e);\n                _this.trigger('expanded', expandEventArgs);\n            });\n        }\n        else {\n            this.expandPane(e);\n        }\n    };\n    Splitter.prototype.expandPane = function (e) {\n        var collapseCount = this.element.querySelectorAll('.' + COLLAPSE_PANE).length;\n        var flexStatus = (!this.previousPane.classList.contains(COLLAPSE_PANE) &&\n            this.previousPane.classList.contains(STATIC_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            !this.nextPane.classList.contains(EXPAND_PANE) && this.nextPane.nextElementSibling.classList.contains(PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(STATIC_PANE) && !(collapseCount === this.allPanes.length - 2));\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        if (!this.previousPane.classList.contains(COLLAPSE_PANE)) {\n            removeClass([this.nextPane], EXPAND_PANE);\n            removeClass([this.previousPane], collapseClass);\n            addClass([this.previousPane], EXPAND_PANE);\n            addClass([this.nextPane], collapseClass);\n            if (this.expandFlag) {\n                this.updatePaneSettings(this.nextPaneIndex, true);\n            }\n        }\n        else {\n            removeClass([this.previousPane], collapseClass);\n            removeClass([this.nextPane], EXPAND_PANE);\n            if (this.expandFlag) {\n                this.updatePaneSettings(this.prevPaneIndex, false);\n            }\n        }\n        this.updateIconsOnExpand(e);\n        this.previousPane.setAttribute('aria-expanded', 'true');\n        this.nextPane.setAttribute('aria-expanded', 'false');\n        this.updateFlexGrow(this.checkStaticPanes());\n        if (flexStatus) {\n            this.previousPane.classList.remove(EXPAND_PANE);\n            this.previousPane.style.flexGrow = '';\n        }\n    };\n    Splitter.prototype.checkStaticPanes = function () {\n        var staticPane = true;\n        for (var i = 0; i < this.allPanes.length; i++) {\n            if (!this.allPanes[i].classList.contains(COLLAPSE_PANE) && staticPane) {\n                if (this.allPanes[i].classList.contains(STATIC_PANE)) {\n                    staticPane = true;\n                }\n                else {\n                    staticPane = false;\n                }\n            }\n        }\n        return staticPane;\n    };\n    Splitter.prototype.updateFlexGrow = function (status) {\n        var panes = this.allPanes;\n        for (var i = 0; i < panes.length; i++) {\n            if (panes[i].classList.contains(EXPAND_PANE)) {\n                panes[i].style.flexGrow = '1';\n            }\n            else if (panes[i].classList.contains(COLLAPSE_PANE)) {\n                panes[i].style.flexGrow = '0';\n            }\n            else {\n                panes[i].style.flexGrow = '';\n            }\n            if (status && !this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                this.nextPane.style.flexGrow = '1';\n            }\n        }\n    };\n    Splitter.prototype.hideTargetBarIcon = function (targetBar, targetArrow) {\n        addClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.showTargetBarIcon = function (targetBar, targetArrow) {\n        removeClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnCollapse = function (e) {\n        this.splitterProperty();\n        if (this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE)) {\n            addClass([e.target], HIDE_ICON);\n            if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            this.resizableModel(this.currentBarIndex, false);\n            if (this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n                !this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.hideTargetBarIcon(this.prevBar, this.rightArrow);\n            }\n            if (this.previousPane.previousElementSibling && !this.previousPane.previousElementSibling.classList.contains(COLLAPSE_PANE)) {\n                if (this.previousPane.classList.contains(COLLAPSE_PANE) && this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.showTargetBarIcon(this.prevBar, this.leftArrow);\n                }\n                else if (!this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.leftArrow);\n                }\n            }\n            if (!isNullOrUndefined(this.prevBar)) {\n                this.resizableModel(this.currentBarIndex - 1, false);\n                this.hideTargetBarIcon(this.prevBar, this.arrow);\n            }\n            if (!this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n            }\n        }\n        else if (!this.splitInstance.prevPaneCollapsed && !this.splitInstance.nextPaneExpanded) {\n            this.resizableModel(this.currentBarIndex, true);\n            if (!this.splitInstance.nextPaneNextEle.classList.contains(COLLAPSE_PANE)) {\n                this.resizableModel(this.currentBarIndex + 1, true);\n            }\n            if (!this.paneSettings[this.currentBarIndex].collapsible) {\n                addClass([e.target], HIDE_ICON);\n            }\n            if (this.previousPane && this.prevPaneIndex === 0 && (this.paneSettings[this.prevPaneIndex].collapsible)) {\n                this.showTargetBarIcon(this.currentSeparator, this.leftArrow);\n            }\n            if (this.nextPane && this.nextPaneIndex === this.allPanes.length - 1 && (this.paneSettings[this.nextPaneIndex].collapsible)) {\n                this.showTargetBarIcon(this.getPrevBar(this.nextPaneIndex), this.rightArrow);\n            }\n            if (!(this.previousPane.classList.contains(COLLAPSE_PANE)) && this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showTargetBarIcon(this.currentSeparator, this.rightArrow);\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                if (this.nextPane.nextElementSibling && (this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) &&\n                    this.paneSettings[this.nextPaneIndex + 1].collapsible) ||\n                    (!this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) &&\n                        this.paneSettings[this.nextPaneIndex].collapsible)) {\n                    this.showTargetBarIcon(this.nextBar, this.leftArrow);\n                }\n                else if (!this.paneSettings[this.splitInstance.nextPaneIndex + 1].collapsible &&\n                    this.paneSettings[this.currentBarIndex]) {\n                    this.hideTargetBarIcon(this.nextBar, this.arrow);\n                }\n            }\n            if (!(this.nextPaneIndex === this.allPanes.length - 1) && this.nextPane.nextElementSibling &&\n                !this.nextPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE)\n                && !this.paneSettings[this.nextPaneIndex + 1].collapsible) {\n                this.hideTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.collapseAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var eventArgs = this.beforeAction(e);\n        if (this.collapseFlag) {\n            this.collapsePane(e);\n        }\n        else {\n            this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n                if (!beforeCollapseArgs.cancel) {\n                    _this.collapsePane(e);\n                    var collapseEventArgs = _this.afterAction(e);\n                    _this.trigger('collapsed', collapseEventArgs);\n                }\n            });\n        }\n    };\n    Splitter.prototype.collapsePane = function (e) {\n        var collapseCount = this.element.querySelectorAll('.' + COLLAPSE_PANE).length;\n        var flexStatus = (this.previousPane.classList.contains(STATIC_PANE) &&\n            !this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            this.nextPane.nextElementSibling.classList.contains(PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(STATIC_PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) &&\n            !(collapseCount === this.allPanes.length - 2)) || (this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            !this.previousPane.classList.contains(STATIC_PANE) && this.nextPane.classList.contains(STATIC_PANE));\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        if (this.nextPane.classList.contains(COLLAPSE_PANE)) {\n            removeClass([this.previousPane], EXPAND_PANE);\n            removeClass([this.nextPane], collapseClass);\n            if (!this.collapseFlag) {\n                this.updatePaneSettings(this.nextPaneIndex, false);\n            }\n        }\n        else {\n            removeClass([this.previousPane], EXPAND_PANE);\n            removeClass([this.nextPane], collapseClass);\n            addClass([this.nextPane], EXPAND_PANE);\n            addClass([this.previousPane], collapseClass);\n            if (!this.collapseFlag) {\n                this.updatePaneSettings(this.prevPaneIndex, true);\n            }\n        }\n        this.updateIconsOnCollapse(e);\n        this.previousPane.setAttribute('aria-expanded', 'false');\n        this.nextPane.setAttribute('aria-expanded', 'true');\n        this.updateFlexGrow(this.checkStaticPanes());\n        if (flexStatus) {\n            this.nextPane.classList.remove(EXPAND_PANE);\n            this.nextPane.style.flexGrow = '';\n        }\n    };\n    Splitter.prototype.beforeAction = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.updatePaneSettings = function (index, collapsed) {\n        this.paneSettings[index].collapsed = collapsed;\n    };\n    Splitter.prototype.splitterProperty = function () {\n        this.splitInstance = {\n            currentBarIndex: this.currentBarIndex,\n            nextPaneCollapsible: this.nextPane.classList.contains(COLLAPSIBLE),\n            prevPaneCollapsible: this.previousPane.classList.contains(COLLAPSIBLE),\n            prevPaneExpanded: this.previousPane.classList.contains(EXPAND_PANE),\n            nextPaneExpanded: this.nextPane.classList.contains(EXPAND_PANE),\n            nextPaneCollapsed: this.nextPane.classList.contains(COLLAPSE_PANE),\n            prevPaneCollapsed: this.previousPane.classList.contains(COLLAPSE_PANE),\n            nextPaneIndex: this.getNextPaneIndex(),\n            prevPaneIndex: this.getPreviousPaneIndex(),\n            nextPaneNextEle: this.nextPane.nextElementSibling,\n            prevPanePreEle: this.previousPane.previousElementSibling,\n        };\n    };\n    Splitter.prototype.showCurrentBarIcon = function () {\n        removeClass([select('.' + this.arrow, this.currentSeparator)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnExpand = function (e) {\n        this.splitterProperty();\n        addClass([e.target], HIDE_ICON);\n        if (!this.splitInstance.prevPaneExpanded && !this.splitInstance.nextPaneCollapsed) {\n            if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            if (this.paneSettings[this.nextPaneIndex].collapsible) {\n                removeClass([e.target], HIDE_ICON);\n            }\n            this.resizableModel(this.currentBarIndex, true);\n            if (!isNullOrUndefined(this.prevBar) &&\n                !this.splitInstance.prevPanePreEle.classList.contains(COLLAPSE_PANE)) {\n                this.resizableModel(this.currentBarIndex - 1, true);\n                if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n                if (!this.paneSettings[this.currentBarIndex - 1].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.arrow);\n                    if (this.paneSettings[this.currentBarIndex].collapsible &&\n                        !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                        this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                    }\n                }\n                else if (this.paneSettings[this.currentBarIndex].collapsible &&\n                    !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n            else {\n                if (this.previousPane.previousElementSibling && this.paneSettings[this.prevPaneIndex].collapsible &&\n                    (this.previousPane.previousElementSibling.classList.contains(COLLAPSE_PANE) &&\n                        this.paneSettings[this.prevPaneIndex - 1].collapsible)) {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n                if (!this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n        }\n        else if (this.splitInstance.prevPaneExpanded && this.splitInstance.nextPaneCollapsed) {\n            this.resizableModel(this.currentBarIndex, false);\n            this.resizableModel(this.currentBarIndex + 1, false);\n            if (this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                this.hideTargetBarIcon(this.nextBar, this.arrow);\n            }\n            if (this.nextPane && this.nextPaneIndex === this.allPanes.length - 1 && (!this.paneSettings[this.nextPaneIndex].collapsible &&\n                this.splitInstance.nextPaneCollapsed)) {\n                this.hideTargetBarIcon(this.currentSeparator, this.arrow);\n            }\n            if (!(this.nextPaneIndex === this.allPanes.length - 1) && this.nextPane.nextElementSibling &&\n                this.nextPane.classList.contains(COLLAPSE_PANE) &&\n                !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE)\n                && this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.afterAction = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.currentIndex = function (e) {\n        this.currentBarIndex = this.getSeparatorIndex(e.target.parentElement);\n    };\n    Splitter.prototype.getSeparatorIndex = function (target) {\n        var separator = this.orientation === 'Horizontal' ? SPLIT_H_BAR : SPLIT_V_BAR;\n        if (this.checkBlazor() && this.allBars.length < 1) {\n            this.allBars = selectAll('.' + separator, this.element);\n        }\n        var array = [].slice.call(this.allBars);\n        return array.indexOf(target);\n    };\n    Splitter.prototype.getPrevBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar - 1)];\n        return prevbar;\n    };\n    Splitter.prototype.getNextBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar + 1)];\n        return prevbar;\n    };\n    Splitter.prototype.updateBars = function (index) {\n        this.prevBar = this.getPrevBar(index);\n        this.nextBar = this.getNextBar(index);\n    };\n    Splitter.prototype.splitterDetails = function (e) {\n        if (this.orientation === 'Horizontal') {\n            this.arrow = e.target.classList.contains(ARROW_LEFT) ? ARROW_RIGHT : ARROW_LEFT;\n        }\n        else {\n            this.arrow = e.target.classList.contains(ARROW_UP) ? ARROW_DOWN : ARROW_UP;\n        }\n        this.updateCurrentSeparator(e.target);\n        this.currentIndex(e);\n        this.updateBars(this.currentBarIndex);\n        this.getPaneDetails();\n    };\n    Splitter.prototype.triggerResizing = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        };\n        this.trigger('resizing', eventArgs);\n    };\n    Splitter.prototype.onMouseDown = function (e) {\n        var _this = this;\n        e.preventDefault();\n        var target = e.target;\n        if (target.classList.contains(NAVIGATE_ARROW)) {\n            return;\n        }\n        this.updateCurrentSeparator(target);\n        addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.updateCursorPosition(e, 'previous');\n        this.getPaneDetails();\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        for (var i = 0; i < this.element.querySelectorAll('iframe').length; i++) {\n            this.element.querySelectorAll('iframe')[i].style.pointerEvents = 'none';\n        }\n        this.trigger('resizeStart', eventArgs, function (resizeStartArgs) {\n            if (!resizeStartArgs.cancel) {\n                _this.wireResizeEvents();\n                _this.checkPaneSize(e);\n            }\n        });\n    };\n    Splitter.prototype.updatePaneFlexBasis = function (pane) {\n        var previous;\n        if (pane.style.flexBasis.indexOf('%') > 0) {\n            previous = this.removePercentageUnit(pane.style.flexBasis);\n        }\n        else {\n            if (pane.style.flexBasis !== '') {\n                previous = this.convertPixelToPercentage(this.convertPixelToNumber(pane.style.flexBasis));\n            }\n            else {\n                var offset = (this.orientation === 'Horizontal') ? (pane.offsetWidth) : (pane.offsetHeight);\n                previous = this.convertPixelToPercentage(offset);\n            }\n        }\n        return previous;\n    };\n    Splitter.prototype.removePercentageUnit = function (value) {\n        return parseFloat(value.slice(0, value.indexOf('%')));\n    };\n    Splitter.prototype.convertPercentageToPixel = function (value, targetElement) {\n        var percentage = value.toString();\n        var convertedValue;\n        if (percentage.indexOf('%') > -1) {\n            convertedValue = parseFloat(percentage.slice(0, percentage.indexOf('%')));\n            var offsetValue = void 0;\n            if (!isNullOrUndefined(targetElement)) {\n                offsetValue = this.panesDimensions[this.allPanes.indexOf(targetElement)];\n            }\n            else {\n                offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n            }\n            convertedValue = Math.ceil(offsetValue * (convertedValue / 100));\n        }\n        else {\n            convertedValue = parseInt(percentage, 10);\n        }\n        return convertedValue;\n    };\n    Splitter.prototype.convertPixelToPercentage = function (value) {\n        var offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return (value / offsetValue) * 100;\n    };\n    Splitter.prototype.convertPixelToNumber = function (value) {\n        if (value.indexOf('p') > -1) {\n            return parseFloat(value.slice(0, value.indexOf('p')));\n        }\n        else {\n            return parseFloat(value);\n        }\n    };\n    Splitter.prototype.calcDragPosition = function (rectValue, offsetValue) {\n        var separatorPosition;\n        var separator;\n        separatorPosition = this.orientation === 'Horizontal' ? (this.currentCoordinates.x - rectValue) :\n            (this.currentCoordinates.y - rectValue);\n        separator = separatorPosition / offsetValue;\n        separator = (separator > 1) ? 1 : (separator < 0) ? 0 : separator;\n        return separator * offsetValue;\n    };\n    Splitter.prototype.getSeparatorPosition = function (e) {\n        this.updateCursorPosition(e, 'current');\n        var rectBound = (this.orientation === 'Horizontal') ? this.element.getBoundingClientRect().left :\n            this.element.getBoundingClientRect().top;\n        var offSet = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return this.calcDragPosition(rectBound, offSet);\n    };\n    Splitter.prototype.getMinMax = function (paneIndex, target, selection) {\n        var defaultVal = selection === 'min' ? 0 : null;\n        // tslint:disable-next-line\n        var paneValue = null;\n        if (selection === 'min') {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n                paneValue = this.paneSettings[paneIndex].min;\n            }\n        }\n        else {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n                paneValue = this.paneSettings[paneIndex].max;\n            }\n        }\n        if (this.paneSettings.length > 0 && !isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(paneValue)) {\n            if (paneValue.indexOf('%') > 0) {\n                paneValue = this.convertPercentageToPixel(paneValue).toString();\n            }\n            return this.convertPixelToNumber(paneValue);\n        }\n        else {\n            return defaultVal;\n        }\n    };\n    Splitter.prototype.getPreviousPaneIndex = function () {\n        var prePaneIndex = ((parseInt(this.currentSeparator.style.order, 10) - 1) / 2);\n        return prePaneIndex;\n    };\n    Splitter.prototype.getNextPaneIndex = function () {\n        var nextPaneIndex = (parseInt(this.currentSeparator.style.order, 10) - 1) / (2);\n        return nextPaneIndex + 1;\n    };\n    Splitter.prototype.getPaneDetails = function () {\n        var prevPane = null;\n        var nextPane = null;\n        this.order = parseInt(this.currentSeparator.style.order, 10);\n        if (this.allPanes.length > 1) {\n            prevPane = this.getPrevPane(this.currentSeparator, this.order);\n            nextPane = this.getNextPane(this.currentSeparator, this.order);\n        }\n        if (prevPane && nextPane) {\n            this.previousPane = prevPane;\n            this.nextPane = nextPane;\n            this.prevPaneIndex = this.getPreviousPaneIndex();\n            this.nextPaneIndex = this.getNextPaneIndex();\n        }\n        else {\n            return;\n        }\n    };\n    Splitter.prototype.getPaneHeight = function (pane) {\n        return ((this.orientation === 'Horizontal') ? pane.offsetWidth.toString() :\n            pane.offsetHeight.toString());\n    };\n    Splitter.prototype.isValidSize = function (paneIndex) {\n        var isValid = false;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(this.paneSettings[paneIndex].size) &&\n            this.paneSettings[paneIndex].size.indexOf('%') > -1) {\n            isValid = true;\n        }\n        return isValid;\n    };\n    Splitter.prototype.getPaneDimensions = function () {\n        this.previousPaneHeightWidth = (this.previousPane.style.flexBasis === '') ? this.getPaneHeight(this.previousPane) :\n            this.previousPane.style.flexBasis;\n        this.nextPaneHeightWidth = (this.nextPane.style.flexBasis === '') ? this.getPaneHeight(this.nextPane) :\n            this.nextPane.style.flexBasis;\n        if (this.isValidSize(this.prevPaneIndex)) {\n            this.previousPaneHeightWidth = this.convertPercentageToPixel(this.previousPaneHeightWidth).toString();\n            this.updatePrePaneInPercentage = true;\n        }\n        if (this.isValidSize(this.nextPaneIndex)) {\n            this.nextPaneHeightWidth = this.convertPercentageToPixel(this.nextPaneHeightWidth).toString();\n            this.updateNextPaneInPercentage = true;\n        }\n        this.prePaneDimenson = this.convertPixelToNumber(this.previousPaneHeightWidth.toString());\n        this.nextPaneDimension = this.convertPixelToNumber(this.nextPaneHeightWidth.toString());\n    };\n    Splitter.prototype.checkCoordinates = function (pageX, pageY) {\n        var coordinatesChanged = true;\n        if ((pageX === this.previousCoordinates.x || pageY === this.previousCoordinates.y)) {\n            coordinatesChanged = false;\n        }\n        return coordinatesChanged;\n    };\n    Splitter.prototype.isCursorMoved = function (e) {\n        var cursorMoved = true;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType)) &&\n            this.getEventType(e.pointerType) === 'mouse') {\n            cursorMoved = this.checkCoordinates(e.pageX, e.pageY);\n        }\n        else {\n            cursorMoved = (Browser.info.name !== 'msie') ?\n                this.checkCoordinates(e.touches[0].pageX, e.touches[0].pageY) :\n                this.checkCoordinates(e.pageX, e.pageY);\n        }\n        return cursorMoved;\n    };\n    Splitter.prototype.getBorder = function () {\n        this.border = 0;\n        var border = this.orientation === 'Horizontal' ? ((this.element.offsetWidth - this.element.clientWidth) / 2) :\n            (this.element.offsetHeight - this.element.clientHeight) / 2;\n        this.border = Browser.info.name !== 'chrome' ? this.border : border;\n    };\n    Splitter.prototype.onMouseMove = function (e) {\n        if (!this.isCursorMoved(e)) {\n            return;\n        }\n        this.getPaneDetails();\n        this.getPaneDimensions();\n        this.triggerResizing(e);\n        var left = this.validateDraggedPosition(this.getSeparatorPosition(e), this.prePaneDimenson, this.nextPaneDimension);\n        var separatorNewPosition;\n        this.getBorder();\n        if (this.orientation === 'Horizontal') {\n            separatorNewPosition = (this.element.getBoundingClientRect().left + left) -\n                this.currentSeparator.getBoundingClientRect().left + this.border;\n        }\n        else {\n            separatorNewPosition = (this.element.getBoundingClientRect().top + left) -\n                this.currentSeparator.getBoundingClientRect().top + this.border;\n        }\n        this.nextPaneHeightWidth =\n            (typeof (this.nextPaneHeightWidth) === 'string' && this.nextPaneHeightWidth.indexOf('p') > -1) ?\n                this.convertPixelToNumber(this.nextPaneHeightWidth) : parseInt(this.nextPaneHeightWidth, 10);\n        this.prevPaneCurrentWidth = separatorNewPosition + this.convertPixelToNumber(this.previousPaneHeightWidth);\n        this.nextPaneCurrentWidth = this.nextPaneHeightWidth - separatorNewPosition;\n        this.validateMinMaxValues();\n        if (this.nextPaneCurrentWidth < 0) {\n            this.nextPaneCurrentWidth = 0;\n        }\n        /* istanbul ignore next */\n        if (this.prevPaneCurrentWidth < 0) {\n            this.prevPaneCurrentWidth = 0;\n        }\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) > this.totalWidth) {\n            if (this.nextPaneCurrentWidth < this.prevPaneCurrentWidth) {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n            else {\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n        }\n        /* istanbul ignore next */\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) < this.totalWidth) {\n            var difference = this.totalWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth));\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + difference;\n        }\n        this.calculateCurrentDimensions();\n        this.addStaticPaneClass();\n        this.previousPane.style.flexBasis = this.prevPaneCurrentWidth;\n        this.nextPane.style.flexBasis = this.nextPaneCurrentWidth;\n    };\n    Splitter.prototype.validateMinRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMinRange = null;\n        var paneMinDimensions;\n        var difference = 0;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n            paneMinRange = this.paneSettings[paneIndex].min.toString();\n        }\n        if (!isNullOrUndefined(paneMinRange)) {\n            if (paneMinRange.indexOf('%') > 0) {\n                paneMinRange = this.convertPercentageToPixel(paneMinRange).toString();\n            }\n            paneMinDimensions = this.convertPixelToNumber(paneMinRange);\n            if (paneCurrentWidth < paneMinDimensions) {\n                difference = (paneCurrentWidth - paneMinDimensions) <= 0 ? 0 :\n                    (paneCurrentWidth - paneMinDimensions);\n                this.totalWidth = this.totalWidth - difference;\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMinDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMaxRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMaxRange = null;\n        var paneMaxDimensions;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n            paneMaxRange = this.paneSettings[paneIndex].max.toString();\n        }\n        if (!isNullOrUndefined(paneMaxRange)) {\n            if (paneMaxRange.indexOf('%') > 0) {\n                paneMaxRange = this.convertPercentageToPixel(paneMaxRange).toString();\n            }\n            paneMaxDimensions = this.convertPixelToNumber(paneMaxRange);\n            if (paneCurrentWidth > paneMaxDimensions) {\n                this.totalWidth = this.totalWidth - (paneCurrentWidth - paneMaxDimensions);\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMaxDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMinMaxValues = function () {\n        //validate previous pane minimum range\n        this.prevPaneCurrentWidth = this.validateMinRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // Validate next pane minimum range\n        this.nextPaneCurrentWidth = this.validateMinRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n        // validate previous pane maximum range\n        this.prevPaneCurrentWidth = this.validateMaxRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // validate next pane maximum range\n        this.nextPaneCurrentWidth = this.validateMaxRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n    };\n    Splitter.prototype.equatePaneWidths = function () {\n        var difference;\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) > this.totalPercent) {\n            difference = (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) - this.totalPercent;\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - (difference / 2) + '%';\n        }\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) < this.totalPercent) {\n            difference = this.totalPercent - (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth);\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + (difference / 2) + '%';\n        }\n    };\n    Splitter.prototype.calculateCurrentDimensions = function () {\n        if (this.updatePrePaneInPercentage || this.updateNextPaneInPercentage) {\n            this.prevPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.prevPaneCurrentWidth)\n                * 10) / 10));\n            this.nextPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.nextPaneCurrentWidth)\n                * 10) / 10));\n            if (this.prevPaneCurrentWidth === 0) {\n                this.nextPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.nextPaneCurrentWidth === 0) {\n                this.prevPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth !== this.totalPercent) {\n                this.equatePaneWidths();\n            }\n            else {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + '%';\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + '%';\n            }\n            this.prevPaneCurrentWidth = (this.updatePrePaneInPercentage) ? this.prevPaneCurrentWidth :\n                this.convertPercentageToPixel(this.prevPaneCurrentWidth) + 'px';\n            this.nextPaneCurrentWidth = (this.updateNextPaneInPercentage) ? this.nextPaneCurrentWidth :\n                this.convertPercentageToPixel(this.nextPaneCurrentWidth) + 'px';\n            this.updatePrePaneInPercentage = false;\n            this.updateNextPaneInPercentage = false;\n        }\n        else {\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + 'px';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + 'px';\n        }\n    };\n    Splitter.prototype.addStaticPaneClass = function () {\n        if (!this.previousPane.classList.contains(STATIC_PANE)) {\n            this.previousPane.classList.add(STATIC_PANE);\n        }\n        if (!this.nextPane.classList.contains(STATIC_PANE)) {\n            this.nextPane.classList.add(STATIC_PANE);\n        }\n    };\n    Splitter.prototype.validateDraggedPosition = function (draggedPos, prevPaneHeightWidth, nextPaneHeightWidth) {\n        var separatorTopLeft = (this.orientation === 'Horizontal') ? this.currentSeparator.offsetLeft :\n            this.currentSeparator.offsetTop;\n        var prePaneRange = separatorTopLeft - prevPaneHeightWidth;\n        var nextPaneRange = nextPaneHeightWidth + separatorTopLeft;\n        var pane1MinSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'min');\n        var pane2MinSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'min');\n        var pane1MaxSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'max');\n        var pane2MaxSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'max');\n        var validatedSize = draggedPos;\n        if (draggedPos > nextPaneRange - pane2MinSize) {\n            validatedSize = nextPaneRange - pane2MinSize;\n        }\n        else if (draggedPos < prePaneRange + pane1MinSize) {\n            validatedSize = prePaneRange + pane1MinSize;\n        }\n        if (!isNullOrUndefined(pane1MaxSize)) {\n            if (draggedPos > prePaneRange + pane1MaxSize) {\n                validatedSize = prePaneRange + pane1MaxSize;\n            }\n        }\n        else if (!isNullOrUndefined(pane2MaxSize)) {\n            if (draggedPos < nextPaneRange - pane2MaxSize) {\n                validatedSize = nextPaneRange - pane2MaxSize;\n            }\n        }\n        return validatedSize;\n    };\n    Splitter.prototype.onMouseUp = function (e) {\n        removeClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.unwireResizeEvents();\n        var eventArgs = isBlazor() ? {\n            event: e,\n            element: this.element,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        } : {\n            event: e,\n            element: this.element,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        };\n        for (var i = 0; i < this.element.querySelectorAll('iframe').length; i++) {\n            this.element.querySelectorAll('iframe')[i].style.pointerEvents = 'auto';\n        }\n        this.trigger('resizeStop', eventArgs);\n    };\n    Splitter.prototype.panesDimension = function (index, child) {\n        var childCount = child.length;\n        var size;\n        parseInt(this.getHeight(this.element), 10);\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].size)) {\n                size = this.paneSettings[index].size;\n                if (index < childCount) {\n                    setStyleAttribute(child[index], { 'flex-basis': size, 'order': index * 2 });\n                    if (index < childCount - 1 && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                    else if (!this.sizeFlag) {\n                        child[index].style.flexBasis = null;\n                    }\n                    if ((index === childCount - 1) && this.sizeFlag && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                }\n            }\n            else {\n                this.sizeFlag = true;\n                setStyleAttribute(child[index], { 'order': index * 2 });\n            }\n        }\n        else {\n            setStyleAttribute(child[index], { 'order': index * 2 });\n        }\n        this.paneOrder.push(index * 2);\n    };\n    Splitter.prototype.setTemplate = function (template, toElement) {\n        toElement.innerHTML = '';\n        template = typeof (template) === 'string' ? this.sanitizeHelper(template) : template;\n        this.templateCompile(toElement, template);\n    };\n    // tslint:disable-next-line\n    Splitter.prototype.templateCompile = function (ele, cnt) {\n        var blazorContain = Object.keys(window);\n        var tempEle = this.createElement('div');\n        this.compileElement(tempEle, cnt, 'content');\n        if (tempEle.childNodes.length !== 0) {\n            [].slice.call(tempEle.childNodes).forEach(function (childEle) {\n                ele.appendChild(childEle);\n            });\n        }\n    };\n    Splitter.prototype.compileElement = function (ele, val, prop) {\n        var blazorContain = Object.keys(window);\n        if (typeof (val) === 'string') {\n            if (val[0] === '.' || val[0] === '#') {\n                var eleVal = document.querySelector(val);\n                if (!isNullOrUndefined(eleVal)) {\n                    this.templateElement.push(eleVal);\n                    if (eleVal.style.display === 'none') {\n                        eleVal.style.removeProperty('display');\n                    }\n                    if (eleVal.getAttribute('style') === '') {\n                        eleVal.removeAttribute('style');\n                    }\n                    ele.appendChild(eleVal);\n                    return;\n                }\n                else {\n                    val = val.trim();\n                }\n            }\n            else {\n                val = val.trim();\n            }\n        }\n        var templateFn;\n        if (!isNullOrUndefined(val.outerHTML)) {\n            templateFn = compile(val.outerHTML);\n        }\n        else {\n            templateFn = compile(val);\n        }\n        var templateFUN;\n        if (!isNullOrUndefined(templateFn)) {\n            if (isBlazor() && !this.isStringTemplate) {\n                templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), this.isStringTemplate);\n            }\n            else {\n                templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), true);\n            }\n        }\n        if (!isNullOrUndefined(templateFn) && templateFUN.length > 0) {\n            [].slice.call(templateFUN).forEach(function (el) {\n                ele.appendChild(el);\n            });\n        }\n    };\n    Splitter.prototype.paneCollapsible = function (pane, index) {\n        this.paneSettings[index].collapsible ? addClass([pane], COLLAPSIBLE) : removeClass([pane], COLLAPSIBLE);\n    };\n    Splitter.prototype.createSplitPane = function (target) {\n        var childCount = target.children.length;\n        if (!this.checkBlazor()) {\n            for (var i = 0; i < this.paneSettings.length; i++) {\n                if (childCount < this.paneSettings.length) {\n                    var childElement = this.createElement('div');\n                    this.element.appendChild(childElement);\n                    childCount = childCount + 1;\n                }\n            }\n        }\n        childCount = target.children.length;\n        var child = [].slice.call(target.children);\n        this.sizeFlag = false;\n        if (childCount > 0) {\n            for (var i = 0; i < childCount; i++) {\n                // To accept only div and span element as pane\n                if (child[i].nodeName === 'DIV' || child[i].nodeName === 'SPAN') {\n                    if (this.checkBlazor() && child[i].classList.contains(PANE)) {\n                        this.allPanes.push(child[i]);\n                    }\n                    else if (!this.checkBlazor()) {\n                        this.allPanes.push(child[i]);\n                    }\n                    if (!this.checkBlazor()) {\n                        if (this.orientation === 'Horizontal') {\n                            addClass([child[i]], [PANE, SPLIT_H_PANE, SCROLL_PANE]);\n                            this.panesDimension(i, child);\n                        }\n                        else {\n                            addClass([child[i]], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n                            this.panesDimension(i, child);\n                        }\n                        if (!isNullOrUndefined(this.paneSettings[i]) && !isNullOrUndefined(this.paneSettings[i].content)) {\n                            this.setTemplate(this.paneSettings[i].content, child[i]);\n                        }\n                        if (!isNullOrUndefined(this.paneSettings[i]) && this.paneSettings[i].cssClass) {\n                            this.setCssClass(child[i], this.paneSettings[i].cssClass);\n                        }\n                        if (!isNullOrUndefined(this.paneSettings[i])) {\n                            this.paneCollapsible(child[i], i);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    ;\n    /**\n     * expands corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be expanded at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.expand = function (index) {\n        this.collapsedOnchange(index);\n        this.updatePaneSettings(index, false);\n    };\n    /**\n     * collapses corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be collapsed at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.collapse = function (index) {\n        this.isCollapsed(index);\n        this.updatePaneSettings(index, true);\n    };\n    /**\n     * Removes the control from the DOM and also removes all its related events.\n     * @returns void\n     */\n    Splitter.prototype.destroy = function () {\n        if (!this.isDestroyed) {\n            if (!this.checkBlazor()) {\n                _super.prototype.destroy.call(this);\n            }\n            EventHandler.remove(document, 'touchstart click', this.onDocumentClick);\n            while (this.element.attributes.length > 0) {\n                this.element.removeAttribute(this.element.attributes[0].name);\n            }\n            if (this.checkBlazor()) {\n                var splitNodes = this.element.children;\n                for (var i = splitNodes.length - 1; i >= 0; i--) {\n                    detach(splitNodes[i]);\n                }\n            }\n            else {\n                this.element.innerHTML = this.wrapper.innerHTML;\n                for (var i = 0; i < this.wrapper.attributes.length; i++) {\n                    this.element.setAttribute(this.wrapper.attributes[i].name, this.wrapper.attributes[i].value);\n                }\n            }\n            if (this.refreshing) {\n                addClass([this.element], ['e-control', 'e-lib', ROOT]);\n                this.allBars = [];\n                this.allPanes = [];\n            }\n            this.restoreElem();\n        }\n    };\n    Splitter.prototype.restoreElem = function () {\n        if (this.templateElement.length > 0) {\n            for (var i = 0; i < this.templateElement.length; i++) {\n                this.templateElement[i].style.display = 'none';\n                document.body.appendChild(this.templateElement[i]);\n            }\n        }\n    };\n    Splitter.prototype.addPaneClass = function (pane) {\n        this.orientation === 'Horizontal' ? addClass([pane], [PANE, SPLIT_H_PANE, SCROLL_PANE]) :\n            addClass([pane], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n        return pane;\n    };\n    Splitter.prototype.removePaneOrders = function (paneClass) {\n        var panes = document.querySelectorAll('.' + paneClass);\n        for (var i = 0; i < panes.length; i++) {\n            panes[i].style.removeProperty('order');\n        }\n    };\n    Splitter.prototype.setPaneOrder = function () {\n        for (var i = 0; i < this.allPanes.length; i++) {\n            this.panesDimension(i, this.allPanes);\n        }\n    };\n    Splitter.prototype.removeSeparator = function () {\n        for (var i = 0; i < this.allBars.length; i++) {\n            detach(this.allBars[i]);\n        }\n        this.allBars = [];\n    };\n    Splitter.prototype.updatePanes = function () {\n        this.setPaneOrder();\n        this.removeSeparator();\n        this.addSeparator(this.element);\n    };\n    /**\n     * Allows you to add a pane dynamically to the specified index position by passing the pane properties.\n     * @param { PanePropertiesModel } paneProperties - Specifies the pane’s properties that apply to new pane.\n     * @param { number } index - Specifies the index where the pane will be inserted.\n     * @returns void\n     */\n    Splitter.prototype.addPane = function (paneProperties, index) {\n        var newPane = this.createElement('div');\n        newPane = this.addPaneClass(newPane);\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var paneDetails = {\n            size: isNullOrUndefined(paneProperties.size) ? '' : paneProperties.size,\n            min: isNullOrUndefined(paneProperties.min) ? null : paneProperties.min,\n            max: isNullOrUndefined(paneProperties.max) ? null : paneProperties.max,\n            content: isNullOrUndefined(paneProperties.content) ? '' : paneProperties.content,\n            resizable: isNullOrUndefined(paneProperties.resizable) ? true : paneProperties.resizable,\n            collapsible: isNullOrUndefined(paneProperties.collapsible) ? false : paneProperties.collapsible,\n            collapsed: isNullOrUndefined(paneProperties.collapsed) ? false : paneProperties.collapsed,\n            cssClass: isNullOrUndefined(paneProperties.cssClass) ? '' : paneProperties.cssClass\n        };\n        this.paneSettings.splice(index, 0, paneDetails);\n        this.setProperties({ 'paneSettings': this.paneSettings }, true);\n        if (this.orientation === 'Horizontal') {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_H_PANE)[index]);\n            this.removePaneOrders(SPLIT_H_PANE);\n        }\n        else {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_V_PANE)[index]);\n            this.removePaneOrders(SPLIT_V_PANE);\n        }\n        this.allPanes.splice(index, 0, newPane);\n        this.updatePanes();\n        this.setTemplate(this.paneSettings[index].content, newPane);\n        this.setCssClass(this.allPanes[index], paneProperties.cssClass);\n        this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n    };\n    /**\n     * Allows you to remove the specified pane dynamically by passing its index value.\n     * @param { number } index - Specifies the index value to remove the corresponding pane.\n     * @returns void\n     */\n    Splitter.prototype.removePane = function (index) {\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var elementClass = (this.orientation === 'Horizontal') ? SPLIT_H_PANE : SPLIT_V_PANE;\n        if (isNullOrUndefined(this.element.querySelectorAll('.' + elementClass)[index])) {\n            return;\n        }\n        detach(this.element.querySelectorAll('.' + elementClass)[index]);\n        this.allPanes.splice(index, 1);\n        this.removePaneOrders(elementClass);\n        this.updatePanes();\n        this.paneSettings.splice(index, 1);\n        this.setProperties({ 'paneSettings': this.paneSettings }, true);\n        if (this.allPanes.length > 0) {\n            this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n        }\n    };\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"height\", void 0);\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"width\", void 0);\n    __decorate([\n        Collection([], PaneProperties)\n    ], Splitter.prototype, \"paneSettings\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Splitter.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('')\n    ], Splitter.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate([\n        Property(null)\n    ], Splitter.prototype, \"separatorSize\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeSanitizeHtml\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeCollapse\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeExpand\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"expanded\", void 0);\n    Splitter = __decorate([\n        NotifyPropertyChanges\n    ], Splitter);\n    return Splitter;\n}(Component));\nexport { Splitter };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, NotifyPropertyChanges, isUndefined } from '@syncfusion/ej2-base';\nimport { Collection, Draggable, isNullOrUndefined, append, updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Event, formatUnit, ChildProperty, compile, closest, isBlazor, SanitizeHtmlHelper } from '@syncfusion/ej2-base';\nimport { setStyleAttribute as setStyle, addClass, detach, removeClass, EventHandler, Browser } from '@syncfusion/ej2-base';\n// constant class definitions\nvar preventSelect = 'e-prevent';\nvar dragging = 'e-dragging';\nvar draggable = 'e-draggable';\nvar drag = 'e-drag';\nvar resize = 'e-resize';\nvar resizeicon = 'e-dl-icon';\nvar responsive = 'e-responsive';\nvar east = 'e-east';\nvar west = 'e-west';\nvar north = 'e-north';\nvar south = 'e-south';\nvar single = 'e-single';\nvar double = 'e-double';\nvar northEast = 'e-north-east';\nvar southEast = 'e-south-east';\nvar northWest = 'e-north-west';\nvar southWest = 'e-south-west';\nvar panel = 'e-panel';\nvar panelContent = 'e-panel-content';\nvar panelContainer = 'e-panel-container';\nvar disable = 'e-disabled';\nvar header = 'e-panel-header';\nvar panelTransition = 'e-panel-transition';\n/**\n * Defines the panel of the DashboardLayout component.\n */\nvar Panel = /** @class */ (function (_super) {\n    __extends(Panel, _super);\n    function Panel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"header\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"content\", void 0);\n    __decorate([\n        Property(true)\n    ], Panel.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"row\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"col\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeX\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeX\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeY\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeX\", void 0);\n    __decorate([\n        Property(1000)\n    ], Panel.prototype, \"zIndex\", void 0);\n    return Panel;\n}(ChildProperty));\nexport { Panel };\n/**\n * The DashboardLayout is a grid structured layout control, that helps to create a dashboard with panels.\n * Panels hold the UI components or data to be visualized with flexible options like resize, reorder, drag-n-drop, remove and add,\n * that allows users to easily place the panels at a desired position within the grid layout.\n * ```html\n * <div id=\"default-layout\">\n * ```\n * ```typescript\n * <script>\n *   let dashBoardObject : DashboardLayout = new DashboardLayout();\n *   dashBoardObject.appendTo('#default-layout');\n * </script>\n * ```\n */\nvar DashboardLayout = /** @class */ (function (_super) {\n    __extends(DashboardLayout, _super);\n    function DashboardLayout(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.rows = 1;\n        _this.panelID = 0;\n        _this.movePanelCalled = false;\n        _this.resizeCalled = false;\n        _this.mOffX = 0;\n        _this.mOffY = 0;\n        _this.maxTop = 9999;\n        _this.maxRows = 100;\n        _this.mouseX = 0;\n        _this.mouseY = 0;\n        _this.minTop = 0;\n        _this.minLeft = 0;\n        _this.isBlazor = false;\n        _this.isInlineRendering = false;\n        _this.removeAllCalled = false;\n        return _this;\n    }\n    /**\n     * Initialize the event handler\n     * @private\n     */\n    DashboardLayout.prototype.preRender = function () {\n        this.isBlazor = (isBlazor() && this.isServerRendered);\n        this.panelCollection = [];\n        this.sortedArray = [];\n        this.gridPanelCollection = [];\n        this.overlapElement = [];\n        this.overlapElementClone = [];\n        this.overlapSubElementClone = [];\n        this.collisionChecker = {};\n        this.dragCollection = [];\n        this.elementRef = { top: '', left: '', height: '', width: '' };\n        this.dimensions = [];\n        this.allItems = [];\n        this.oldRowCol = {};\n        this.availableClasses = [];\n        this.setOldRowCol();\n        this.calculateCellSize();\n        this.contentTemplateChild = [].slice.call(this.element.children);\n    };\n    DashboardLayout.prototype.setOldRowCol = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (!this.panels[i].id) {\n                this.panelPropertyChange(this.panels[i], { id: 'layout_' + this.panelID.toString() });\n                this.panelID = this.panelID + 1;\n            }\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n    };\n    DashboardLayout.prototype.createPanelElement = function (cssClass, idValue) {\n        var ele = this.createElement('div');\n        if (cssClass) {\n            addClass([ele], [cssClass]);\n        }\n        if (idValue) {\n            ele.setAttribute('id', idValue);\n        }\n        return ele;\n    };\n    /**\n     * To Initialize the control rendering.\n     * @returns void\n     * @private\n     */\n    DashboardLayout.prototype.render = function () {\n        this.initialize();\n        this.isRenderComplete = true;\n        if (this.showGridLines && !this.checkMediaQuery()) {\n            this.initGridLines();\n        }\n        this.updateDragArea();\n        this.renderComplete();\n        this.updateServerPanelData();\n    };\n    DashboardLayout.prototype.updateServerPanelData = function () {\n        if (isBlazor() && this.isServerRendered) {\n            this.setProperties({ panels: this.panels }, true);\n            this.allowServerDataBinding = true;\n            this.serverDataBind();\n        }\n    };\n    DashboardLayout.prototype.initGridLines = function () {\n        this.table = document.createElement('table');\n        var tbody = document.createElement('tbody');\n        this.table.classList.add('e-dashboard-gridline-table');\n        for (var i = 0; i < this.maxRow(); i++) {\n            var tr = document.createElement('tr');\n            for (var j = 0; j < this.columns; j++) {\n                var td = document.createElement('td');\n                td.classList.add('e-dashboard-gridline');\n                this.setAttributes({ value: { row: i.toString(), col: j.toString(), sizeX: '1', sizeY: '1' } }, td);\n                td.setAttribute('id', '' + j);\n                this.setPanelPosition(td, i, j);\n                this.setHeightAndWidth(td, { row: i, col: j, sizeX: 1, sizeY: 1 });\n                tr.appendChild(td);\n            }\n            tbody.appendChild(tr);\n        }\n        this.table.appendChild(tbody);\n        this.element.appendChild(this.table);\n    };\n    DashboardLayout.prototype.initialize = function () {\n        this.updateRowHeight();\n        if (this.element.childElementCount > 0 && this.element.querySelectorAll('.e-panel').length > 0\n            && !(this.isBlazor && this.panels.length > 0)) {\n            var panelElements = [];\n            this.setProperties({ panels: [] }, true);\n            this.isInlineRendering = true;\n            for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                panelElements.push((this.element.querySelectorAll('.e-panel')[i]));\n            }\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                if (this.enableRtl) {\n                    addClass([panelElement], 'e-rtl');\n                }\n                this.getInlinePanels(panelElement);\n                this.maxCol();\n                this.maxRow();\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                var panelElement = this.element.querySelector('#' + this.panels[i].id);\n                this.setMinMaxValues(this.panels[i]);\n                if (this.maxColumnValue < this.panels[i].col || this.maxColumnValue < (this.panels[i].col + this.panels[i].sizeX)) {\n                    var colValue = this.maxColumnValue - this.panels[i].sizeX;\n                    this.panelPropertyChange(this.panels[i], { col: colValue < 0 ? 0 : colValue });\n                }\n                this.setXYAttributes(panelElement, this.panels[i]);\n                this.isBlazor = false;\n                var panel_1 = this.renderPanels(panelElement, this.panels[i], this.panels[i].id, false);\n                this.isBlazor = (isBlazor() && this.isServerRendered);\n                this.panelCollection.push(panel_1);\n                this.setHeightAndWidth(panelElement, this.panels[i]);\n                this.tempObject = this;\n                if (this.mediaQuery && !window.matchMedia('(' + this.mediaQuery + ')').matches) {\n                    this.setPanelPosition(panelElement, this.panels[i].row, this.panels[i].col);\n                    this.mainElement = panelElement;\n                    this.updatePanelLayout(panelElement, this.panels[i]);\n                    this.mainElement = null;\n                }\n                this.setClasses([panelElement]);\n            }\n            if (this.checkMediaQuery()) {\n                this.checkMediaQuerySizing();\n            }\n        }\n        else {\n            this.renderDashBoardCells(this.panels);\n        }\n        if (this.allowDragging && (this.mediaQuery ? !window.matchMedia('(' + this.mediaQuery + ')').matches : true)) {\n            this.enableDraggingContent(this.panelCollection);\n        }\n        this.sortedPanel();\n        this.bindEvents();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkColumnValue = this.maxColumnValue;\n        if (!(this.checkMediaQuery())) {\n            this.panelResponsiveUpdate();\n        }\n        if (!this.isBlazor) {\n            this.setEnableRtl();\n        }\n    };\n    DashboardLayout.prototype.checkMediaQuery = function () {\n        return (this.mediaQuery && window.matchMedia('(' + this.mediaQuery + ')').matches);\n    };\n    DashboardLayout.prototype.calculateCellSize = function () {\n        this.cellSize = [];\n        if ((this.checkMediaQuery())) {\n            this.cellSize[1] = this.element.parentElement\n                && Math.floor((this.element.parentElement.offsetWidth)) / this.cellAspectRatio;\n        }\n        else {\n            this.cellSize[0] = this.element.parentElement &&\n                Math.floor((this.element.parentElement.offsetWidth));\n            this.cellSize[0] = this.element.parentElement\n                && Math.floor((this.element.parentElement.offsetWidth - ((this.maxCol() - 1) * this.cellSpacing[0]))\n                    / (this.maxCol()));\n            this.cellSize[1] = this.cellSize[0] / this.cellAspectRatio;\n        }\n    };\n    DashboardLayout.prototype.maxRow = function (recheck) {\n        var maxRow = 1;\n        if (this.rows > 1 && isNullOrUndefined(recheck)) {\n            maxRow = this.rows;\n            return maxRow;\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].sizeY + this.panels[i].row > maxRow) {\n                maxRow = this.panels[i].sizeY + this.panels[i].row;\n            }\n        }\n        if (this.panels.length === 0) {\n            maxRow = this.columns;\n        }\n        return maxRow;\n    };\n    DashboardLayout.prototype.maxCol = function () {\n        var maxCol = 1;\n        maxCol = this.columns;\n        this.maxColumnValue = maxCol;\n        return maxCol;\n    };\n    DashboardLayout.prototype.updateOldRowColumn = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            var id = this.panels[i].id;\n            if (document.getElementById(id)) {\n                var row = parseInt(document.getElementById(id).getAttribute('data-row'), 10);\n                var col = parseInt(document.getElementById(id).getAttribute('data-col'), 10);\n                this.oldRowCol[this.panels[i].id] = { row: row, col: col };\n            }\n            else {\n                continue;\n            }\n        }\n    };\n    DashboardLayout.prototype.createSubElement = function (cssClass, idValue, className) {\n        var element = this.createElement('div');\n        if (className) {\n            addClass([element], [className]);\n        }\n        if (cssClass) {\n            addClass([element], [cssClass]);\n        }\n        if (idValue) {\n            element.setAttribute('id', idValue);\n        }\n        return element;\n    };\n    DashboardLayout.prototype.templateParser = function (template) {\n        if (template) {\n            try {\n                if (document.querySelectorAll(template).length) {\n                    return compile(document.querySelector(template).innerHTML.trim());\n                }\n            }\n            catch (error) {\n                var sanitizedValue = SanitizeHtmlHelper.sanitize(template);\n                return compile((this.enableHtmlSanitizer && typeof (template) === 'string') ? sanitizedValue : template);\n            }\n        }\n        return undefined;\n    };\n    DashboardLayout.prototype.renderTemplate = function (content, appendElement, type, isStringTemplate) {\n        var templateFn = this.templateParser(content);\n        var templateElements = [];\n        for (var _i = 0, _a = templateFn({}, null, null, type, isStringTemplate); _i < _a.length; _i++) {\n            var item = _a[_i];\n            templateElements.push(item);\n        }\n        append([].slice.call(templateElements), appendElement);\n    };\n    DashboardLayout.prototype.renderPanels = function (cellElement, panelModel, panelId, isStringTemplate) {\n        if (!this.isBlazor) {\n            addClass([cellElement], [panel, panelTransition]);\n        }\n        this.panelContent = cellElement.querySelector('.e-panel-container') ?\n            cellElement.querySelector('.e-panel-container') :\n            this.createSubElement(panelModel.cssClass, cellElement.id + '_content', panelContainer);\n        if (!this.isBlazor) {\n            cellElement.appendChild(this.panelContent);\n            if (!panelModel.enabled) {\n                this.disablePanel(cellElement);\n            }\n        }\n        if (panelModel.header) {\n            var headerTemplateElement = cellElement.querySelector('.e-panel-header') ?\n                cellElement.querySelector('.e-panel-header') : this.createSubElement('', cellElement.id + 'template', '');\n            if (!this.isBlazor) {\n                addClass([headerTemplateElement], [header]);\n            }\n            if (!cellElement.querySelector('.e-panel-header') && !this.isBlazor) {\n                var id = this.element.id + 'HeaderTemplate' + panelId;\n                this.renderTemplate(panelModel.header, headerTemplateElement, id, isStringTemplate);\n                this.panelContent.appendChild(headerTemplateElement);\n                updateBlazorTemplate(id, 'HeaderTemplate', panelModel);\n            }\n        }\n        if (panelModel.content) {\n            this.panelBody = cellElement.querySelector('.e-panel-content') ? cellElement.querySelector('.e-panel-content') :\n                this.createSubElement(panelModel.cssClass, cellElement.id + '_body', panelContent);\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            if (!cellElement.querySelector('.e-panel-content') && !this.isBlazor) {\n                var id = this.element.id + 'ContentTemplate' + panelId;\n                this.renderTemplate(panelModel.content, this.panelBody, id, isStringTemplate);\n                this.panelContent.appendChild(this.panelBody);\n                updateBlazorTemplate(id, 'ContentTemplate', panelModel);\n            }\n        }\n        return cellElement;\n    };\n    DashboardLayout.prototype.disablePanel = function (panelElement) {\n        addClass([panelElement], [disable]);\n    };\n    DashboardLayout.prototype.getInlinePanels = function (panelElement) {\n        var model = {\n            sizeX: panelElement.hasAttribute('data-sizex') ? parseInt(panelElement.getAttribute('data-sizex'), 10) : 1,\n            sizeY: panelElement.hasAttribute('data-sizey') ? parseInt(panelElement.getAttribute('data-sizey'), 10) : 1,\n            minSizeX: panelElement.hasAttribute('data-minsizex') ? parseInt(panelElement.getAttribute('data-minsizex'), 10) : 1,\n            minSizeY: panelElement.hasAttribute('data-minsizey') ? parseInt(panelElement.getAttribute('data-minsizey'), 10) : 1,\n            maxSizeX: panelElement.hasAttribute('data-maxsizex') ? parseInt(panelElement.getAttribute('data-maxsizex'), 10) : null,\n            maxSizeY: panelElement.hasAttribute('data-maxsizey') ? parseInt(panelElement.getAttribute('data-maxsizey'), 10) : null,\n            row: panelElement.hasAttribute('data-row') ? parseInt(panelElement.getAttribute('data-row'), 10) : 0,\n            col: panelElement.hasAttribute('data-col') ? parseInt(panelElement.getAttribute('data-col'), 10) : 0,\n            id: panelElement.getAttribute('id'),\n            zIndex: panelElement.hasAttribute('data-zindex') ? parseInt(panelElement.getAttribute('data-zIndex'), 10) : 1000,\n            header: panelElement.querySelector('.e-panel-header') && '.e-panel-header',\n            content: panelElement.querySelector('.e-panel-content') && '.e-panel-content',\n        };\n        if (!model.id) {\n            model.id = 'layout_' + this.panelID.toString();\n            panelElement.setAttribute('id', model.id);\n            this.panelID = this.panelID + 1;\n        }\n        if (isUndefined(model.enabled)) {\n            model.enabled = true;\n        }\n        panelElement.style.zIndex = '' + model.zIndex;\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', model, true);\n        this.panels.push(panelProp);\n    };\n    DashboardLayout.prototype.resizeEvents = function () {\n        if (this.allowResizing) {\n            var panelElements = this.element.querySelectorAll('.e-panel .e-panel-container .e-resize');\n            for (var i = 0; i < panelElements.length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(panelElements[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'msie') {\n                    EventHandler.add(panelElements[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n    };\n    DashboardLayout.prototype.bindEvents = function () {\n        window.addEventListener('resize', this.refresh.bind(this));\n        this.resizeEvents();\n    };\n    DashboardLayout.prototype.downResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.pageX;\n        this.lastMouseY = e.pageY;\n        var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n        var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n        if (!this.isMouseMoveBound) {\n            EventHandler.add(document, moveEventName, this.moveResizeHandler, this);\n            this.isMouseMoveBound = true;\n        }\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, upEventName, this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    ;\n    DashboardLayout.prototype.downHandler = function (e) {\n        this.resizeCalled = false;\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var el = closest((e.currentTarget), '.e-panel');\n        var args = { event: e, element: el, isInteracted: true };\n        this.trigger('resizeStart', args);\n        this.downTarget = e.currentTarget;\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        addClass([this.element], [preventSelect]);\n        this.element.appendChild(this.shadowEle);\n        this.elementX = parseInt(el.style.left, 10);\n        this.elementY = parseInt(el.style.top, 10);\n        this.elementWidth = el.offsetWidth;\n        this.elementHeight = el.offsetHeight;\n        this.originalWidth = this.getCellInstance(el.id).sizeX;\n        this.originalHeight = this.getCellInstance(el.id).sizeY;\n        this.previousRow = this.getCellInstance(el.id).row;\n    };\n    DashboardLayout.prototype.touchDownResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.changedTouches[0].pageX;\n        this.lastMouseY = e.changedTouches[0].pageY;\n        if (!this.isMouseMoveBound) {\n            EventHandler.add(document, 'touchmove', this.touchMoveResizeHandler, this);\n            this.isMouseMoveBound = true;\n        }\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, 'touchend', this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    DashboardLayout.prototype.getCellSize = function () {\n        return [parseInt((this.cellSize[0]), 10), parseInt(this.cellSize[1], 10)];\n    };\n    DashboardLayout.prototype.updateMaxTopLeft = function (e) {\n        this.moveTarget = this.downTarget;\n        var el = closest((this.moveTarget), '.e-panel');\n        var args = { event: e, element: el, isInteracted: true };\n        this.trigger('resize', args);\n    };\n    DashboardLayout.prototype.updateResizeElement = function (el) {\n        this.maxLeft = this.element.offsetWidth - 1;\n        this.maxTop = this.cellSize[1] * this.maxRows - 1;\n        removeClass([el], 'e-panel-transition');\n        addClass([el], [dragging]);\n        var handleArray = [east, west, north, south, southEast, northEast, northWest, southWest];\n        for (var i = 0; i < this.moveTarget.classList.length; i++) {\n            if (handleArray.indexOf(this.moveTarget.classList[i]) !== -1) {\n                this.handleClass = (this.moveTarget.classList[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.moveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.pageX || this.lastMouseY === e.pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.pageX;\n        this.mouseY = e.pageY;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseY = this.mouseY;\n        this.lastMouseX = this.mouseX;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    DashboardLayout.prototype.touchMoveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.changedTouches[0].pageX || this.lastMouseY === e.changedTouches[0].pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.changedTouches[0].pageX;\n        this.mouseY = e.changedTouches[0].pageY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseX = this.mouseX;\n        this.lastMouseY = this.mouseY;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    /* istanbul ignore next */\n    DashboardLayout.prototype.resizingPanel = function (el, panelModel, currentX, currentY) {\n        var oldSizeX = this.getCellInstance(el.id).sizeX;\n        var oldSizeY = this.getCellInstance(el.id).sizeY;\n        var dY = currentY;\n        var dX = currentX;\n        if (this.handleClass.indexOf('north') >= 0) {\n            if (this.elementHeight - dY < this.getMinHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMinHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight - dY > this.getMaxHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMaxHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + dY < this.minTop) {\n                currentY = this.minTop - this.elementY;\n                this.mOffY = dY - currentY;\n            }\n            this.elementY += currentY;\n            this.elementHeight -= currentY;\n        }\n        if (this.handleClass.indexOf('south') >= 0) {\n            if (this.elementHeight + dY < this.getMinHeight(panelModel)) {\n                currentY = this.getMinHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight + dY > this.getMaxHeight(panelModel)) {\n                currentY = this.getMaxHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + this.elementHeight + dY > this.maxTop) {\n                currentY = this.maxTop - this.elementY - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            this.elementHeight += currentY;\n        }\n        if (this.handleClass.indexOf('west') >= 0) {\n            if (this.elementWidth - dX < this.getMinWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMinWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth - dX > this.getMaxWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMaxWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + dX < this.minLeft) {\n                currentX = this.minLeft - this.elementX;\n                this.mOffX = dX - currentX;\n            }\n            this.elementX += currentX;\n            this.elementWidth -= currentX;\n        }\n        if (this.handleClass.indexOf('east') >= 0) {\n            if (this.elementWidth + dX < this.getMinWidth(panelModel)) {\n                currentX = this.getMinWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth + dX > this.getMaxWidth(panelModel)) {\n                currentX = this.getMaxWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + this.elementWidth + dX > this.maxLeft) {\n                currentX = this.maxLeft - this.elementX - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            this.elementWidth += currentX;\n        }\n        el.style.top = this.elementY + 'px';\n        el.style.left = this.elementX + 'px';\n        el.style.width = this.elementWidth + 'px';\n        el.style.height = this.elementHeight + 'px';\n        var item = this.getResizeRowColumn(panelModel, this.moveTarget);\n        if (item.col + item.sizeX > this.columns) {\n            this.panelPropertyChange(item, { sizeX: item.sizeX - 1 });\n        }\n        this.shadowEle.style.top = ((item.row * this.getCellSize()[1] + (item.row * this.cellSpacing[1]))) + 'px';\n        this.shadowEle.style.left = ((item.col * this.getCellSize()[0]) + ((item.col) * this.cellSpacing[0])) + 'px';\n        this.shadowEle.style.height = ((item.sizeY * (this.getCellSize()[1] + (this.cellSpacing[1])))) + 'px';\n        this.shadowEle.style.width = ((item.sizeX * (this.getCellSize()[0] + (this.cellSpacing[0])))) + 'px';\n        if (oldSizeX !== item.sizeX || oldSizeY !== item.sizeY) {\n            oldSizeX = item.sizeX;\n            oldSizeY = item.sizeY;\n            var model = this.getCellInstance(el.id);\n            var value = {\n                attributes: {\n                    row: model.row.toString(),\n                    col: model.col.toString(),\n                    sizeX: model.sizeX.toString(),\n                    sizeY: model.sizeY.toString()\n                }\n            };\n            this.setAttributes(value, el);\n            this.mainElement = el;\n            this.updatePanelLayout(el, this.getCellInstance(el.id));\n            this.updateOldRowColumn();\n            this.sortedPanel();\n        }\n    };\n    DashboardLayout.prototype.upResizeHandler = function (e) {\n        if (isNullOrUndefined(this.downTarget)) {\n            return;\n        }\n        this.updateServerPanelData();\n        this.upTarget = this.downTarget;\n        var el = closest((this.upTarget), '.e-panel');\n        var args = { event: e, element: el, isInteracted: true };\n        if (el) {\n            addClass([el], 'e-panel-transition');\n            var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n            var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n            EventHandler.remove(document, moveEventName, this.moveResizeHandler);\n            EventHandler.remove(document, upEventName, this.upResizeHandler);\n            if (Browser.info.name !== 'msie') {\n                EventHandler.remove(document, 'touchmove', this.touchMoveResizeHandler);\n                EventHandler.remove(document, 'touchend', this.upResizeHandler);\n            }\n            this.isMouseUpBound = false;\n            this.isMouseMoveBound = false;\n            if (this.shadowEle) {\n                detach(this.shadowEle);\n            }\n            this.shadowEle = null;\n            var panelModel = this.getCellInstance(el.getAttribute('id'));\n            this.setPanelPosition(el, panelModel.row, panelModel.col);\n            this.setHeightAndWidth(el, panelModel);\n        }\n        removeClass([el], [dragging]);\n        this.trigger('resizeStop', args);\n        this.resizeCalled = false;\n        this.lastMouseX = this.lastMouseY = undefined;\n        this.mOffX = this.mOffY = 0;\n        this.mainElement = null;\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkForChanges(true);\n    };\n    DashboardLayout.prototype.getResizeRowColumn = function (item, e) {\n        var isChanged = false;\n        var col = item.col;\n        if (['e-west', 'e-south-west'].indexOf(this.handleClass) !== -1) {\n            col = this.pixelsToColumns(this.elementX, false);\n        }\n        var row = item.row;\n        if (['e-north'].indexOf(this.handleClass) !== -1) {\n            row = this.pixelsToRows(this.elementY, false);\n            if (this.previousRow !== row) {\n                this.previousRow = row;\n                isChanged = true;\n            }\n        }\n        var sizeX = item.sizeX;\n        if (['e-north', 'e-south'].indexOf(this.handleClass) === -1) {\n            sizeX = this.pixelsToColumns(this.elementWidth - (sizeX) * this.cellSpacing[1], true);\n        }\n        var sizeY = item.sizeY;\n        if (['e-east', 'e-west'].indexOf(this.handleClass) === -1) {\n            if (this.handleClass === 'e-north' ? isChanged : true) {\n                sizeY = this.pixelsToRows(this.elementHeight - (sizeY) * this.cellSpacing[0], true);\n            }\n        }\n        if (item.col + item.sizeX > this.columns) {\n            item.sizeX = item.sizeX - 1;\n        }\n        var canOccupy = row > -1 && col > -1 && sizeX + col <= this.maxCol() && sizeY + row <= this.maxRow();\n        if (canOccupy && (this.collisions(row, col, sizeX, sizeY, this.getPanelBase(item.id)).length === 0)\n            || this.allowPushing !== false) {\n            this.panelPropertyChange(item, { row: row, col: col, sizeX: sizeX, sizeY: sizeY });\n        }\n        return item;\n    };\n    DashboardLayout.prototype.pixelsToColumns = function (pixels, isCeil) {\n        var curColWidth = this.cellSize[0];\n        if (isCeil) {\n            return Math.ceil(pixels / curColWidth);\n        }\n        else {\n            return Math.floor(pixels / curColWidth);\n        }\n    };\n    DashboardLayout.prototype.pixelsToRows = function (pixels, isCeil) {\n        if (isCeil) {\n            return Math.round(pixels / this.cellSize[1]);\n        }\n        else {\n            return Math.round(pixels / (this.cellSize[1] + this.cellSpacing[0]));\n        }\n    };\n    DashboardLayout.prototype.getMinWidth = function (item) {\n        return (item.minSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMaxWidth = function (item) {\n        return (item.maxSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMinHeight = function (item) {\n        return (item.minSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.getMaxHeight = function (item) {\n        return (item.maxSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.sortedPanel = function () {\n        this.sortedArray = [];\n        for (var i = 0, l = this.panelCollection.length; i < l; ++i) {\n            this.sortItem(this.panelCollection[i]);\n        }\n    };\n    DashboardLayout.prototype.moveItemsUpwards = function () {\n        if (this.allowFloating === false) {\n            return;\n        }\n        for (var rowIndex = 0, l = this.sortedArray.length; rowIndex < l; ++rowIndex) {\n            var columns = this.sortedArray[rowIndex];\n            if (!columns) {\n                continue;\n            }\n            for (var colIndex = 0, len = columns.length; colIndex < len; ++colIndex) {\n                var item = columns[colIndex];\n                if (item) {\n                    this.moveItemUpwards(item);\n                }\n            }\n        }\n        this.updateGridLines();\n    };\n    ;\n    DashboardLayout.prototype.moveItemUpwards = function (item) {\n        if (this.allowFloating === false || item === this.mainElement) {\n            return;\n        }\n        var colIndex = this.getCellInstance(item.id).col;\n        var sizeY = parseInt(item.getAttribute('data-sizeY'), 10);\n        var sizeX = parseInt(item.getAttribute('data-sizeX'), 10);\n        var availableRow = null;\n        var availableColumn = null;\n        var rowIndex = parseInt(item.getAttribute('data-row'), 10) - 1;\n        while (rowIndex > -1) {\n            var items = this.collisions(rowIndex, colIndex, sizeX, sizeY, item);\n            if (items.length !== 0) {\n                break;\n            }\n            availableRow = rowIndex;\n            availableColumn = colIndex;\n            --rowIndex;\n        }\n        if (availableRow !== null) {\n            this.sortItem(item, availableRow, availableColumn);\n        }\n    };\n    DashboardLayout.prototype.sortItem = function (item, rowValue, columnValue, ignoreItems) {\n        this.overlapElement = [];\n        var column = parseInt(item.getAttribute('data-col'), 10);\n        var row = parseInt(item.getAttribute('data-row'), 10);\n        if (!this.sortedArray[row]) {\n            this.sortedArray[row] = [];\n        }\n        this.sortedArray[row][column] = item;\n        if (item !== undefined && rowValue !== undefined && columnValue !== undefined) {\n            if (this.oldRowCol[item.id] !== undefined && this.oldRowCol[item.id].row !== null &&\n                typeof this.oldRowCol[item.id].col !== 'undefined') {\n                {\n                    var oldRow = this.sortedArray[this.oldRowCol[item.id].row];\n                    if (this.oldRowCol[item.id] && oldRow[this.oldRowCol[item.id].col] === item) {\n                        delete oldRow[this.oldRowCol[item.id].col];\n                        this.updateOldRowColumn();\n                        this.sortedPanel();\n                    }\n                }\n            }\n            this.oldRowCol[item.id].row = rowValue;\n            this.oldRowCol[item.id].row = columnValue;\n            if (!this.sortedArray[row]) {\n                this.sortedArray[row] = [];\n            }\n            this.sortedArray[row][column] = item;\n            if (this.allItems.indexOf(item) === -1) {\n                this.allItems.push(item);\n            }\n            this.panelPropertyChange(this.getCellInstance(item.id), { row: rowValue, col: columnValue });\n            var panelModel = this.getCellInstance(item.id);\n            this.setAttributes({ value: { col: panelModel.col.toString(), row: panelModel.row.toString() } }, item);\n            this.updateLayout(item, this.getCellInstance(item.id));\n        }\n    };\n    DashboardLayout.prototype.updateLayout = function (element, panelModel) {\n        this.setPanelPosition(element, panelModel.row, panelModel.col);\n        this.setHeightAndWidth(element, panelModel);\n        this.updateRowHeight();\n        this.sortedPanel();\n    };\n    ;\n    DashboardLayout.prototype.refresh = function () {\n        this.updateDragArea();\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n        }\n        else {\n            if (this.element.classList.contains(responsive)) {\n                removeClass([this.element], [responsive]);\n                for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                    var ele = this.element.querySelectorAll('.e-panel')[i];\n                    var cellInstance = this.getCellInstance(ele.id);\n                    var row = parseInt(ele.getAttribute('data-row'), 10);\n                    var col = parseInt(ele.getAttribute('data-col'), 10);\n                    this.panelPropertyChange(cellInstance, { row: row, col: col });\n                    this.setHeightAndWidth(ele, this.getCellInstance(ele.id));\n                    this.setPanelPosition(ele, row, col);\n                    this.updateRowHeight();\n                }\n            }\n            this.panelResponsiveUpdate();\n            this.updateGridLines();\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        this.resizeEvents();\n        this.checkDragging(this.dragCollection);\n    };\n    DashboardLayout.prototype.updateGridLines = function () {\n        if (this.element.querySelector('.e-dashboard-gridline-table')) {\n            if (this.table) {\n                detach(this.table);\n            }\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkDragging = function (dragCollection) {\n        if (this.checkMediaQuery() || !this.allowDragging) {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n        }\n        else {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n            this.enableDraggingContent(this.panelCollection);\n        }\n    };\n    DashboardLayout.prototype.sortPanels = function () {\n        var model = [];\n        var _loop_1 = function (row) {\n            var _loop_2 = function (col) {\n                this_1.panels.filter(function (panel) {\n                    if (panel.row === row && panel.col === col) {\n                        model.push(panel);\n                    }\n                });\n            };\n            for (var col = 0; col < this_1.columns; col++) {\n                _loop_2(col);\n            }\n        };\n        var this_1 = this;\n        for (var row = 0; row <= this.rows; row++) {\n            _loop_1(row);\n        }\n        return model;\n    };\n    DashboardLayout.prototype.checkMediaQuerySizing = function () {\n        addClass([this.element], [responsive]);\n        var updatedPanel = this.sortPanels();\n        this.updatedRows = updatedPanel.length;\n        for (var i = 0; i < updatedPanel.length; i++) {\n            var panelElement = document.getElementById(updatedPanel[i].id);\n            if (panelElement) {\n                setStyle(panelElement, { 'width': '100%' });\n                panelElement.style.height = ' ' + (this.element.parentElement\n                    && this.element.parentElement.offsetWidth / this.cellAspectRatio) + 'px';\n                this.cellSize[1] = this.element.parentElement\n                    && (this.element.parentElement.offsetWidth / this.cellAspectRatio);\n                if (this.addPanelCalled && this.isBlazor) {\n                    var panelProp = this.getActualProperties(updatedPanel[i]);\n                    panelProp.row = i;\n                    panelProp.col = 0;\n                    this.panelPropertyChange(updatedPanel[i], panelProp);\n                    this.setPanelPosition(panelElement, i, 0);\n                }\n                else {\n                    this.panelPropertyChange(updatedPanel[i], { row: i, col: 0 });\n                    this.setPanelPosition(panelElement, updatedPanel[i].row, updatedPanel[i].col);\n                }\n                this.setClasses(this.panelCollection);\n                this.checkDragging(this.dragCollection);\n                this.removeResizeClasses(this.panelCollection);\n            }\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.panelResponsiveUpdate = function () {\n        this.element.classList.add('e-responsive');\n        this.calculateCellSize();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            this.setPanelPosition(document.getElementById(this.panels[i].id), this.panels[i].row, this.panels[i].col);\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.updateRowHeight = function () {\n        this.getRowColumn();\n        this.setHeightWidth();\n    };\n    DashboardLayout.prototype.setHeightWidth = function () {\n        var heightValue;\n        var widthValue;\n        if (this.checkMediaQuery()) {\n            heightValue = ((this.maxRow()) *\n                (this.element.parentElement && Math.floor((this.element.parentElement.offsetWidth)) / this.cellAspectRatio) +\n                (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        else {\n            heightValue = ((this.maxRow()) *\n                (this.cellSize[0] / this.cellAspectRatio) + (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        setStyle(this.element, { 'height': heightValue });\n        widthValue = window.getComputedStyle(this.element).width;\n        setStyle(this.element, { 'width': widthValue });\n    };\n    DashboardLayout.prototype.setHeightAndWidth = function (panelElement, panelModel) {\n        setStyle(panelElement, { 'height': formatUnit(this.setXYDimensions(panelModel)[0]) });\n        setStyle(panelElement, { 'width': formatUnit(this.setXYDimensions(panelModel)[1]) });\n    };\n    DashboardLayout.prototype.renderCell = function (panel, isStringTemplate, index) {\n        var cellElement;\n        this.dimensions = this.setXYDimensions(panel);\n        if (isUndefined(panel.enabled)) {\n            panel.enabled = true;\n        }\n        if (this.isBlazor) {\n            cellElement = document.getElementById(panel.id);\n        }\n        else {\n            if (this.contentTemplateChild.length > 0 && !isNullOrUndefined(index)) {\n                cellElement = this.contentTemplateChild[index];\n                if (panel.cssClass) {\n                    addClass([cellElement], [panel.cssClass]);\n                }\n                if (panel.id) {\n                    cellElement.setAttribute('id', panel.id);\n                }\n            }\n            else {\n                cellElement = this.createPanelElement(panel.cssClass, panel.id);\n            }\n            cellElement.style.zIndex = '' + panel.zIndex;\n            this.element.appendChild(cellElement);\n        }\n        var dashBoardCell = this.renderPanels(cellElement, panel, panel.id, isStringTemplate);\n        this.panelCollection.push(dashBoardCell);\n        if (!this.isBlazor) {\n            this.setXYAttributes(cellElement, panel);\n        }\n        else {\n            var bodyElement = cellElement.querySelector('.e-panel-content');\n            if (bodyElement) {\n                var headerHeight = cellElement.querySelector('.e-panel-header') ?\n                    window.getComputedStyle(cellElement.querySelector('.e-panel-header')).height : '0px';\n                var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n                setStyle(bodyElement, { height: contentHeightValue });\n            }\n        }\n        this.setHeightAndWidth(cellElement, panel);\n        return cellElement;\n    };\n    DashboardLayout.prototype.setPanelPosition = function (cellElement, row, col) {\n        if (!cellElement) {\n            return;\n        }\n        var heightValue = this.getCellSize()[1];\n        var widthValue = this.getCellSize()[0];\n        var left = col === 0 ? 0 : (((col) * (parseInt(widthValue.toString(), 10) + this.cellSpacing[0])));\n        var top = row === 0 ? 0 : (((row) * (parseInt(heightValue.toString(), 10) + this.cellSpacing[1])));\n        setStyle(cellElement, { 'left': left + 'px', 'top': top + 'px' });\n    };\n    DashboardLayout.prototype.getRowColumn = function () {\n        this.rows = null;\n        if (this.element.querySelectorAll('.e-panel').length > 0 && !this.updatedRows) {\n            var panelElements = this.element.querySelectorAll('.e-panel');\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                var rowValue = parseInt(panelElement.getAttribute('data-row'), 10);\n                var xValue = parseInt(panelElement.getAttribute('data-sizeY'), 10);\n                this.rows = Math.max(this.rows, (rowValue + xValue));\n            }\n        }\n        else {\n            if (this.updatedRows) {\n                this.rows = this.updatedRows;\n                this.updatedRows = null;\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                this.rows = Math.max(this.rows, this.panels[i].row);\n            }\n        }\n    };\n    DashboardLayout.prototype.setMinMaxValues = function (panel) {\n        if (!panel.sizeX || panel.sizeX < panel.minSizeX) {\n            this.panelPropertyChange(panel, { sizeX: panel.minSizeX });\n        }\n        else if ((panel.maxSizeX && panel.sizeX > panel.maxSizeX)) {\n            this.panelPropertyChange(panel, { sizeX: panel.maxSizeX });\n        }\n        else if (panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: this.columns });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX });\n        }\n        if (!panel.sizeY || panel.sizeY < panel.minSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.minSizeY });\n        }\n        else if (panel.maxSizeY && panel.sizeY > panel.maxSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.maxSizeY });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeY: panel.sizeY });\n        }\n    };\n    DashboardLayout.prototype.checkMinMaxValues = function (panel) {\n        if (panel.col + panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX + (this.columns - (panel.col + panel.sizeX)) });\n        }\n    };\n    DashboardLayout.prototype.panelPropertyChange = function (panel, value) {\n        this.allowServerDataBinding = false;\n        // tslint:disable-next-line\n        panel.setProperties(value, true);\n    };\n    DashboardLayout.prototype.renderDashBoardCells = function (cells) {\n        if (this.element.querySelectorAll('.e-panel').length > 0 || this.panels.length > 0) {\n            for (var j = 0; j < cells.length; j++) {\n                this.gridPanelCollection.push(cells[j]);\n                if (!(this.isBlazor && this.panels.length > 0)) {\n                    this.setMinMaxValues(cells[j]);\n                }\n                if (this.maxColumnValue < cells[j].col || this.maxColumnValue < (cells[j].col + cells[j].sizeX)) {\n                    this.panelPropertyChange(cells[j], { col: this.maxColumnValue - cells[j].sizeX });\n                }\n                var cell = this.renderCell(cells[j], false, j);\n                if (!this.isBlazor) {\n                    if (this.enableRtl) {\n                        addClass([cell], 'e-rtl');\n                    }\n                    this.element.appendChild(cell);\n                }\n                if (this.checkMediaQuery() && j === cells.length - 1) {\n                    this.checkMediaQuerySizing();\n                }\n                else {\n                    this.setPanelPosition(cell, cells[j].row, cells[j].col);\n                    this.mainElement = cell;\n                    this.updatePanelLayout(cell, cells[j]);\n                    this.mainElement = null;\n                }\n            }\n        }\n        this.setClasses(this.panelCollection);\n    };\n    DashboardLayout.prototype.collisions = function (row, col, sizeX, sizeY, ignore) {\n        var items = [];\n        if (!sizeX || !sizeY) {\n            sizeX = sizeY = 1;\n        }\n        if (ignore && !(ignore instanceof Array)) {\n            ignore = [ignore];\n        }\n        var item;\n        for (var h = 0; h < sizeY; ++h) {\n            for (var w = 0; w < sizeX; ++w) {\n                item = this.getPanel(row + h, col + w, ignore);\n                if (item && (!ignore || ignore.indexOf(document.getElementById(item.id)) === -1) &&\n                    items.indexOf(document.getElementById(item.id)) === -1) {\n                    items.push(document.getElementById(item.id));\n                }\n            }\n        }\n        return items;\n    };\n    ;\n    DashboardLayout.prototype.rightWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var columns = [];\n        var spacedColumns = [];\n        rowElements.forEach(function (element) {\n            var columnValue = parseInt(element.getAttribute('data-col'), 10);\n            var sizeXValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col < _this.columns && columnValue >= col) {\n                if (sizeXValue > 1) {\n                    for (var i = columnValue; i < columnValue + sizeXValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(columnValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = col + 1; i <= this.columns - 1; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'right');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue > col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col > parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, previous) { return next - previous; });\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.getOccupiedColumns = function (element, type) {\n        var occupiedItems = [];\n        var sizeX = parseInt(element.getAttribute('data-sizeX'), 10);\n        var col = parseInt(element.getAttribute('data-col'), 10);\n        for (var i = col; (i < col + sizeX && i <= this.columns); i++) {\n            occupiedItems.push(i);\n        }\n        return occupiedItems;\n    };\n    DashboardLayout.prototype.leftWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var spacedColumns = [];\n        var columns = [];\n        rowElements.forEach(function (element) {\n            var colValue = parseInt(element.getAttribute('data-col'), 10);\n            var xValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col <= _this.columns && colValue <= col) {\n                if (xValue > 1) {\n                    for (var i = colValue; i < colValue + xValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(colValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = 0; i <= col; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'left');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue < col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col < parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, prev) { return next - prev; });\n        spacedColumns = spacedColumns.reverse();\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.adjustmentAvailable = function (row, col, sizeY, sizeX, ele) {\n        this.leftAdjustable = undefined;\n        this.rightAdjustable = undefined;\n        var isAdjustable = false;\n        var leftSpacing;\n        var rightSpacing;\n        var rowElement = [];\n        this.topAdjustable = undefined;\n        var eleSizeX = parseInt(ele.getAttribute('data-sizeX'), 10);\n        var eleCol = parseInt(ele.getAttribute('data-col'), 10);\n        rowElement = this.getRowElements(this.collisions(row, 0, this.columns, sizeY, []));\n        if (rowElement.indexOf(ele) === -1) {\n            rowElement.push(ele);\n        }\n        leftSpacing = this.leftWardsSpaceChecking(rowElement, col, ele);\n        if (leftSpacing.length > 0) {\n            this.leftAdjustable = this.isLeftAdjustable(leftSpacing, ele, row, col, sizeX, sizeY);\n            if (this.spacedColumnValue !== eleCol - this.getCellInstance(this.checkingElement.id).sizeX) {\n                this.leftAdjustable = false;\n            }\n            if (this.leftAdjustable) {\n                this.rightAdjustable = false;\n            }\n            else {\n                this.leftAdjustable = false;\n                rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n                this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n                if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                    this.rightAdjustable = false;\n                }\n                if (!this.rightAdjustable) {\n                    this.rightAdjustable = false;\n                }\n            }\n        }\n        else {\n            rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n            this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n            if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                this.rightAdjustable = false;\n            }\n            if (this.rightAdjustable) {\n                this.leftAdjustable = false;\n            }\n        }\n        if (!this.rightAdjustable && !this.leftAdjustable && row > 0) {\n            var endRow = this.getCellInstance(ele.id).row;\n            var topCheck = false;\n            if (this.startRow !== endRow) {\n                topCheck = true;\n            }\n            for (var rowValue = row; rowValue >= 0; rowValue--) {\n                var element = (this.getCellInstance(ele.id).sizeY > 1 && topCheck) ? this.checkingElement : ele;\n                if ((rowValue !== endRow) && (rowValue === endRow - sizeY) &&\n                    this.collisions(rowValue, col, sizeX, sizeY, element).length === 0) {\n                    topCheck = false;\n                    this.topAdjustable = true;\n                    this.spacedRowValue = isNullOrUndefined(this.spacedRowValue) ? rowValue : this.spacedRowValue;\n                    this.spacedColumnValue = col;\n                }\n            }\n        }\n        if (this.rightAdjustable || this.leftAdjustable || this.topAdjustable) {\n            isAdjustable = true;\n            if (isNullOrUndefined(this.spacedRowValue)) {\n                this.spacedRowValue = row;\n            }\n        }\n        return isAdjustable;\n    };\n    DashboardLayout.prototype.isXSpacingAvailable = function (spacing, sizeX) {\n        var isSpaceAvailable = false;\n        var subSpacingColumns = [];\n        for (var i = 0; i < spacing.length; i++) {\n            if (spacing[i + 1] - spacing[i] === 1 || spacing[i + 1] - spacing[i] === -1) {\n                subSpacingColumns.push(spacing[i]);\n                if (sizeX === 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                }\n                if (i === spacing.length - 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                    if (subSpacingColumns.length > sizeX) {\n                        subSpacingColumns.splice(-1);\n                    }\n                }\n                if (subSpacingColumns.length === sizeX) {\n                    isSpaceAvailable = true;\n                    this.spacedColumnValue = subSpacingColumns.sort(function (next, previous) { return next - previous; })[0];\n                    if (this.spacedColumnValue < 0) {\n                        this.spacedColumnValue = 1;\n                    }\n                    return isSpaceAvailable;\n                }\n            }\n            else {\n                subSpacingColumns = [];\n                continue;\n            }\n        }\n        return isSpaceAvailable;\n    };\n    DashboardLayout.prototype.getRowElements = function (base) {\n        var rowElements = [];\n        for (var i = 0; i < base.length; i++) {\n            rowElements.push(base[i]);\n        }\n        return rowElements;\n    };\n    DashboardLayout.prototype.isLeftAdjustable = function (spaces, ele, row, col, sizeX, sizeY) {\n        var isLeftAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spaces.length > 0) {\n            this.spacedColumnValue = spaces[0];\n            isLeftAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isLeftAdjudtable = this.isXSpacingAvailable(spaces, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spaces.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spaces.length; i++) {\n                        var collisionValue = this.collisions(row, spaces[i], sizeX, sizeY, this.checkingElement);\n                        if (collisionValue.length === 0) {\n                            this.spacedColumnValue = spaces[i];\n                            isLeftAdjudtable = true;\n                            return isLeftAdjudtable;\n                        }\n                        else {\n                            isLeftAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isLeftAdjudtable = this.replacable(spaces, sizeX, row, sizeY, ele);\n            }\n        }\n        return isLeftAdjudtable;\n    };\n    DashboardLayout.prototype.isRightAdjustable = function (spacing, ele, row, col, sizeX, sizeY) {\n        var isRightAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spacing.length > 0) {\n            this.spacedColumnValue = spacing[0];\n            isRightAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isRightAdjudtable = this.isXSpacingAvailable(spacing, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spacing.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spacing.length; i++) {\n                        var collisionValue = this.collisions(row, spacing[i], sizeX, sizeY, this.checkingElement);\n                        for (var collision = 0; collision < collisionValue.length; collision++) {\n                            if (parseInt(ele.getAttribute('data-col'), 10) !== spacing[i]) {\n                                collisionValue.splice(collisionValue.indexOf(collisionValue[collision]), 1);\n                            }\n                        }\n                        if (collisionValue.length === 0) {\n                            isRightAdjudtable = true;\n                            this.spacedColumnValue = spacing[i];\n                            return isRightAdjudtable;\n                        }\n                        else {\n                            isRightAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isRightAdjudtable = this.replacable(spacing, sizeX, row, sizeY, ele);\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.replacable = function (spacing, sizeX, row, sizeY, ele) {\n        var isRightAdjudtable;\n        var updatedCollision = [];\n        for (var j = 0; j < spacing.length; j++) {\n            var xAdjust = this.isXSpacingAvailable(spacing, sizeX);\n            if (xAdjust) {\n                var exclusions = [];\n                exclusions.push(this.checkingElement);\n                exclusions.push(ele);\n                if (updatedCollision.length === 0) {\n                    isRightAdjudtable = true;\n                    this.spacedColumnValue = this.spacedColumnValue;\n                    return isRightAdjudtable;\n                }\n                else {\n                    isRightAdjudtable = false;\n                }\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.sortCollisionItems = function (collisionItems) {\n        var updatedCollision = [];\n        var rowElements;\n        var _loop_3 = function (row) {\n            rowElements = [];\n            collisionItems.forEach(function (element) {\n                if (element && element.getAttribute('data-row') === row.toString()) {\n                    rowElements.push(element);\n                }\n            });\n            var _loop_4 = function (column) {\n                rowElements.forEach(function (item) {\n                    if (item && item.getAttribute('data-col') === column.toString()) {\n                        updatedCollision.push(item);\n                    }\n                });\n            };\n            for (var column = this_2.columns - 1; column >= 0; column--) {\n                _loop_4(column);\n            }\n        };\n        var this_2 = this;\n        for (var row = this.rows - 1; row >= 0; row--) {\n            _loop_3(row);\n        }\n        return updatedCollision;\n    };\n    DashboardLayout.prototype.updatedModels = function (collisionItems, panelModel, ele) {\n        var _this = this;\n        var removeableElement = [];\n        if (!this.mainElement) {\n            this.sortedPanel();\n        }\n        collisionItems.forEach(function (element) {\n            _this.checkingElement = element;\n            var model = _this.getCellInstance(element.id);\n            var adjust = !_this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, ele);\n            if (model.sizeX > 1 && adjust) {\n                for (var rowValue = model.row; rowValue < panelModel.row + panelModel.sizeY; rowValue++) {\n                    var collisions = _this.collisions(rowValue, model.col, model.sizeX, model.sizeY, element);\n                    collisions.forEach(function (item) {\n                        if (collisionItems.indexOf(item) >= 0 && removeableElement.indexOf(item) === -1) {\n                            removeableElement.push(item);\n                        }\n                    });\n                }\n            }\n        });\n        removeableElement.forEach(function (item) {\n            if (removeableElement.indexOf(item) >= 0) {\n                collisionItems.splice(collisionItems.indexOf(item), 1);\n            }\n        });\n        return collisionItems;\n    };\n    DashboardLayout.prototype.resetLayout = function (model, element) {\n        var collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        if (!this.mainElement || this.addPanelCalled || this.resizeCalled || this.movePanelCalled) {\n            return collisions;\n        }\n        if (this.mainElement && this.oldRowCol !== this.cloneObject) {\n            for (var i = 0; i < this.panels.length; i++) {\n                var element_1 = document.getElementById(this.panels[i].id);\n                if (element_1 === this.mainElement) {\n                    continue;\n                }\n                var rowValue = this.cloneObject[element_1.id].row;\n                var colValue = this.cloneObject[element_1.id].col;\n                this.setPanelPosition(element_1, rowValue, colValue);\n                this.panelPropertyChange(this.getCellInstance(element_1.id), { row: rowValue, col: colValue });\n                this.setAttributes({ value: { col: colValue.toString(), row: rowValue.toString() } }, element_1);\n                this.updateOldRowColumn();\n            }\n        }\n        this.sortedArray = this.cloneArray;\n        collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        this.sortedPanel();\n        this.updateOldRowColumn();\n        if (this.checkCollision && this.checkCollision.length > 0 && collisions.indexOf(this.checkCollision[0]) === -1 &&\n            this.cloneObject[this.checkCollision[0].id].row === model.row) {\n            collisions.push(this.checkCollision[0]);\n        }\n        return collisions;\n    };\n    DashboardLayout.prototype.swapAvailability = function (collisions, element) {\n        var available = true;\n        var eleModel = this.getCellInstance(element.id);\n        for (var count = 0; count < collisions.length; count++) {\n            var collideModel = this.getCellInstance(collisions[count].id);\n            for (var i = 1; i < eleModel.sizeY; i++) {\n                var excludeEle = [];\n                excludeEle.push(element);\n                excludeEle.push(collisions[count]);\n                var collision = void 0;\n                collision = this.collisions(eleModel.row + i, collideModel.col, collideModel.sizeX, collideModel.sizeY, excludeEle);\n                if (collision.length > 0) {\n                    available = false;\n                    return false;\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return available;\n    };\n    DashboardLayout.prototype.checkForSwapping = function (collisions, element, panelModel) {\n        if (!this.mainElement || collisions.length === 0) {\n            return false;\n        }\n        var direction;\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        if (!this.swapAvailability(collisions, element)) {\n            return false;\n        }\n        var isSwappable = false;\n        for (var count1 = 0; count1 < collisions.length; count1++) {\n            if (collisions.length >= 1 && this.cloneObject[this.mainElement.id].row === this.oldRowCol[this.mainElement.id].row) {\n                return false;\n            }\n        }\n        var updatedRow = direction === 0 ?\n            this.getCellInstance(this.mainElement.id).row + this.getCellInstance(this.mainElement.id).sizeY\n            : this.startRow;\n        for (var count = 0; count < collisions.length; count++) {\n            var collideInstance = this.getCellInstance(collisions[count].id);\n            var elementinstance = this.getCellInstance(element.id);\n            var ignore = [];\n            if (collideInstance.sizeY === 1 && ignore.indexOf(collisions[count]) === -1) {\n                ignore.push(collisions[count]);\n            }\n            else if (collideInstance.sizeY > 1 && ignore.indexOf(collisions[count]) === -1) {\n                if (direction === 1 && elementinstance.row === (this.cloneObject[collideInstance.id].row + collideInstance.sizeY - 1)) {\n                    ignore.push(collisions[count]);\n                }\n                else if (direction === 0 && elementinstance.row === (this.cloneObject[collideInstance.id].row)) {\n                    ignore.push(collisions[count]);\n                }\n                else {\n                    return false;\n                }\n            }\n            if (collideInstance.sizeY <= elementinstance.sizeY && ignore.indexOf(collisions[count]) === -1) {\n                ignore.push(collisions[count]);\n            }\n            var swapCollision = void 0;\n            ignore.push(this.mainElement);\n            swapCollision = this.collisions(updatedRow, collideInstance.col, collideInstance.sizeX, collideInstance.sizeY, ignore);\n            if (swapCollision.length > 0) {\n                isSwappable = false;\n                return isSwappable;\n            }\n            else {\n                if (count === collisions.length - 1) {\n                    isSwappable = true;\n                }\n                continue;\n            }\n        }\n        return isSwappable;\n    };\n    DashboardLayout.prototype.swapItems = function (collisions, element, panelModel) {\n        var _this = this;\n        var direction;\n        var swappedElements = [];\n        swappedElements.push(element);\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        var collisionItemsRow = direction === 0 ? eleSwapRow + panelModel.sizeY : this.startRow;\n        if (!this.movePanelCalled) {\n            var collisionInstance = this.getCellInstance(collisions[0].id);\n            this.panelPropertyChange(panelModel, { row: direction === 0 ? eleSwapRow : collisionItemsRow + collisionInstance.sizeY });\n        }\n        for (var count = 0; count < collisions.length; count++) {\n            swappedElements.push(collisions[count]);\n            this.setPanelPosition(collisions[count], collisionItemsRow, (this.getCellInstance(collisions[count].id)).col);\n            this.panelPropertyChange(this.getCellInstance(collisions[count].id), { row: collisionItemsRow });\n            collisions[count].setAttribute('data-row', collisionItemsRow.toString());\n        }\n        element.setAttribute('data-row', panelModel.row.toString());\n        this.setPanelPosition(this.shadowEle, panelModel.row, panelModel.col);\n        for (var i = 0; i < this.panels.length; i++) {\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n        this.startRow = panelModel.row;\n        this.updateOldRowColumn();\n        swappedElements.forEach(function (item) {\n            _this.cloneObject[item.id] = _this.oldRowCol[item.id];\n            var itemModel = _this.getCellInstance(item.id);\n            for (var i = 0; i < _this.sortedArray.length; i++) {\n                if (!_this.sortedArray[i]) {\n                    continue;\n                }\n                for (var j = 0; j < _this.sortedArray[i].length; j++) {\n                    if (_this.sortedArray[i][j] === item) {\n                        _this.sortedArray[i][j] = undefined;\n                    }\n                }\n            }\n            if (!_this.sortedArray[itemModel.row]) {\n                _this.sortedArray[itemModel.row] = [];\n            }\n            _this.sortedArray[itemModel.row][itemModel.col] = item;\n            _this.cloneArray = _this.sortedArray;\n        });\n    };\n    DashboardLayout.prototype.updatePanelLayout = function (element, panelModel) {\n        this.collisionChecker = {};\n        var initialModel = [];\n        var checkForAdjustment;\n        var collisionModels = [];\n        var swappingAvailable;\n        if (this.mainElement && this.isRenderComplete) {\n            initialModel = this.resetLayout(panelModel, element);\n        }\n        else {\n            initialModel = this.collisions(panelModel.row, panelModel.col, panelModel.sizeX, panelModel.sizeY, element);\n        }\n        if (initialModel.length > 0) {\n            initialModel = this.sortCollisionItems(initialModel);\n            initialModel = this.updatedModels(initialModel, panelModel, element);\n            swappingAvailable = !isNullOrUndefined(this.startRow) ? this.checkForSwapping(initialModel, element, panelModel) : false;\n            if (swappingAvailable) {\n                this.swapItems(initialModel, element, panelModel);\n            }\n            else {\n                for (var i = 0; i < initialModel.length; i++) {\n                    var model = this.getCellInstance(initialModel[i].id);\n                    this.checkingElement = initialModel[i];\n                    this.spacedRowValue = null;\n                    this.spacedColumnValue = null;\n                    checkForAdjustment = this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, element);\n                    if (checkForAdjustment && !isNullOrUndefined(this.spacedColumnValue)) {\n                        this.setPanelPosition(initialModel[i], this.spacedRowValue, this.spacedColumnValue);\n                        this.oldRowCol[(initialModel[i].id)] = { row: this.spacedRowValue, col: this.spacedColumnValue };\n                        var value = {\n                            attributes: {\n                                row: this.spacedRowValue.toString(),\n                                col: this.spacedColumnValue.toString(),\n                            }\n                        };\n                        this.setAttributes(value, initialModel[i]);\n                        this.panelPropertyChange(model, { col: this.spacedColumnValue, row: this.spacedRowValue });\n                        // updated the panel model array as inTopAdjustable case with floating enabled instead of dragging and extra row\n                        if (this.topAdjustable && this.allowFloating) {\n                            this.updatePanels();\n                            this.updateCloneArrayObject();\n                        }\n                        this.spacedRowValue = null;\n                        if (i < initialModel.length) {\n                            continue;\n                        }\n                    }\n                    else {\n                        collisionModels.push(initialModel[i]);\n                    }\n                }\n            }\n        }\n        if (collisionModels.length > 0) {\n            var proxy_1 = this;\n            collisionModels.forEach(function (item1) {\n                if (proxy_1.overlapElement.indexOf(item1) === -1) {\n                    proxy_1.overlapElement.push(item1);\n                }\n            });\n            if (this.overlapElement && this.overlapElement.indexOf(element) !== -1) {\n                this.overlapElement.splice(this.overlapElement.indexOf(element), 1);\n            }\n            if (collisionModels.length > 0) {\n                this.updateRowColumn(panelModel.row, this.overlapElement, element);\n                this.checkForCompletePushing();\n            }\n        }\n        if (!this.isSubValue) {\n            this.sortedPanel();\n        }\n        this.updateRowHeight();\n        this.updateGridLines();\n    };\n    DashboardLayout.prototype.checkForCompletePushing = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.collisionChecker[this.panels[i].id] && this.collisionChecker[this.panels[i].id] !== null) {\n                this.overlapElement = [this.collisionChecker[this.panels[i].id].ele];\n                var key = this.panels[i].id;\n                this.updateRowColumn(this.collisionChecker[key].row, this.overlapElement, this.collisionChecker[key].srcEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.updateCollisionChecked = function (item) {\n        for (var count = 0; count < Object.keys(this.collisionChecker).length; count++) {\n            this.collisionChecker[item.id] = null;\n        }\n    };\n    DashboardLayout.prototype.updateRowColumn = function (row, ele, srcEle) {\n        if (!srcEle) {\n            return;\n        }\n        var eleSizeY = parseInt(srcEle.getAttribute('data-sizeY'), 10);\n        var eleRow = parseInt(srcEle.getAttribute('data-row'), 10);\n        this.overlapElementClone = this.overlapElement && !this.shouldRestrict ? this.overlapElement : this.overlapElement;\n        for (var i = 0; i < this.overlapElementClone.length; i++) {\n            if (this.overlapElementClone.length === 0) {\n                return;\n            }\n            for (var i_1 = 0; i_1 < this.overlapElementClone.length; i_1++) {\n                this.collisionChecker[this.overlapElementClone[i_1].id] = {\n                    ele: this.overlapElementClone[i_1],\n                    row: row,\n                    srcEle: srcEle\n                };\n            }\n            var updatedRow = eleRow + eleSizeY;\n            var collisionY = parseInt(this.overlapElementClone[i].getAttribute('data-sizeY'), 10);\n            var collisionCol = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n            var collisionX = parseInt(this.overlapElementClone[i].getAttribute('data-sizeX'), 10);\n            var colValue = void 0;\n            var collisionModels = void 0;\n            if (this.overlapSubElementClone.indexOf(srcEle) === -1) {\n                this.overlapSubElementClone.push(srcEle);\n            }\n            if (this.overlapSubElementClone.indexOf(this.overlapElementClone[i]) === -1) {\n                this.overlapSubElementClone.push(this.overlapElementClone[i]);\n            }\n            if (collisionY > 1 || collisionX > 1) {\n                var overlapElementModel = this.getCellInstance(this.overlapElementClone[i].id);\n                colValue = overlapElementModel.col;\n                var ele_1 = document.getElementById(overlapElementModel.id);\n                for (var k = overlapElementModel.row; k < eleRow + eleSizeY; k++) {\n                    this.isSubValue = true;\n                    this.panelPropertyChange(overlapElementModel, { row: overlapElementModel.row + 1 });\n                    ele_1.setAttribute('data-row', overlapElementModel.row.toString());\n                    this.setPanelPosition(ele_1, overlapElementModel.row, colValue);\n                    this.updateCollisionChecked(ele_1);\n                    this.oldRowCol[(ele_1.id)] = { row: overlapElementModel.row, col: colValue };\n                    var panelModel = this.getCellInstance(ele_1.id);\n                    this.panelPropertyChange(panelModel, { col: colValue, row: overlapElementModel.row });\n                    var eleRow_1 = parseInt(ele_1.getAttribute('data-row'), 10);\n                    var eleCol = parseInt(ele_1.getAttribute('data-col'), 10);\n                    var sizeX = parseInt(ele_1.getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(ele_1.getAttribute('data-sizeY'), 10);\n                    var excludeElements = [];\n                    excludeElements.push(ele_1);\n                    excludeElements.push(srcEle);\n                    collisionModels = this.collisions(eleRow_1, eleCol, sizeX, sizeY, excludeElements);\n                    if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                        collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                    }\n                    this.collisionPanel(collisionModels, eleCol, eleRow_1, ele_1);\n                }\n                this.isSubValue = false;\n            }\n            else {\n                if (this.addPanelCalled) {\n                    this.addPanelCalled = false;\n                }\n                this.overlapElementClone[i].setAttribute('data-row', updatedRow.toString());\n                var excludeEle = [];\n                excludeEle.push(this.overlapElementClone[i]);\n                excludeEle.push(srcEle);\n                collisionModels = this.collisions(updatedRow, collisionCol, collisionX, collisionY, excludeEle);\n                if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                    collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                }\n                colValue = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n                this.setPanelPosition(this.overlapElementClone[i], updatedRow, colValue);\n                this.updateCollisionChecked(this.overlapElementClone[i]);\n                this.oldRowCol[(this.overlapElementClone[i].id)] = { row: updatedRow, col: colValue };\n                var panelModel = this.getCellInstance(this.overlapElementClone[i].id);\n                this.panelPropertyChange(panelModel, { col: colValue, row: updatedRow });\n                this.collisionPanel(collisionModels, colValue, updatedRow, this.overlapElementClone[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.collisionPanel = function (collisionModels, colValue, updatedRow, clone) {\n        var panelModel = this.getCellInstance(clone.id);\n        this.panelPropertyChange(panelModel, { row: updatedRow, col: colValue });\n        if (collisionModels.length > 0) {\n            var proxy_2 = this;\n            this.overlapElement = [];\n            this.shouldRestrict = true;\n            collisionModels.forEach(function (item1) {\n                proxy_2.overlapElement.push(item1);\n            });\n            var overlapElementRow1 = parseInt(clone.getAttribute('data-row'), 10);\n            for (var m = 0; m < this.overlapElement.length; m++) {\n                this.updateRowColumn(overlapElementRow1, this.overlapElement, clone);\n            }\n            this.shouldRestrict = false;\n        }\n        else {\n            if (!this.addPanelCalled) {\n                this.sortedPanel();\n            }\n            if (this.overlapSubElementClone.length > 0) {\n                var _loop_5 = function (p) {\n                    var rowVal = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-row'), 10);\n                    var colValue_1 = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-col'), 10);\n                    var sizeX = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeY'), 10);\n                    var collisionModels1 = void 0;\n                    collisionModels1 = this_3.collisions(rowVal, colValue_1, sizeX, sizeY, this_3.overlapSubElementClone);\n                    if (this_3.mainElement && collisionModels1.indexOf(this_3.mainElement) !== -1) {\n                        collisionModels1.splice(collisionModels1.indexOf(this_3.mainElement), 1);\n                    }\n                    var proxy = this_3;\n                    collisionModels1.forEach(function (item1) {\n                        proxy.overlapElement.push(item1);\n                    });\n                    if (collisionModels1.length > 0) {\n                        this_3.updateRowColumn(rowVal, this_3.overlapElement, this_3.overlapSubElementClone[p]);\n                    }\n                };\n                var this_3 = this;\n                for (var p = 0; p < this.overlapSubElementClone.length; p++) {\n                    _loop_5(p);\n                }\n            }\n            this.overlapSubElementClone = [];\n        }\n    };\n    DashboardLayout.prototype.removeResizeClasses = function (panelElements) {\n        for (var i = 0; i < panelElements.length; i++) {\n            var element = panelElements[i];\n            var resizerElements = element.querySelectorAll('.e-resize');\n            for (var i_2 = 0; i_2 < resizerElements.length; i_2++) {\n                detach(resizerElements[i_2]);\n            }\n        }\n    };\n    DashboardLayout.prototype.ensureDrag = function () {\n        this.checkDragging(this.dragCollection);\n        var dragPanels = this.element.querySelectorAll('.' + drag);\n        removeClass(dragPanels, [drag]);\n        this.setClasses(this.panelCollection);\n    };\n    DashboardLayout.prototype.setClasses = function (panelCollection) {\n        for (var i = 0; i < panelCollection.length; i++) {\n            var element = panelCollection[i];\n            var containerEle = panelCollection[i].querySelector('.e-panel-container');\n            if (this.allowDragging) {\n                if (this.draggableHandle && element.querySelectorAll(this.draggableHandle)[0]) {\n                    addClass([element.querySelectorAll(this.draggableHandle)[0]], [drag]);\n                }\n                else {\n                    addClass([element], [drag]);\n                }\n            }\n            if (this.allowResizing &&\n                this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n                this.setResizingClass(element, containerEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.setResizingClass = function (ele, container) {\n        this.availableClasses = this.resizableHandles;\n        for (var j = 0; j < this.availableClasses.length; j++) {\n            var spanEle = this.createElement('span');\n            var addClassValue = void 0;\n            container.appendChild(spanEle);\n            if (this.availableClasses[j] === 'e-east' || this.availableClasses[j] === 'e-west' ||\n                this.availableClasses[j] === 'e-north' || this.availableClasses[j] === 'e-south') {\n                addClassValue = single;\n            }\n            else {\n                addClassValue = double;\n            }\n            addClass([spanEle], [addClassValue, this.availableClasses[j], resize, resizeicon]);\n        }\n    };\n    DashboardLayout.prototype.setXYAttributes = function (element, panelModel) {\n        var value = {\n            value: {\n                sizeX: panelModel.sizeX.toString(),\n                sizeY: panelModel.sizeY.toString(),\n                minSizeX: panelModel.minSizeX.toString(),\n                minSizeY: panelModel.minSizeY.toString(),\n                maxSizeX: !isNullOrUndefined(panelModel.maxSizeX) ? panelModel.maxSizeX.toString() : undefined,\n                maxSizeY: !isNullOrUndefined(panelModel.maxSizeY) ? panelModel.maxSizeY.toString() : undefined,\n                row: panelModel.row.toString(),\n                col: panelModel.col.toString(),\n            }\n        };\n        this.setAttributes(value, element);\n    };\n    DashboardLayout.prototype.setXYDimensions = function (panelModel) {\n        var cellHeight = this.getCellSize()[1];\n        var cellWidth = this.getCellSize()[0];\n        var widthValue;\n        var heigthValue;\n        if (panelModel && typeof (cellWidth) === 'number' && typeof (panelModel.sizeX) === 'number' && panelModel.sizeX > 1) {\n            widthValue = (panelModel.sizeX * cellWidth) + (panelModel.sizeX - 1) * this.cellSpacing[0];\n        }\n        else {\n            widthValue = cellWidth;\n        }\n        if (panelModel && typeof (cellHeight) === 'number' && panelModel.sizeY > 1 && typeof (panelModel.sizeY) === 'number') {\n            heigthValue = (panelModel.sizeY * cellHeight) + (panelModel.sizeY - 1) * this.cellSpacing[1];\n        }\n        else {\n            heigthValue = formatUnit(cellHeight);\n        }\n        return [heigthValue, widthValue];\n    };\n    DashboardLayout.prototype.getRowColumnDragValues = function (args) {\n        var value = [];\n        var elementTop = parseInt(args.element.style.top, 10);\n        var elementLeft = parseInt(args.element.style.left, 10);\n        var row = Math.round(elementTop / (this.getCellSize()[1] + this.cellSpacing[1]));\n        var col = Math.round(elementLeft / (this.getCellSize()[0] + +this.cellSpacing[0]));\n        value = [row, col];\n        return value;\n    };\n    DashboardLayout.prototype.checkForChanges = function (isInteracted, added, removed) {\n        var changedPanels = [];\n        if (this.removeAllCalled) {\n            changedPanels = [];\n        }\n        else {\n            for (var i = 0; i < this.panels.length; i++) {\n                if (((!isNullOrUndefined(added) ? (this.panels[i].id !== added[0].id) : true) &&\n                    (!isNullOrUndefined(removed) ? (this.panels[i].id !== removed[0].id) : true)) &&\n                    (this.panels[i].row !== this.panelsInitialModel[i].row || this.panels[i].col !== this.panelsInitialModel[i].col)) {\n                    changedPanels.push(this.panels[i]);\n                }\n            }\n        }\n        if (changedPanels.length > 0 || this.removeAllCalled) {\n            var changedArgs = {\n                changedPanels: changedPanels, isInteracted: isInteracted,\n                addedPanels: !isNullOrUndefined(added) ? added : [], removedPanels: !isNullOrUndefined(removed) ? removed : []\n            };\n            this.trigger('change', changedArgs);\n        }\n    };\n    DashboardLayout.prototype.enableDraggingContent = function (collections) {\n        var _this = this;\n        for (var i = 0; i < collections.length; i++) {\n            var cellElement = collections[i];\n            {\n                this.dragobj = new Draggable(cellElement, {\n                    preventDefault: false,\n                    clone: false,\n                    dragArea: this.element,\n                    isDragScroll: true,\n                    handle: this.draggableHandle ? this.draggableHandle : '.e-panel',\n                    abort: '.e-resize',\n                    dragStart: this.onDraggingStart.bind(this),\n                    dragStop: function (args) {\n                        var model = _this.getCellInstance(_this.mainElement.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(model.row, model.col, model.sizeX, model.sizeY, _this.mainElement).length > 0) {\n                            _this.setHolderPosition(args);\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                            _this.updatePanelLayout(_this.mainElement, model);\n                        }\n                        else {\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                        }\n                        _this.mainElement = null;\n                        var item = _this.getPanelBase(args);\n                        if (_this.shadowEle) {\n                            detach(_this.shadowEle);\n                        }\n                        removeClass([_this.element], [preventSelect]);\n                        removeClass([args.element], [dragging]);\n                        _this.shadowEle = null;\n                        args.element.classList.remove('e-dragging');\n                        var row = _this.getRowColumnDragValues(args)[0];\n                        var col = _this.getRowColumnDragValues(args)[1];\n                        var panelModel = _this.getCellInstance(args.element.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(row, col, panelModel.sizeX, panelModel.sizeY, document.getElementById(item.id)).length === 0) {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), { row: row, col: col });\n                            _this.oldRowCol[args.element.id].row = row;\n                            _this.oldRowCol[args.element.id].col = col;\n                            _this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n                            _this.sortedPanel();\n                        }\n                        else {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), {\n                                row: _this.oldRowCol[args.element.id].row,\n                                col: _this.oldRowCol[args.element.id].col\n                            });\n                            args.element.setAttribute('data-col', _this.getCellInstance(args.element.id).col.toString());\n                            args.element.setAttribute('data-row', _this.getCellInstance(args.element.id).row.toString());\n                            _this.sortedPanel();\n                        }\n                        var panelInstance = _this.getCellInstance(args.element.id);\n                        _this.setPanelPosition(args.element, panelInstance.row, panelInstance.col);\n                        _this.updatePanels();\n                        _this.updateServerPanelData();\n                        _this.updateCloneArrayObject();\n                        _this.checkForChanges(true);\n                        _this.dragStopEventArgs = { event: args.event, element: args.element };\n                        _this.trigger('dragStop', args);\n                        _this.resizeEvents();\n                        _this.rows = _this.maxRow(true);\n                        _this.setHeightWidth();\n                        _this.updateDragArea();\n                    },\n                    drag: function (args) {\n                        _this.draggedEventArgs = {\n                            event: args.event,\n                            element: args.element,\n                            target: closest((args.target), '.e-panel')\n                        };\n                        _this.trigger('drag', _this.draggedEventArgs);\n                        _this.onDragStart(args);\n                    }\n                });\n                if (this.dragCollection.indexOf(this.dragobj) === -1) {\n                    this.dragCollection.push(this.dragobj);\n                }\n            }\n        }\n    };\n    ;\n    DashboardLayout.prototype.updatePanels = function () {\n        this.moveItemsUpwards();\n        this.updateOldRowColumn();\n        this.sortedPanel();\n    };\n    DashboardLayout.prototype.updateDragArea = function () {\n        this.dragCollection.forEach(function (dragobj) {\n            // tslint:disable-next-line\n            dragobj.setDragArea();\n        });\n    };\n    DashboardLayout.prototype.updateRowsHeight = function (row, sizeY, addRows) {\n        if (row + sizeY >= this.rows) {\n            this.rows = this.rows + addRows;\n            this.setHeightWidth();\n        }\n    };\n    DashboardLayout.prototype.onDraggingStart = function (args) {\n        var dragArgs = args;\n        this.trigger('dragStart', dragArgs, function (dragArgs) {\n            if (isBlazor()) {\n                dragArgs.bindEvents(args.element);\n            }\n        });\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        this.mainElement = args.element;\n        this.cloneObject = JSON.parse(JSON.stringify(this.cloneObject));\n        var eleRowValue = this.startRow = parseInt(args.element.getAttribute('data-row'), 10);\n        this.startCol = parseInt(args.element.getAttribute('data-col'), 10);\n        var eleSizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        this.updateRowsHeight(eleRowValue, eleSizeY, eleSizeY);\n        this.updateDragArea();\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        this.shadowEle.classList.add('e-holder-transition');\n        setStyle(this.shadowEle, { 'position': 'absolute' });\n        addClass([this.element], [preventSelect]);\n        addClass([args.element], [dragging]);\n        this.element.appendChild(this.shadowEle);\n        this.shadowEle = document.querySelector('.e-holder');\n        this.shadowEle.style.height = (this.getCellInstance(args.element.id).sizeY * this.cellSize[1]) + 'px';\n        this.shadowEle.style.width = (this.getCellInstance(args.element.id).sizeX * this.cellSize[0]) + 'px';\n        var panelInstance = this.getCellInstance(args.element.id);\n        this.setPanelPosition(this.shadowEle, panelInstance.row, panelInstance.col);\n    };\n    ;\n    // tslint:disable-next-line\n    DashboardLayout.prototype.cloneModels = function (source, target) {\n        if (target === undefined) {\n            target = [];\n        }\n        for (var i = 0; i < source.length; i++) {\n            // tslint:disable-next-line\n            if (!target[i]) {\n                target[i] = {};\n            }\n            // tslint:disable-next-line\n            for (var k in source[i]) {\n                target[i][k] = source[i][k];\n            }\n        }\n        return target;\n    };\n    ;\n    DashboardLayout.prototype.onDragStart = function (args) {\n        var endCol;\n        var endRow;\n        var dragCol;\n        var col = dragCol = this.getRowColumnDragValues(args)[1];\n        var row = this.getRowColumnDragValues(args)[0];\n        if (col < 0 || row < 0) {\n            return;\n        }\n        this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        var panelModel = this.getCellInstance(args.element.id);\n        this.updateRowsHeight(panelModel.row, panelModel.sizeY, 1);\n        this.updateDragArea();\n        if (this.allowPushing) {\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            endCol = this.oldRowCol[(args.element.id)].col;\n            endRow = this.oldRowCol[(args.element.id)].row;\n            this.oldRowCol[(args.element.id)] = { row: row, col: col };\n            this.updateOldRowColumn();\n            if (this.startCol !== endCol || this.startRow !== endRow) {\n                this.setHolderPosition(args);\n                if (this.startCol !== endCol) {\n                    this.startRow = endRow;\n                }\n                if (this.startRow !== endRow) {\n                    this.startCol = endCol;\n                }\n                if (this.allowPushing) {\n                    this.mainElement = args.element;\n                    var model = panelModel;\n                    this.checkCollision = this.collisions(model.row, model.col, model.sizeX, model.sizeY, args.element);\n                    if (panelModel.col >= this.checkColumnValue) {\n                        this.checkCollision = [];\n                    }\n                    this.updatePanelLayout(args.element, panelModel);\n                    this.moveItemsUpwards();\n                }\n            }\n        }\n        if (this.allowPushing !== false) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        }\n        if (this.oldRowCol[args.element.id].row !== row || this.oldRowCol[args.element.id].col !== col) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n        }\n        if (this.startCol !== dragCol) {\n            this.startCol = endCol;\n            this.moveItemsUpwards();\n        }\n        if (!this.allowPushing) {\n            this.setHolderPosition(args);\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        if (this.allowPushing === false) {\n            return;\n        }\n    };\n    DashboardLayout.prototype.getPanelBase = function (args) {\n        var item;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === ((args.element\n                && args.element.id) || args)) {\n                item = this.panelCollection[i];\n            }\n        }\n        return item;\n    };\n    DashboardLayout.prototype.getPanel = function (row, column, excludeItems) {\n        if (excludeItems && !(excludeItems instanceof Array)) {\n            excludeItems = [excludeItems];\n        }\n        var sizeY = 1;\n        while (row > -1) {\n            var sizeX = 1;\n            var col = column;\n            while (col > -1) {\n                var items = this.sortedArray[row];\n                if (items) {\n                    var item = items[col];\n                    if (item && (!excludeItems ||\n                        excludeItems.indexOf(item) === -1) && parseInt(item.getAttribute('data-sizeX'), 10) >= sizeX\n                        && parseInt(item.getAttribute('data-sizeY'), 10) >= sizeY) {\n                        return item;\n                    }\n                }\n                ++sizeX;\n                --col;\n            }\n            --row;\n            ++sizeY;\n        }\n        return null;\n    };\n    ;\n    DashboardLayout.prototype.setHolderPosition = function (args) {\n        var cellSizeOne;\n        var cellSizeZero;\n        var sizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        var col = parseInt(args.element.getAttribute('data-col'), 10);\n        var row = parseInt(args.element.getAttribute('data-row'), 10);\n        var sizeX = parseInt(args.element.getAttribute('data-sizeX'), 10);\n        var widthValue = this.getCellSize()[0];\n        var heightValue = this.getCellSize()[1];\n        var top = row === 0 ? 0 : (((row) * (parseInt(heightValue.toString(), 10) + this.cellSpacing[1])));\n        var left = col === 0 ? 0 : (((col) * (parseInt(widthValue.toString(), 10) + this.cellSpacing[0])));\n        cellSizeOne = this.getCellSize()[1];\n        cellSizeZero = this.getCellSize()[0];\n        this.elementRef.top = this.shadowEle.style.top = top + 'px';\n        this.elementRef.left = this.shadowEle.style.left = left + 'px';\n        this.elementRef.height = this.shadowEle.style.height = ((sizeY * cellSizeOne) + ((sizeY - 1) * this.cellSpacing[1])) + 'px';\n        this.elementRef.width = this.shadowEle.style.width = ((sizeX * cellSizeZero) + ((sizeX - 1) * this.cellSpacing[0])) + 'px';\n    };\n    ;\n    DashboardLayout.prototype.getCellInstance = function (idValue) {\n        var currentCellInstance;\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].id === idValue) {\n                currentCellInstance = this.panels[i];\n            }\n        }\n        return currentCellInstance;\n    };\n    /**\n     * Allows to add a panel to the Dashboardlayout.\n     * @param {panel: [`PanelModel`](./panelModel)} panel -  Defines the panel element.\n     * @returns void\n     * @deprecated\n     */\n    DashboardLayout.prototype.addPanel = function (panel) {\n        this.allowServerDataBinding = false;\n        this.maxCol();\n        if (!panel.minSizeX) {\n            panel.minSizeX = 1;\n        }\n        if (!panel.minSizeY) {\n            panel.minSizeY = 1;\n        }\n        if (!panel.id) {\n            panel.id = 'layout_' + this.panelID.toString();\n            this.panelID = this.panelID + 1;\n        }\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', panel, true);\n        this.panels.push(panelProp);\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        this.setMinMaxValues(panelProp);\n        if (this.maxColumnValue < panelProp.col || this.maxColumnValue < (panelProp.col + panelProp.sizeX)) {\n            this.panelPropertyChange(panelProp, { col: this.maxColumnValue - panelProp.sizeX });\n        }\n        var cell = this.renderCell(panelProp, true, null);\n        this.oldRowCol[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.cloneObject[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.updateOldRowColumn();\n        this.element.insertAdjacentElement('afterbegin', cell);\n        this.addPanelCalled = true;\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n            if (this.isBlazor) {\n                cell.style.removeProperty('visibility');\n            }\n            this.removeResizeClasses(this.panelCollection);\n        }\n        else {\n            this.mainElement = cell;\n            if (!this.checkCollision) {\n                this.checkCollision = [];\n            }\n            this.setPanelPosition(cell, panelProp.row, panelProp.col);\n            if (this.isBlazor) {\n                cell.style.removeProperty('visibility');\n            }\n            this.updatePanelLayout(cell, panelProp);\n        }\n        this.addPanelCalled = false;\n        if (this.allowDragging &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.enableDraggingContent([document.getElementById(panelProp.id)]);\n        }\n        this.setClasses([cell]);\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updateOldRowColumn();\n        this.sortedPanel();\n        this.updateCloneArrayObject();\n        if (this.allowResizing) {\n            for (var i = 0; i < cell.querySelectorAll('.e-resize').length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(cell.querySelectorAll('.e-resize')[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'msie') {\n                    EventHandler.add(cell.querySelectorAll('.e-resize')[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n        this.checkForChanges(false, [panelProp]);\n        this.allowServerDataBinding = true;\n        this.serverDataBind();\n    };\n    /**\n     * Allows to update a panel in the DashboardLayout.\n     * @param {panel: [`panelModel`](./panelModel)} panel - Defines the panel element.\n     * @returns void\n     * @deprecated\n     */\n    DashboardLayout.prototype.updatePanel = function (panel) {\n        if (!panel.id) {\n            return;\n        }\n        var panelInstance = this.getCellInstance(panel.id);\n        if (!panelInstance) {\n            return;\n        }\n        this.maxCol();\n        panel.col = (panel.col < 1) ? 0 : ((panel.col > this.columns)) ? this.columns - 1 : panel.col;\n        if (isNullOrUndefined(panel.col)) {\n            panel.col = panelInstance.col;\n        }\n        this.panelPropertyChange(panelInstance, panel);\n        this.setMinMaxValues(panelInstance);\n        var cell = document.getElementById(panel.id);\n        this.mainElement = cell;\n        this.panelContent = cell.querySelector('.e-panel-container') ?\n            cell.querySelector('.e-panel-container') :\n            this.createSubElement(panelInstance.cssClass, cell.id + '_content', panelContainer);\n        cell.appendChild(this.panelContent);\n        if (panelInstance.header) {\n            var headerTemplateElement = cell.querySelector('.e-panel-header') ?\n                cell.querySelector('.e-panel-header') : this.createSubElement('', cell.id + 'template', '');\n            addClass([headerTemplateElement], [header]);\n            headerTemplateElement.innerHTML = '';\n            var id = this.element.id + 'HeaderTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.header, headerTemplateElement, id, true);\n            this.panelContent.appendChild(headerTemplateElement);\n        }\n        else {\n            if (cell.querySelector('.e-panel-header')) {\n                detach(cell.querySelector('.e-panel-header'));\n            }\n        }\n        if (panelInstance.content) {\n            this.panelBody = cell.querySelector('.e-panel-content') ? cell.querySelector('.e-panel-content') :\n                this.createSubElement(panelInstance.cssClass, cell.id + '_body', panelContent);\n            this.panelBody.innerHTML = '';\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            var id = this.element.id + 'ContentTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.content, this.panelBody, id, true);\n            this.panelContent.appendChild(this.panelBody);\n        }\n        else {\n            if (cell.querySelector('.e-panel-content')) {\n                detach(cell.querySelector('.e-panel-content'));\n            }\n        }\n        this.setXYAttributes(cell, panelInstance);\n        this.setHeightAndWidth(cell, panelInstance);\n        this.setPanelPosition(cell, panelInstance.row, panelInstance.col);\n        this.updatePanelLayout(cell, panelInstance);\n        this.mainElement = null;\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    DashboardLayout.prototype.updateCloneArrayObject = function () {\n        this.cloneArray = this.sortedArray;\n        this.cloneObject = JSON.parse(JSON.stringify(this.oldRowCol));\n    };\n    /**\n     * Returns the panels object of the DashboardLayout.\n     * @returns [`PanelModel[]`](./panelModel)\n     */\n    DashboardLayout.prototype.serialize = function () {\n        var cloneModel = this.cloneModels(this.panels);\n        var customObject = [];\n        for (var i = 0; i < cloneModel.length; i++) {\n            customObject.push({\n                id: cloneModel[i].id, row: cloneModel[i].row, col: cloneModel[i].col, sizeX: cloneModel[i].sizeX,\n                sizeY: cloneModel[i].sizeY, minSizeX: cloneModel[i].minSizeX, minSizeY: cloneModel[i].minSizeY,\n                maxSizeX: cloneModel[i].maxSizeX, maxSizeY: cloneModel[i].maxSizeY\n            });\n        }\n        return (customObject);\n    };\n    /**\n     * Removes all the panels from the DashboardLayout.\n     */\n    DashboardLayout.prototype.removeAll = function () {\n        this.removeAllCalled = true;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            detach(this.panelCollection[i]);\n        }\n        this.removeAllPanel();\n        this.updateServerPanelData();\n        this.rows = 0;\n        this.gridPanelCollection = [];\n        this.setHeightWidth();\n        this.sortedPanel();\n        this.sortedArray = [];\n        this.overlapElementClone = [];\n        this.overlapElement = [];\n        this.overlapSubElementClone = [];\n        this.panelCollection = [];\n        this.oldRowCol = {};\n        this.cloneObject = {};\n        var clonedPanels = this.cloneModels(this.panels);\n        this.setProperties({ panels: [] }, true);\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkForChanges(false, null, clonedPanels);\n        this.removeAllCalled = false;\n    };\n    /**\n     * Removes the panel from the DashboardLayout.\n     * @param {id: string} id -  Defines the panel ID.\n     * @returns void\n     */\n    DashboardLayout.prototype.removePanel = function (id) {\n        var _this = this;\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var removedPanel;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === id) {\n                detach(this.panelCollection[i]);\n                this.panelCollection.splice(i, 1);\n            }\n            if (this.panels[i].id === id) {\n                removedPanel = this.panels[i];\n                this.panels.splice(i, 1);\n                this.panelsInitialModel.splice(i, 1);\n                this.updateOldRowColumn();\n                this.sortedPanel();\n            }\n        }\n        this.updatePanels();\n        this.updateServerPanelData();\n        this.gridPanelCollection.forEach(function (item) {\n            if (item.id === id) {\n                _this.gridPanelCollection.splice(_this.gridPanelCollection.indexOf(item), 1);\n            }\n        });\n        this.updateCloneArrayObject();\n        this.checkForChanges(false, null, [removedPanel]);\n    };\n    /**\n     * Moves the panel in the DashboardLayout.\n     * @param {id: string} id - Defines the panel ID.\n     * @param {row: number} row - Defines the row of dashboard layout.\n     * @param {col: number} col - Defines the column of dashboard layout.\n     * @returns void\n     */\n    DashboardLayout.prototype.movePanel = function (id, row, col) {\n        this.movePanelCalled = true;\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var panelInstance = this.getCellInstance(id);\n        if ((isNaN(row) || row === null) || (isNaN(col) || col === null) || !panelInstance) {\n            return;\n        }\n        if (col < 0) {\n            col = 0;\n        }\n        else if (col > this.columns) {\n            col = this.columns - panelInstance.sizeX;\n        }\n        this.panelPropertyChange(panelInstance, { row: row, col: col });\n        var ele = document.getElementById(id);\n        this.mainElement = ele;\n        this.startRow = parseInt(ele.getAttribute('data-row'), 10);\n        this.startCol = parseInt(ele.getAttribute('data-col'), 10);\n        this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, ele);\n        this.updateOldRowColumn();\n        this.setPanelPosition(ele, row, col);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updateRowHeight();\n        this.updatePanels();\n        this.updateServerPanelData();\n        this.updateCloneArrayObject();\n        this.mainElement = null;\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.movePanelCalled = false;\n        this.checkForChanges(false);\n    };\n    DashboardLayout.prototype.setAttributes = function (value, ele) {\n        for (var i = 0; i < Object.keys(value).length; i++) {\n            if (Object.keys(value)) {\n                if (value[Object.keys(value)[i]].col) {\n                    ele.setAttribute('data-col', value[Object.keys(value)[i]].col.toString());\n                }\n                if (value[Object.keys(value)[i]].row) {\n                    ele.setAttribute('data-row', value[Object.keys(value)[i]].row.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeX) {\n                    ele.setAttribute('data-sizeX', value[Object.keys(value)[i]].sizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeY) {\n                    ele.setAttribute('data-sizeY', value[Object.keys(value)[i]].sizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeX) {\n                    ele.setAttribute('data-minSizeX', value[Object.keys(value)[i]].minSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeY) {\n                    ele.setAttribute('data-minSizeY', value[Object.keys(value)[i]].minSizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeX) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeY) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeY.toString());\n                }\n            }\n        }\n    };\n    /**\n     * Resize the panel in the DashboardLayout.\n     * @param {id: string} id - Defines the panel ID.\n     * @param {sizeX: number} sizeX - Defines the sizeX of dashboard layout.\n     * @param {sizeY: number} sizeY - Defines the sizeY of dashboard layout.\n     */\n    DashboardLayout.prototype.resizePanel = function (id, sizeX, sizeY) {\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var panelInstance = this.getCellInstance(id);\n        this.resizeCalled = true;\n        var ele = document.getElementById(id);\n        var args = { event: null, element: ele, isInteracted: false };\n        this.trigger('resizeStart', args);\n        this.panelPropertyChange(panelInstance, { sizeX: sizeX, sizeY: sizeY });\n        this.setMinMaxValues(panelInstance);\n        this.checkMinMaxValues(panelInstance);\n        this.mainElement = ele;\n        this.setAttributes({ value: { sizeX: panelInstance.sizeX.toString(), sizeY: panelInstance.sizeY.toString() } }, ele);\n        this.setHeightAndWidth(ele, panelInstance);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updatePanels();\n        this.updateServerPanelData();\n        this.updateRowHeight();\n        this.resizeCalled = false;\n        this.trigger('resizeStop', args);\n        this.checkForChanges(false);\n    };\n    /**\n     * Destroys the DashboardLayout component\n     * @returns void\n     */\n    DashboardLayout.prototype.destroy = function () {\n        removeClass([this.element], ['e-dashboardlayout', 'e-lib', 'e-responsive', 'e-control']);\n        this.element.removeAttribute('style');\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            this.dragCollection[i].destroy();\n        }\n        this.removeAllPanel();\n        _super.prototype.destroy.call(this);\n    };\n    DashboardLayout.prototype.removeAllPanel = function () {\n        while (this.element.firstElementChild) {\n            detach(this.element.firstElementChild);\n        }\n    };\n    DashboardLayout.prototype.setEnableRtl = function () {\n        this.enableRtl ? addClass([this.element], 'e-rtl') : removeClass([this.element], 'e-rtl');\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.updateCellSizeAndSpacing = function () {\n        this.panelResponsiveUpdate();\n        this.setHeightWidth();\n        this.getRowColumn();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n            this.setPanelPosition(ele, panelModel.row, panelModel.col);\n        }\n    };\n    DashboardLayout.prototype.updatePanelsDynamically = function (panels) {\n        this.removeAll();\n        this.setProperties({ panels: panels }, true);\n        this.setOldRowCol();\n        if (this.table) {\n            this.table.remove();\n        }\n        this.isBlazor = false;\n        this.initialize();\n        this.isBlazor = (isBlazor() && this.isServerRendered);\n        if (this.showGridLines) {\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkForIDValues = function (panels) {\n        var _this = this;\n        if (!isNullOrUndefined(panels) && panels.length > 0) {\n            this.panelID = 0;\n            panels.forEach(function (panel) {\n                if (!panel.id) {\n                    _this.panelPropertyChange(panel, { id: 'layout_' + _this.panelID.toString() });\n                    _this.panelID = _this.panelID + 1;\n                }\n            });\n        }\n        else {\n            this.restrictDynamicUpdate = true;\n        }\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var _this = this;\n        if (newProp.panels) {\n            this.checkForIDValues(newProp.panels);\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'enableRtl':\n                    this.setProperties({ enableRtl: newProp.enableRtl }, true);\n                    this.setEnableRtl();\n                    break;\n                case 'mediaQuery':\n                    this.setProperties({ mediaQuery: newProp.mediaQuery }, true);\n                    if (this.checkMediaQuery()) {\n                        this.checkMediaQuerySizing();\n                    }\n                    break;\n                case 'allowDragging':\n                    this.setProperties({ allowDragging: newProp.allowDragging }, true);\n                    this.ensureDrag();\n                    break;\n                case 'allowResizing':\n                    this.setProperties({ allowResizing: newProp.allowResizing }, true);\n                    if (this.allowResizing) {\n                        this.setClasses(this.panelCollection);\n                        this.resizeEvents();\n                    }\n                    else {\n                        var panelElements = this.element.querySelectorAll('.e-panel .e-panel-container .e-resize');\n                        for (var i = 0; i < panelElements.length; i++) {\n                            var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                            var element = panelElements[i];\n                            EventHandler.remove(element, eventName, this.downResizeHandler);\n                            if (Browser.info.name !== 'msie') {\n                                EventHandler.remove(element, 'touchstart', this.touchDownResizeHandler);\n                            }\n                        }\n                        this.removeResizeClasses(this.panelCollection);\n                    }\n                    break;\n                case 'cellSpacing':\n                    this.setProperties({ cellSpacing: newProp.cellSpacing }, true);\n                    this.updateCellSizeAndSpacing();\n                    this.updateGridLines();\n                    break;\n                case 'draggableHandle':\n                    this.setProperties({ draggableHandle: newProp.draggableHandle }, true);\n                    this.ensureDrag();\n                    break;\n                case 'allowFloating':\n                    this.setProperties({ allowFloating: newProp.allowFloating }, true);\n                    this.moveItemsUpwards();\n                    break;\n                case 'showGridLines':\n                    if (this.showGridLines) {\n                        this.setProperties({ showGridLines: newProp.showGridLines }, true);\n                        this.initGridLines();\n                    }\n                    else {\n                        if (this.table) {\n                            detach(this.table);\n                        }\n                    }\n                    break;\n                case 'allowPushing':\n                    this.setProperties({ allowPushing: newProp.allowPushing }, true);\n                    break;\n                case 'panels':\n                    if (!newProp.columns && !this.restrictDynamicUpdate) {\n                        this.isRenderComplete = false;\n                        this.updatePanelsDynamically(newProp.panels);\n                        this.isRenderComplete = true;\n                    }\n                    else {\n                        this.restrictDynamicUpdate = false;\n                    }\n                    break;\n                case 'columns':\n                    this.isRenderComplete = false;\n                    if (newProp.panels) {\n                        this.updatePanelsDynamically(newProp.panels);\n                    }\n                    this.setProperties({ columns: newProp.columns }, true);\n                    this.panelCollection = [];\n                    this.maxColumnValue = this.columns;\n                    this.calculateCellSize();\n                    this.panels.forEach(function (panel) {\n                        _this.setMinMaxValues(panel);\n                        if (_this.maxColumnValue < panel.col || _this.maxColumnValue < (panel.col + panel.sizeX)) {\n                            var colValue = _this.maxColumnValue - panel.sizeX;\n                            _this.panelPropertyChange(panel, { col: colValue < 0 ? 0 : colValue });\n                            _this.setXYAttributes(document.getElementById(panel.id), panel);\n                        }\n                        _this.setHeightAndWidth(document.getElementById(panel.id), panel);\n                        _this.panelCollection.push(document.getElementById(panel.id));\n                        _this.setPanelPosition(document.getElementById(panel.id), panel.row, panel.col);\n                        _this.mainElement = document.getElementById(panel.id);\n                        _this.updatePanelLayout(document.getElementById(panel.id), panel);\n                        _this.mainElement = null;\n                    });\n                    this.updatePanels();\n                    this.updateCloneArrayObject();\n                    this.isRenderComplete = true;\n                    this.updateGridLines();\n                    break;\n            }\n        }\n    };\n    /**\n     * Gets the properties to be maintained upon browser refresh.\n     * @returns string\n     * @private\n     */\n    DashboardLayout.prototype.getPersistData = function () {\n        var keyEntity = ['panels'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    DashboardLayout.prototype.getModuleName = function () {\n        return 'DashboardLayout';\n    };\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowDragging\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowPushing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowFloating\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"cellAspectRatio\", void 0);\n    __decorate([\n        Property([5, 5])\n    ], DashboardLayout.prototype, \"cellSpacing\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"columns\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"showGridLines\", void 0);\n    __decorate([\n        Property(null)\n    ], DashboardLayout.prototype, \"draggableHandle\", void 0);\n    __decorate([\n        Property('en-US')\n    ], DashboardLayout.prototype, \"locale\", void 0);\n    __decorate([\n        Property('max-width: 600px')\n    ], DashboardLayout.prototype, \"mediaQuery\", void 0);\n    __decorate([\n        Collection([], Panel)\n    ], DashboardLayout.prototype, \"panels\", void 0);\n    __decorate([\n        Property(['e-south-east'])\n    ], DashboardLayout.prototype, \"resizableHandles\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"change\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"drag\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resize\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"destroyed\", void 0);\n    DashboardLayout = __decorate([\n        NotifyPropertyChanges\n    ], DashboardLayout);\n    return DashboardLayout;\n}(Component));\nexport { DashboardLayout };\n"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","ROOT","HORIZONTAL_PANE","VERTICAL_PANE","PANE","SPLIT_H_PANE","SPLIT_V_PANE","SPLIT_BAR","SPLIT_H_BAR","SPLIT_V_BAR","STATIC_PANE","SCROLL_PANE","RESIZE_BAR","RESIZABLE_BAR","SPLIT_BAR_HOVER","SPLIT_BAR_ACTIVE","HIDE_HANDLER","DISABLED","COLLAPSIBLE","NAVIGATE_ARROW","ARROW_RIGHT","ARROW_LEFT","ARROW_UP","ARROW_DOWN","HIDE_ICON","EXPAND_PANE","COLLAPSE_PANE","PANE_HIDDEN","RESIZABLE_PANE","PaneProperties","_super","apply","Property","ChildProperty","Splitter","options","element","_this","call","allPanes","paneOrder","separatorOrder","allBars","previousCoordinates","currentCoordinates","updatePrePaneInPercentage","updateNextPaneInPercentage","panesDimensions","border","validDataAttributes","validElementAttributes","iconsDelay","templateElement","collapseFlag","expandFlag","onPropertyChanged","newProp","oldProp","classList","contains","_i","_a","keys","setSplitterSize","height","width","setCssClass","cssClass","isEnabled","enabled","setSeparatorSize","separatorSize","changeOrientation","orientation","paneSettings","destroyPaneSettings","createSplitPane","addSeparator","getPanesDimensions","setRTL","enableRtl","isCollapsed","paneCounts","index","parseInt","changedPropsCount","j","property","newValue","isNullOrUndefined","innerHTML","setTemplate","newVal","resizableModel","collapsibleModelUpdate","collapsed","collapsedOnchange","newValSize","updatePaneSize","style","flexBasis","staticPaneWidth","flexPaneIndexes","flexCount","size","innerText","offsetWidth","offsetHeight","avgDiffWidth","add","preRender","wrapper","cloneNode","wrapperParent","parentElement","checkBlazor","removeClass","orientation_1","addClass","css","Browser","info","name","isDevice","getPersistData","addOnPersist","getModuleName","render","checkDataAttributes","setDimension","getHeight","getWidth","setPaneSettings","EventHandler","document","onDocumentClick","renderComplete","onMove","e","currentSeparator","remove","checkPaneSize","prePaneSize","nextPaneSize","splitBarSize","previousPane","nextPane","indexOf","previousFlexBasis","updatePaneFlexBasis","nextFlexBasis","totalPercent","totalWidth","convertPercentageToPixel","type","keyCode","addStaticPaneClass","event","getSeparatorIndex","isPrevpaneCollapsed","isPrevpaneExpanded","isNextpaneCollapsed","activeElement","resizable","triggerResizing","collapsible","expand","collapse","sanitizeHelper","value","enableHtmlSanitizer","item","SanitizeHtmlHelper","beforeSanitize","extend","cancel","helper","trigger","serializeValue","api","dataIndex","getAttribute","removeDataPrefix","paneIndex","children","dataAttr","min","max","content","paneAPI","slice","forEach","el","detach","restoreElem","isBlazor","isServerRendered","childCount","paneCollection","paneValue","setProperties","checkArrow","targetArrow","querySelector","attribute","lastIndexOf","rtl","formatUnit","setStyleAttribute","push","getBoundingClientRect","className","split","hideResizer","select","showResizer","onMouseDown","isResizable","updateResizablePanes","arrow2","arrow1","paneCollapsible","updateCollapseIcons","collapseArrow","barIndex","arrow","selectAll","updateIsCollapsed","lastBarArrow","lastBarIndex","click","m","targetArrows","event_1","eventArgs","beforeAction","beforeCollapseArgs","collapsedindex","sort","collapseEventArgs","afterAction","splitterProperty","sizeValue","separator","splitBar","resizeBar","isVertical","checkSplitPane","currentBar","elementIndex","collectPanes","childNodes","elements","getPrevPane","order","getNextPane","updateSeparatorSize","resizeHanlder","addResizeHandler","createElement","appendChild","updateIconClass","leftArrow","rightArrow","createSeparator","setAttribute","proxy","addMouseActions","addEventListener","getPaneDetails","clonedEle","parentNode","toLowerCase","getElementsByClassName","wireClickEvents","eventName","allBar","querySelectorAll","sepSize","paddingLeft","paddingRight","getPreviousPaneIndex","getNextPaneIndex","sTout","hoverTimeOut","setTimeout","clearTimeout","getEventType","updateCurrentSeparator","isSeparator","isMouseEvent","isMouse","pointerType","updateCursorPosition","changeCoordinates","x","pageX","y","pageY","eventType","touches","coordinates","reportWindowSize","paneCount","wireResizeEvents","window","bind","onMouseMove","onMouseUp","touchMoveEvent","touchEndEvent","unwireResizeEvents","removeEventListener","clickHandler","hoverBars","icon","collapseAction","expandAction","splitterDetails","beforeExpandArgs","expandPane","expandEventArgs","collapseCount","flexStatus","nextElementSibling","collapseClass","updatePaneSettings","prevPaneIndex","nextPaneIndex","updateIconsOnExpand","updateFlexGrow","checkStaticPanes","flexGrow","staticPane","status","panes","hideTargetBarIcon","targetBar","showTargetBarIcon","updateIconsOnCollapse","showCurrentBarIcon","currentBarIndex","prevBar","previousElementSibling","splitInstance","prevPaneCollapsed","nextPaneExpanded","nextPaneNextEle","getPrevBar","nextBar","collapsePane","pane","nextPaneCollapsible","prevPaneCollapsible","prevPaneExpanded","nextPaneCollapsed","prevPanePreEle","currentIndex","getNextBar","updateBars","paneSize","prePaneDimenson","nextPaneDimension","preventDefault","pointerEvents","resizeStartArgs","previous","removePercentageUnit","convertPixelToPercentage","convertPixelToNumber","offset","parseFloat","targetElement","convertedValue","percentage","toString","offsetValue","Math","ceil","calcDragPosition","rectValue","separatorPosition","getSeparatorPosition","rectBound","left","top","offSet","getMinMax","selection","defaultVal","prevPane","getPaneHeight","isValidSize","isValid","getPaneDimensions","previousPaneHeightWidth","nextPaneHeightWidth","checkCoordinates","coordinatesChanged","isCursorMoved","getBorder","clientWidth","clientHeight","separatorNewPosition","validateDraggedPosition","prevPaneCurrentWidth","nextPaneCurrentWidth","validateMinMaxValues","difference","calculateCurrentDimensions","validateMinRange","paneCurrentWidth","paneMinDimensions","validatedVal","paneMinRange","validateMaxRange","paneMaxDimensions","paneMaxRange","equatePaneWidths","round","Number","draggedPos","prevPaneHeightWidth","separatorTopLeft","offsetLeft","offsetTop","prePaneRange","nextPaneRange","pane1MinSize","pane2MinSize","pane1MaxSize","pane2MaxSize","validatedSize","panesDimension","child","sizeFlag","flex-basis","template","toElement","templateCompile","ele","cnt","tempEle","compileElement","childEle","val","prop","eleVal","display","removeProperty","removeAttribute","trim","templateFn","outerHTML","compile","templateFUN","isStringTemplate","id","childElement","nodeName","destroy","isDestroyed","attributes","splitNodes","refreshing","body","addPaneClass","removePaneOrders","paneClass","setPaneOrder","removeSeparator","updatePanes","addPane","paneProperties","newPane","paneDetails","splice","insertBefore","removePane","elementClass","Collection","Event","NotifyPropertyChanges","Component","preventSelect","dragging","drag","responsive","panelContent","panelContainer","header","Panel","DashboardLayout","rows","panelID","movePanelCalled","resizeCalled","mOffX","mOffY","maxTop","maxRows","mouseX","mouseY","minTop","minLeft","isInlineRendering","removeAllCalled","panelCollection","sortedArray","gridPanelCollection","overlapElement","overlapElementClone","overlapSubElementClone","collisionChecker","dragCollection","elementRef","dimensions","allItems","oldRowCol","availableClasses","setOldRowCol","calculateCellSize","contentTemplateChild","panels","panelPropertyChange","row","col","createPanelElement","idValue","initialize","isRenderComplete","showGridLines","checkMediaQuery","initGridLines","updateDragArea","updateServerPanelData","allowServerDataBinding","serverDataBind","table","tbody","maxRow","tr","columns","td","setAttributes","sizeX","sizeY","setPanelPosition","setHeightAndWidth","updateRowHeight","childElementCount","panelElements","panelElement","getInlinePanels","maxCol","setMinMaxValues","maxColumnValue","colValue","setXYAttributes","panel_1","renderPanels","tempObject","mediaQuery","matchMedia","matches","mainElement","updatePanelLayout","setClasses","checkMediaQuerySizing","renderDashBoardCells","allowDragging","enableDraggingContent","sortedPanel","bindEvents","updatePanels","updateCloneArrayObject","checkColumnValue","panelResponsiveUpdate","setEnableRtl","cellSize","floor","cellAspectRatio","cellSpacing","recheck","updateOldRowColumn","getElementById","createSubElement","templateParser","error","sanitizedValue","sanitize","renderTemplate","appendElement","templateElements","append","cellElement","panelModel","panelId","disablePanel","headerTemplateElement","updateBlazorTemplate","panelBody","contentHeightValue","getComputedStyle","setStyle","model","hasAttribute","minSizeX","minSizeY","maxSizeX","maxSizeY","zIndex","isUndefined","panelProp","resizeEvents","allowResizing","downResizeHandler","touchDownResizeHandler","refresh","downHandler","lastMouseX","lastMouseY","moveEventName","upEventName","isMouseMoveBound","moveResizeHandler","isMouseUpBound","upResizeHandler","panelsInitialModel","cloneModels","closest","args","isInteracted","downTarget","currentTarget","shadowEle","elementX","elementY","elementWidth","elementHeight","originalWidth","getCellInstance","originalHeight","previousRow","changedTouches","touchMoveResizeHandler","getCellSize","updateMaxTopLeft","moveTarget","updateResizeElement","maxLeft","handleArray","handleClass","diffY","diffX","resizingPanel","currentX","currentY","oldSizeX","oldSizeY","dY","dX","getMinHeight","getMaxHeight","getMinWidth","getMaxWidth","getResizeRowColumn","upTarget","undefined","allowFloating","moveItemsUpwards","checkForChanges","isChanged","pixelsToColumns","pixelsToRows","collisions","getPanelBase","allowPushing","pixels","isCeil","curColWidth","l","sortItem","rowIndex","colIndex","len","moveItemUpwards","updateGridLines","availableRow","availableColumn","rowValue","columnValue","ignoreItems","column","oldRow","updateLayout","cellInstance","removeResizeClasses","checkDragging","sortPanels","_loop_1","_loop_2","this_1","filter","panel","updatedPanel","updatedRows","addPanelCalled","getActualProperties","getRowColumn","setHeightWidth","heightValue","widthValue","setXYDimensions","renderCell","dashBoardCell","bodyElement","xValue","checkMinMaxValues","cells","cell","ignore","items","h","w","getPanel","rightWardsSpaceChecking","rowElements","spacedColumns","sizeXValue","occupiedValues","getOccupiedColumns","checkingElement","next","occupiedItems","leftWardsSpaceChecking","prev","reverse","adjustmentAvailable","leftAdjustable","rightAdjustable","leftSpacing","rightSpacing","isAdjustable","rowElement","topAdjustable","eleSizeX","eleCol","getRowElements","isLeftAdjustable","spacedColumnValue","isRightAdjustable","endRow","topCheck","startRow","spacedRowValue","isXSpacingAvailable","spacing","isSpaceAvailable","subSpacingColumns","base","spaces","isLeftAdjudtable","xAdjust","replacable","isRightAdjudtable","collisionValue","collision","updatedCollision","exclusions","sortCollisionItems","collisionItems","_loop_3","_loop_4","this_2","updatedModels","removeableElement","adjust","resetLayout","cloneObject","element_1","cloneArray","checkCollision","swapAvailability","available","eleModel","count","collideModel","excludeEle","checkForSwapping","direction","eleSwapRow","isSwappable","count1","updatedRow","collideInstance","elementinstance","swapItems","swappedElements","collisionItemsRow","collisionInstance","itemModel","initialModel","collisionModels","proxy_1","item1","updateRowColumn","checkForCompletePushing","isSubValue","srcEle","updateCollisionChecked","eleSizeY","eleRow","shouldRestrict","i_1","collisionY","collisionCol","collisionX","overlapElementModel","ele_1","k","eleRow_1","excludeElements","collisionPanel","clone","proxy_2","overlapElementRow1","_loop_5","rowVal","this_3","colValue_1","collisionModels1","resizerElements","i_2","ensureDrag","dragPanels","containerEle","draggableHandle","setResizingClass","container","resizableHandles","spanEle","addClassValue","heigthValue","cellHeight","cellWidth","getRowColumnDragValues","elementTop","elementLeft","added","removed","changedPanels","changedArgs","addedPanels","removedPanels","collections","dragobj","Draggable","dragArea","isDragScroll","handle","abort","dragStart","onDraggingStart","dragStop","setHolderPosition","panelInstance","dragStopEventArgs","draggedEventArgs","onDragStart","setDragArea","updateRowsHeight","addRows","dragArgs","JSON","parse","stringify","eleRowValue","startCol","position","source","endCol","dragCol","excludeItems","cellSizeOne","cellSizeZero","currentCellInstance","addPanel","insertAdjacentElement","updatePanel","serialize","cloneModel","customObject","removeAll","removeAllPanel","clonedPanels","removePanel","removedPanel","movePanel","isNaN","resizePanel","firstElementChild","updateCellSizeAndSpacing","updatePanelsDynamically","checkForIDValues","restrictDynamicUpdate"],"mappings":"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"}