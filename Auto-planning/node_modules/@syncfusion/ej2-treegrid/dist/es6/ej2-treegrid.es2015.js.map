{"version":3,"file":"ej2-treegrid.es2015.js","sources":["../src/es6/treegrid/models/column.js","../src/es6/treegrid/models/filter-settings.js","../src/es6/treegrid/models/textwrap-settings.js","../src/es6/treegrid/base/constant.js","../src/es6/treegrid/actions/clipboard.js","../src/es6/treegrid/utils.js","../src/es6/treegrid/actions/selection.js","../src/es6/treegrid/actions/print.js","../src/es6/treegrid/models/search-settings.js","../src/es6/treegrid/models/selection-settings.js","../src/es6/treegrid/renderer/render.js","../src/es6/treegrid/base/data.js","../src/es6/treegrid/enum.js","../src/es6/treegrid/models/page-settings.js","../src/es6/treegrid/models/summary.js","../src/es6/treegrid/models/edit-settings.js","../src/es6/treegrid/models/sort-settings.js","../src/es6/treegrid/base/treegrid.js","../src/es6/treegrid/actions/reorder.js","../src/es6/treegrid/actions/resize.js","../src/es6/treegrid/actions/crud-actions.js","../src/es6/treegrid/actions/rowdragdrop.js","../src/es6/treegrid/base/index.js","../src/es6/treegrid/models/rowdrop-settings.js","../src/es6/treegrid/models/index.js","../src/es6/treegrid/renderer/virtual-row-model-generator.js","../src/es6/treegrid/renderer/index.js","../src/es6/treegrid/actions/filter.js","../src/es6/treegrid/actions/excel-export.js","../src/es6/treegrid/actions/pdf-export.js","../src/es6/treegrid/actions/page.js","../src/es6/treegrid/actions/toolbar.js","../src/es6/treegrid/actions/summary.js","../src/es6/treegrid/actions/sort.js","../src/es6/treegrid/actions/column-menu.js","../src/es6/treegrid/actions/context-menu.js","../src/es6/treegrid/actions/batch-edit.js","../src/es6/treegrid/actions/edit.js","../src/es6/treegrid/actions/command-column.js","../src/es6/treegrid/actions/detail-row.js","../src/es6/treegrid/renderer/virtual-tree-content-render.js","../src/es6/treegrid/actions/virtual-scroll.js","../src/es6/treegrid/actions/freeze-column.js","../src/es6/treegrid/actions/index.js","../src/es6/treegrid/index.js","../src/es6/index.js"],"sourcesContent":["import { merge } from '@syncfusion/ej2-base';\n/**\n * Represents TreeGrid `Column` model class.\n */\nexport class Column {\n    constructor(options) {\n        /**\n         * If `allowEditing` set to false, then it disables editing of a particular column.\n         * By default all columns are editable.\n         * @default true\n         */\n        this.allowEditing = true;\n        /**\n         * Defines the `IEditCell` object to customize default edit cell.\n         * @default {}\n         */\n        this.edit = {};\n        /**\n         * If `disableHtmlEncode` is set to true, it encodes the HTML of the header and content cells.\n         * @default true\n         */\n        this.disableHtmlEncode = true;\n        /**\n         * If `allowReordering` set to false, then it disables reorder of a particular column.\n         * By default all columns can be reorder.\n         * @default true\n         */\n        this.allowReordering = true;\n        /**\n         * If `showColumnMenu` set to false, then it disable the column menu of a particular column.\n         * By default column menu will show for all columns\n         * @default true\n         */\n        this.showColumnMenu = true;\n        /**\n         * If `allowFiltering` set to false, then it disables filtering option and filter bar element of a particular column.\n         * By default all columns are filterable.\n         * @default true\n         */\n        this.allowFiltering = true;\n        /**\n         * If `allowSorting` set to false, then it disables sorting option of a particular column.\n         * By default all columns are sortable.\n         * @default true\n         */\n        this.allowSorting = true;\n        /**\n         * If `allowResizing` is set to false, it disables resize option of a particular column.\n         * By default all the columns can be resized.\n         * @default true\n         */\n        this.allowResizing = true;\n        /**\n         *  It is used to customize the default filter options for a specific columns.\n         * * type -  Specifies the filter type as menu.\n         * * ui - to render custom component for specific column it has following functions.\n         * * ui.create â€“ It is used for creating custom components.\n         * * ui.read -  It is used for read the value from the component.\n         * * ui.write - It is used to apply component model as dynamically.\n         *\n         *  @default null\n         */\n        this.filter = {};\n        merge(this, options);\n    }\n}\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Collection, Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Represents the predicate for the filter column.\n */\nexport class Predicate extends ChildProperty {\n}\n__decorate([\n    Property()\n], Predicate.prototype, \"field\", void 0);\n__decorate([\n    Property()\n], Predicate.prototype, \"operator\", void 0);\n__decorate([\n    Property()\n], Predicate.prototype, \"value\", void 0);\n__decorate([\n    Property()\n], Predicate.prototype, \"matchCase\", void 0);\n__decorate([\n    Property()\n], Predicate.prototype, \"ignoreAccent\", void 0);\n__decorate([\n    Property()\n], Predicate.prototype, \"predicate\", void 0);\n__decorate([\n    Property({})\n], Predicate.prototype, \"actualFilterValue\", void 0);\n__decorate([\n    Property({})\n], Predicate.prototype, \"actualOperator\", void 0);\n__decorate([\n    Property()\n], Predicate.prototype, \"type\", void 0);\n__decorate([\n    Property()\n], Predicate.prototype, \"ejpredicate\", void 0);\n__decorate([\n    Property()\n], Predicate.prototype, \"uid\", void 0);\n__decorate([\n    Property()\n], Predicate.prototype, \"isForeignKey\", void 0);\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nexport class FilterSettings extends ChildProperty {\n}\n__decorate([\n    Collection([], Predicate)\n], FilterSettings.prototype, \"columns\", void 0);\n__decorate([\n    Property('FilterBar')\n], FilterSettings.prototype, \"type\", void 0);\n__decorate([\n    Property()\n], FilterSettings.prototype, \"mode\", void 0);\n__decorate([\n    Property(true)\n], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n__decorate([\n    Property(1500)\n], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n__decorate([\n    Property()\n], FilterSettings.prototype, \"operators\", void 0);\n__decorate([\n    Property(false)\n], FilterSettings.prototype, \"ignoreAccent\", void 0);\n__decorate([\n    Property('Parent')\n], FilterSettings.prototype, \"hierarchyMode\", void 0);\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the textwrap behavior of the TreeGrid.\n */\nexport class TextWrapSettings extends ChildProperty {\n}\n__decorate([\n    Property('Both')\n], TextWrapSettings.prototype, \"wrapMode\", void 0);\n","/**\n *  @hidden\n */\nexport const load = 'load';\n/** @hidden */\nexport const rowDataBound = 'rowDataBound';\n/** @hidden */\nexport const dataBound = 'dataBound';\n/** @hidden */\nexport const queryCellInfo = 'queryCellInfo';\n/** @hidden */\nexport const beforeDataBound = 'beforeDataBound';\n/** @hidden */\nexport const actionBegin = 'actionBegin';\n/** @hidden */\nexport const dataStateChange = 'dataStateChange';\n/** @hidden */\nexport const actionComplete = 'actionComplete';\n/** @hidden */\nexport const rowSelecting = 'rowSelecting';\n/** @hidden */\nexport const rowSelected = 'rowSelected';\n/** @hidden */\nexport const checkboxChange = 'checkboxChange';\n/** @hidden */\nexport const rowDeselected = 'rowDeselected';\n/** @hidden */\nexport const toolbarClick = 'toolbarClick';\n/** @hidden */\nexport const beforeExcelExport = 'beforeExcelExport';\n/** @hidden */\nexport const beforePdfExport = 'beforePdfExport';\n/** @hidden */\nexport const resizeStop = 'resizeStop';\n/** @hidden */\nexport const expanded = 'expanded';\n/** @hidden */\nexport const expanding = 'expanding';\n/** @hidden */\nexport const collapsed = 'collapsed';\n/** @hidden */\nexport const collapsing = 'collapsing';\n/** @hidden */\nexport const remoteExpand = 'remoteExpand';\n/** @hidden */\nexport const localPagedExpandCollapse = 'localPagedExpandCollapse';\n/** @hidden */\nexport const pagingActions = 'pagingActions';\n/** @hidden */\nexport const printGridInit = 'printGrid-Init';\n/** @hidden */\nexport const contextMenuOpen = 'contextMenuOpen';\n/** @hidden */\nexport const contextMenuClick = 'contextMenuClick';\n/** @hidden */\nexport const beforeCopy = 'beforeCopy';\n/** @hidden */\nexport const beforePaste = 'beforePaste';\n/** @hidden */\nexport const savePreviousRowPosition = 'savePreviousRowPosition';\n/** @hidden */\nexport const crudAction = 'crudAction';\n/** @hidden */\nexport const beginEdit = 'beginEdit';\n/** @hidden */\nexport const beginAdd = 'beginAdd';\n/** @hidden */\nexport const recordDoubleClick = 'recordDoubleClick';\n/** @hidden */\nexport const cellSave = 'cellSave';\n/** @hidden */\nexport const cellSaved = 'cellSaved';\n/** @hidden */\nexport const cellEdit = 'cellEdit';\n/** @hidden */\nexport const batchDelete = 'batchDelete';\n/** @hidden */\nexport const batchCancel = 'batchCancel';\n/** @hidden */\nexport const batchAdd = 'batchAdd';\n/** @hidden */\nexport const beforeBatchDelete = 'beforeBatchDelete';\n/** @hidden */\nexport const beforeBatchAdd = 'beforeBatchAdd';\n/** @hidden */\nexport const beforeBatchSave = 'beforeBatchSave';\n/** @hidden */\nexport const batchSave = 'batchSave';\n/** @hidden */\nexport const keyPressed = 'key-pressed';\n/** @hidden */\nexport const updateData = 'update-data';\n/** @hidden */\nexport const doubleTap = 'double-tap';\n/** @hidden */\nexport const virtualColumnIndex = 'virtualColumnIndex';\n/** @hidden */\nexport const virtualActionArgs = 'virtual-action-args';\n/** @hidden */\nexport const dataListener = 'data-listener';\n/** @hidden */\nexport const indexModifier = 'index-modifier';\n/** @hidden */\nexport const beforeStartEdit = 'edit-form';\n/** @hidden */\nexport const beforeBatchCancel = 'before-batch-cancel';\n/** @hidden */\nexport const batchEditFormRendered = 'batcheditform-rendered';\n/** @hidden */\nexport const detailDataBound = 'detailDataBound';\n/** @hidden */\nexport const rowDrag = 'rowDrag';\n/** @hidden */\nexport const rowDragStartHelper = 'rowDragStartHelper';\n/** @hidden */\nexport const rowDrop = 'rowDrop';\n/** @hidden */\nexport const rowDragStart = 'rowDragStart';\n/** @hidden */\nexport const rowsAdd = 'rows-add';\n/** @hidden */\nexport const rowsRemove = 'rows-remove';\n/** @hidden */\nexport const rowdraging = 'row-draging';\n/** @hidden */\nexport const rowDropped = 'row-dropped';\n","import * as events from '../base/constant';\nimport { isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { Clipboard as GridClipboard } from '@syncfusion/ej2-grids';\n/**\n * The `Clipboard` module is used to handle clipboard copy action.\n */\nexport class TreeClipboard extends GridClipboard {\n    constructor(parent) {\n        super(parent.grid);\n        this.treeCopyContent = '';\n        this.copiedUniqueIdCollection = [];\n        this.treeGridParent = parent;\n    }\n    setCopyData(withHeader) {\n        let copyContent = 'copyContent';\n        let getCopyData = 'getCopyData';\n        let isSelect = 'isSelect';\n        let uniqueID = 'uniqueID';\n        let currentRecords = this.treeGridParent.getCurrentViewRecords();\n        if (window.getSelection().toString() === '') {\n            this.clipBoardTextArea.value = this[copyContent] = '';\n            let rows = this.treeGridParent.grid.getRows();\n            if (this.treeGridParent.selectionSettings.mode !== 'Cell') {\n                let selectedIndexes = this.treeGridParent.getSelectedRowIndexes().sort((a, b) => {\n                    return a - b;\n                });\n                for (let i = 0; i < selectedIndexes.length; i++) {\n                    if (i > 0) {\n                        this.treeCopyContent += '\\n';\n                    }\n                    if (!rows[selectedIndexes[i]].classList.contains('e-summaryrow')) {\n                        let cells = [].slice.call(rows[selectedIndexes[i]].querySelectorAll('.e-rowcell'));\n                        let uniqueid = this.treeGridParent.getSelectedRecords()[i][uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            if (this.treeGridParent.copyHierarchyMode === 'Parent' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.parentContentData(currentRecords, selectedIndexes[i], rows, withHeader, i);\n                            }\n                            this[getCopyData](cells, false, '\\t', withHeader);\n                            this.treeCopyContent += this[copyContent];\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[copyContent] = '';\n                            if (this.treeGridParent.copyHierarchyMode === 'Child' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.childContentData(currentRecords, selectedIndexes[i], rows, withHeader);\n                            }\n                        }\n                    }\n                }\n                if (withHeader) {\n                    let headerTextArray = [];\n                    for (let i = 0; i < this.treeGridParent.getVisibleColumns().length; i++) {\n                        headerTextArray[i] = this.treeGridParent.getVisibleColumns()[i].headerText;\n                    }\n                    this[getCopyData](headerTextArray, false, '\\t', withHeader);\n                    this.treeCopyContent = this[copyContent] + '\\n' + this.treeCopyContent;\n                }\n                let args = {\n                    data: this.treeCopyContent,\n                    cancel: false,\n                };\n                this.treeGridParent.trigger(events.beforeCopy, args);\n                if (args.cancel) {\n                    return;\n                }\n                this.clipBoardTextArea.value = this[copyContent] = args.data;\n                if (!Browser.userAgent.match(/ipad|ipod|iphone/i)) {\n                    this.clipBoardTextArea.select();\n                }\n                else {\n                    this.clipBoardTextArea.setSelectionRange(0, this.clipBoardTextArea.value.length);\n                }\n                this[isSelect] = true;\n                this.copiedUniqueIdCollection = [];\n                this.treeCopyContent = '';\n            }\n            else {\n                super.setCopyData(withHeader);\n            }\n        }\n    }\n    parentContentData(currentRecords, selectedIndex, rows, withHeader, index) {\n        let getCopyData = 'getCopyData';\n        let copyContent = 'copyContent';\n        let parentItem = 'parentItem';\n        let uniqueID = 'uniqueID';\n        let level = 'level';\n        if (!isNullOrUndefined(currentRecords[selectedIndex][parentItem])) {\n            let treeLevel = currentRecords[selectedIndex][parentItem][level];\n            for (let i = 0; i < treeLevel + 1; i++) {\n                for (let j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(currentRecords[selectedIndex][parentItem]) &&\n                        currentRecords[j][uniqueID] === currentRecords[selectedIndex][parentItem][uniqueID]) {\n                        selectedIndex = j;\n                        let cells = [].slice.call(rows[selectedIndex].querySelectorAll('.e-rowcell'));\n                        let uniqueid = currentRecords[j][uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            this[getCopyData](cells, false, '\\t', withHeader);\n                            if (index > 0) {\n                                this.treeCopyContent = this.treeCopyContent + this[copyContent] + '\\n';\n                            }\n                            else {\n                                this.treeCopyContent = this[copyContent] + '\\n' + this.treeCopyContent;\n                            }\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[copyContent] = '';\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    copy(withHeader) {\n        super.copy(withHeader);\n    }\n    paste(data, rowIndex, colIndex) {\n        super.paste(data, rowIndex, colIndex);\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    getModuleName() {\n        return 'clipboard';\n    }\n    ;\n    /**\n     * To destroy the clipboard\n     * @return {void}\n     * @hidden\n     */\n    destroy() {\n        super.destroy();\n    }\n    childContentData(currentRecords, selectedIndex, rows, withHeader) {\n        let getCopyData = 'getCopyData';\n        let copyContent = 'copyContent';\n        let childRecords = 'childRecords';\n        let hasChildRecords = 'hasChildRecords';\n        let uniqueID = 'uniqueID';\n        if (currentRecords[selectedIndex][hasChildRecords]) {\n            let childData = currentRecords[selectedIndex][childRecords];\n            for (let i = 0; i < childData.length; i++) {\n                for (let j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(childData[i][uniqueID]) && currentRecords[j][uniqueID] === childData[i][uniqueID]) {\n                        if ((!isNullOrUndefined(rows[j])) && !rows[j].classList.contains('e-summaryrow')) {\n                            let cells = [].slice.call(rows[j].querySelectorAll('.e-rowcell'));\n                            let uniqueid = currentRecords[j][uniqueID];\n                            if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                                this[getCopyData](cells, false, '\\t', withHeader);\n                                this.treeCopyContent += ('\\n' + this[copyContent]);\n                                this[copyContent] = '';\n                                this.copiedUniqueIdCollection.push(uniqueid);\n                                this.childContentData(currentRecords, j, rows, withHeader);\n                            }\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n    }\n}\n","import { getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, ODataAdaptor, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { WebApiAdaptor, WebMethodAdaptor, CacheAdaptor } from '@syncfusion/ej2-data';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nexport function isRemoteData(parent) {\n    if (parent.dataSource instanceof DataManager) {\n        let adaptor = parent.dataSource.adaptor;\n        return (adaptor instanceof ODataAdaptor ||\n            (adaptor instanceof WebApiAdaptor) || (adaptor instanceof WebMethodAdaptor) ||\n            (adaptor instanceof CacheAdaptor) || adaptor instanceof UrlAdaptor);\n    }\n    return false;\n}\nexport function isCountRequired(parent) {\n    if (parent.dataSource && 'result' in parent.dataSource) {\n        return true;\n    }\n    return false;\n}\nexport function isCheckboxcolumn(parent) {\n    for (let i = 0; i < parent.columns.length; i++) {\n        if (parent.columns[i].showCheckbox) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function isFilterChildHierarchy(parent) {\n    if ((!isNullOrUndefined(parent.grid.searchSettings.key) && parent.grid.searchSettings.key !== '' &&\n        (parent.searchSettings.hierarchyMode === 'Child' || parent.searchSettings.hierarchyMode === 'None')) ||\n        (parent.allowFiltering && parent.grid.filterSettings.columns.length &&\n            (parent.filterSettings.hierarchyMode === 'Child' || parent.filterSettings.hierarchyMode === 'None'))) {\n        return true;\n    }\n    return false;\n}\n/**\n * @hidden\n */\nexport function findParentRecords(records) {\n    let datas;\n    datas = [];\n    let recordsLength = Object.keys(records).length;\n    for (let i = 0, len = recordsLength; i < len; i++) {\n        let hasChild = getObject('hasChildRecords', records[i]);\n        if (hasChild) {\n            datas.push(records[i]);\n        }\n    }\n    return datas;\n}\n/**\n * @hidden\n */\nexport function getExpandStatus(parent, record, parents) {\n    let parentRecord = isNullOrUndefined(record.parentItem) ? null :\n        getParentData(parent, record.parentItem.uniqueID);\n    let childParent;\n    if (parentRecord != null) {\n        if (parent.initialRender && !isNullOrUndefined(parentRecord[parent.expandStateMapping])\n            && !parentRecord[parent.expandStateMapping]) {\n            parentRecord.expanded = false;\n            return false;\n        }\n        else if (parentRecord.expanded === false) {\n            return false;\n        }\n        else if (parentRecord.parentItem) {\n            childParent = getParentData(parent, parentRecord.parentItem.uniqueID);\n            if (childParent && parent.initialRender && !isNullOrUndefined(childParent[parent.expandStateMapping])\n                && !childParent[parent.expandStateMapping]) {\n                childParent.expanded = false;\n                return false;\n            }\n            if (childParent && childParent.expanded === false) {\n                return false;\n            }\n            else if (childParent) {\n                return getExpandStatus(parent, childParent, parents);\n            }\n            return true;\n        }\n        else {\n            return true;\n        }\n    }\n    else {\n        return true;\n    }\n}\n/**\n * @hidden\n */\nexport function findChildrenRecords(records) {\n    let datas = [];\n    if (isNullOrUndefined(records) || (!records.hasChildRecords && !isNullOrUndefined(records.childRecords)\n        && !records.childRecords.length)) {\n        return [];\n    }\n    if (!isNullOrUndefined(records.childRecords)) {\n        let childRecords = records.childRecords;\n        for (let i = 0, len = Object.keys(childRecords).length; i < len; i++) {\n            datas.push(childRecords[i]);\n            if (childRecords[i].hasChildRecords || (!isNullOrUndefined(childRecords[i].childRecords) &&\n                childRecords[i].childRecords.length)) {\n                datas = [...datas, ...findChildrenRecords(childRecords[i])];\n            }\n        }\n    }\n    return datas;\n}\nexport function isOffline(parent) {\n    if (isRemoteData(parent)) {\n        let dm = parent.dataSource;\n        return !isNullOrUndefined(dm.ready);\n    }\n    return true;\n}\nexport function extendArray(array) {\n    let objArr = [];\n    let obj;\n    let keys;\n    for (let i = 0; i < array.length; i++) {\n        keys = Object.keys(array[i]);\n        obj = {};\n        for (let j = 0; j < keys.length; j++) {\n            obj[keys[j]] = array[i][keys[j]];\n        }\n        objArr.push(obj);\n    }\n    return objArr;\n}\nexport function getPlainData(value) {\n    delete value.hasChildRecords;\n    delete value.childRecords;\n    delete value.index;\n    delete value.parentItem;\n    delete value.level;\n    return value;\n}\nexport function getParentData(parent, value, requireFilter) {\n    if (requireFilter) {\n        let idFilter = 'uniqueIDFilterCollection';\n        return parent[idFilter][value];\n    }\n    else {\n        let id = 'uniqueIDCollection';\n        return parent[id][value];\n    }\n}\n","import { isNullOrUndefined, removeClass, isBlazor } from '@syncfusion/ej2-base';\nimport { createCheckBox } from '@syncfusion/ej2-buttons';\nimport { parentsUntil, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { getParentData, isRemoteData, isCheckboxcolumn } from '../utils';\n/**\n * TreeGrid Selection module\n * @hidden\n */\nexport class Selection {\n    /**\n     * Constructor for Selection module\n     */\n    constructor(parent) {\n        this.parent = parent;\n        this.selectedItems = [];\n        this.selectedIndexes = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    getModuleName() {\n        return 'selection';\n    }\n    addEventListener() {\n        this.parent.on('dataBoundArg', this.headerCheckbox, this);\n        this.parent.on('columnCheckbox', this.columnCheckbox, this);\n        this.parent.on('updateGridActions', this.updateGridActions, this);\n        this.parent.grid.on('colgroup-refresh', this.headerCheckbox, this);\n        this.parent.on('checkboxSelection', this.checkboxSelection, this);\n    }\n    removeEventListener() {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.headerCheckbox);\n        this.parent.off('columnCheckbox', this.columnCheckbox);\n        this.parent.grid.off('colgroup-refresh', this.headerCheckbox);\n        this.parent.off('checkboxSelection', this.checkboxSelection);\n        this.parent.off('updateGridActions', this.updateGridActions);\n    }\n    /**\n     * To destroy the Selection\n     * @return {void}\n     * @hidden\n     */\n    destroy() {\n        this.removeEventListener();\n    }\n    checkboxSelection(args) {\n        let target = getObject('target', args);\n        let checkWrap = parentsUntil(target, 'e-checkbox-wrapper');\n        let checkBox;\n        if (checkWrap && checkWrap.querySelectorAll('.e-treecheckselect').length > 0) {\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            let rowIndex;\n            rowIndex = [];\n            rowIndex.push(target.closest('tr').rowIndex);\n            this.selectCheckboxes(rowIndex);\n            this.triggerChkChangeEvent(checkBox, checkBox.nextElementSibling.classList.contains('e-check'), target.closest('tr'));\n        }\n        else if (checkWrap && checkWrap.querySelectorAll('.e-treeselectall').length > 0 && this.parent.autoCheckHierarchy) {\n            let checkBoxvalue = !checkWrap.querySelector('.e-frame').classList.contains('e-check')\n                && !checkWrap.querySelector('.e-frame').classList.contains('e-stop');\n            this.headerSelection(checkBoxvalue);\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            this.triggerChkChangeEvent(checkBox, checkBoxvalue, target.closest('tr'));\n        }\n    }\n    triggerChkChangeEvent(checkBox, checkState, rowElement) {\n        let data = this.parent.getCurrentViewRecords()[rowElement.rowIndex];\n        let args = { checked: checkState, target: checkBox, rowElement: rowElement,\n            rowData: checkBox.classList.contains('e-treeselectall')\n                ? this.parent.getCheckedRecords() : data };\n        this.parent.trigger(events.checkboxChange, args);\n    }\n    getCheckboxcolumnIndex() {\n        let mappingUid;\n        let columnIndex;\n        let columns = (this.parent.columns);\n        for (let col = 0; col < columns.length; col++) {\n            if (columns[col].showCheckbox) {\n                mappingUid = this.parent.columns[col].uid;\n            }\n        }\n        let headerCelllength = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv').length;\n        for (let j = 0; j < headerCelllength; j++) {\n            let headercell = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[j];\n            if (headercell.getAttribute('e-mappinguid') === mappingUid) {\n                columnIndex = j;\n            }\n        }\n        return columnIndex;\n    }\n    headerCheckbox() {\n        this.columnIndex = this.getCheckboxcolumnIndex();\n        if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length === 0) {\n            let headerElement = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[this.columnIndex];\n            let checkWrap;\n            let value = false;\n            let rowChkBox = this.parent.createElement('input', { className: 'e-treeselectall', attrs: { 'type': 'checkbox' } });\n            checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n            checkWrap.classList.add('e-hierarchycheckbox');\n            checkWrap.querySelector('.e-frame').style.width = '18px';\n            checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n            if (!isNullOrUndefined(headerElement)) {\n                headerElement.insertBefore(checkWrap, headerElement.firstChild);\n            }\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n        else if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length > 0) {\n            let checkWrap = this.parent.getHeaderContent().querySelectorAll('.e-checkbox-wrapper')[0];\n            let checkBoxvalue = checkWrap.querySelector('.e-frame').classList.contains('e-check');\n            if (this.parent.autoCheckHierarchy && checkBoxvalue) {\n                this.headerSelection(checkBoxvalue);\n            }\n        }\n    }\n    renderColumnCheckbox(args) {\n        let checkWrap;\n        let rowChkBox = this.parent.createElement('input', { className: 'e-treecheckselect', attrs: { 'type': 'checkbox' } });\n        let data = args.data;\n        args.cell.classList.add('e-treegridcheckbox');\n        args.cell.setAttribute('aria-label', 'checkbox');\n        let value = (isNullOrUndefined(data.checkboxState) || data.checkboxState === 'uncheck') ? false : true;\n        checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n        checkWrap.classList.add('e-hierarchycheckbox');\n        checkWrap.querySelector('.e-frame').style.width = '18px';\n        if (data.checkboxState === 'indeterminate') {\n            let checkbox = checkWrap.querySelectorAll('.e-frame')[0];\n            removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            checkWrap.querySelector('.e-frame').classList.add('e-stop');\n        }\n        checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n        return checkWrap;\n    }\n    columnCheckbox(container) {\n        let checkWrap = this.renderColumnCheckbox(container);\n        let containerELe = container.cell.querySelector('.e-treecolumn-container');\n        if (!isNullOrUndefined(containerELe)) {\n            containerELe.insertBefore(checkWrap, containerELe.querySelectorAll('.e-treecell')[0]);\n        }\n        else {\n            let spanEle = this.parent.createElement('span', { className: 'e-treecheckbox' });\n            let data = container.cell.innerHTML;\n            container.cell.innerHTML = '';\n            spanEle.innerHTML = data;\n            let divEle = this.parent.createElement('div', { className: 'e-treecheckbox-container' });\n            divEle.appendChild(checkWrap);\n            divEle.appendChild(spanEle);\n            container.cell.appendChild(divEle);\n        }\n    }\n    selectCheckboxes(rowIndexes) {\n        let adaptorName = 'adaptorName';\n        for (let i = 0; i < rowIndexes.length; i++) {\n            let record = this.parent.getCurrentViewRecords()[rowIndexes[i]];\n            let flatRecord = getParentData(this.parent, record.uniqueID);\n            record = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n                record : flatRecord;\n            let checkboxState = (record.checkboxState === 'uncheck') ? 'check' : 'uncheck';\n            record.checkboxState = checkboxState;\n            let keys = Object.keys(record);\n            for (let j = 0; j < keys.length; j++) {\n                if (flatRecord.hasOwnProperty(keys[j])) {\n                    flatRecord[keys[j]] = record[keys[j]];\n                }\n            }\n            this.traverSelection(record, checkboxState, false);\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n    }\n    traverSelection(record, checkboxState, ischildItem) {\n        let length = 0;\n        this.updateSelectedItems(record, checkboxState);\n        if (!ischildItem && record.parentItem && this.parent.autoCheckHierarchy) {\n            this.updateParentSelection(record.parentItem);\n        }\n        if (record.childRecords && this.parent.autoCheckHierarchy) {\n            let childRecords = record.childRecords;\n            if (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n                childRecords = this.getFilteredChildRecords(childRecords);\n            }\n            length = childRecords.length;\n            for (let count = 0; count < length; count++) {\n                if (!childRecords[count].isSummaryRow) {\n                    if (childRecords[count].hasChildRecords) {\n                        this.traverSelection(childRecords[count], checkboxState, true);\n                    }\n                    else {\n                        this.updateSelectedItems(childRecords[count], checkboxState);\n                    }\n                }\n            }\n        }\n    }\n    getFilteredChildRecords(childRecords) {\n        let filteredChildRecords = childRecords.filter((e) => {\n            return this.parent.filterModule.filteredResult.indexOf(e) > -1;\n        });\n        return filteredChildRecords;\n    }\n    updateParentSelection(parentRecord) {\n        let adaptorName = 'adaptorName';\n        let length = 0;\n        let childRecords = [];\n        let record = getParentData(this.parent, parentRecord.uniqueID);\n        if (record && record.childRecords) {\n            childRecords = record.childRecords;\n        }\n        if (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n            childRecords = this.getFilteredChildRecords(childRecords);\n        }\n        length = childRecords && childRecords.length;\n        let indeter = 0;\n        let checkChildRecords = 0;\n        if (!isNullOrUndefined(record)) {\n            for (let i = 0; i < childRecords.length; i++) {\n                let childRecord = this.parent.getCurrentViewRecords().filter((e) => {\n                    return e.uniqueID === childRecords[i].uniqueID;\n                });\n                let currentRecord = getParentData(this.parent, childRecords[i].uniqueID);\n                let checkBoxRecord = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n                    childRecord[0] : currentRecord;\n                if (!isNullOrUndefined(checkBoxRecord)) {\n                    if (checkBoxRecord.checkboxState === 'indeterminate') {\n                        indeter++;\n                    }\n                    else if (checkBoxRecord.checkboxState === 'check') {\n                        checkChildRecords++;\n                    }\n                }\n            }\n            if (indeter > 0 || (checkChildRecords > 0 && checkChildRecords !== length)) {\n                record.checkboxState = 'indeterminate';\n            }\n            else if (checkChildRecords === 0 && indeter === 0) {\n                record.checkboxState = 'uncheck';\n            }\n            else {\n                record.checkboxState = 'check';\n            }\n            this.updateSelectedItems(record, record.checkboxState);\n            if (record.parentItem) {\n                this.updateParentSelection(record.parentItem);\n            }\n        }\n    }\n    headerSelection(checkAll) {\n        let adaptorName = 'adaptorName';\n        let index = -1;\n        let length = 0;\n        let data = (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0) ? this.parent.filterModule.filteredResult :\n            this.parent.flatData;\n        data = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') || isRemoteData(this.parent) ?\n            this.parent.getCurrentViewRecords() : data;\n        if (!isNullOrUndefined(checkAll)) {\n            for (let i = 0; i < data.length; i++) {\n                if (checkAll) {\n                    if (data[i].checkboxState === 'check') {\n                        continue;\n                    }\n                    data[i].checkboxState = 'check';\n                    this.updateSelectedItems(data[i], data[i].checkboxState);\n                }\n                else {\n                    index = this.selectedItems.indexOf(data[i]);\n                    if (index > -1) {\n                        data[i].checkboxState = 'uncheck';\n                        this.updateSelectedItems(data[i], data[i].checkboxState);\n                        if (this.parent.autoCheckHierarchy) {\n                            this.updateParentSelection(data[i]);\n                        }\n                    }\n                }\n            }\n        }\n        if (checkAll === false && this.parent.enableVirtualization) {\n            this.selectedItems = [];\n            this.selectedIndexes = [];\n            data.filter((rec) => {\n                rec.checkboxState = 'uncheck';\n                this.updateSelectedItems(rec, rec.checkboxState);\n            });\n        }\n        length = this.selectedItems.length;\n        let checkbox = this.parent.getHeaderContent().querySelectorAll('.e-frame')[0];\n        if (length > 0 && data.length > 0) {\n            if (length !== data.length && !checkAll) {\n                removeClass([checkbox], ['e-check']);\n                checkbox.classList.add('e-stop');\n            }\n            else {\n                removeClass([checkbox], ['e-stop']);\n                checkbox.classList.add('e-check');\n            }\n        }\n        else {\n            removeClass([checkbox], ['e-check', 'e-stop']);\n        }\n    }\n    updateSelectedItems(currentRecord, checkState, filter) {\n        let record = this.parent.getCurrentViewRecords().filter((e) => {\n            return e.uniqueID === currentRecord.uniqueID;\n        });\n        let checkedRecord;\n        let adaptorName = 'adaptorName';\n        let recordIndex = this.parent.getCurrentViewRecords().indexOf(record[0]);\n        let checkboxRecord = getParentData(this.parent, currentRecord.uniqueID);\n        let checkbox;\n        if (recordIndex > -1) {\n            let tr = this.parent.getRows()[recordIndex];\n            let movableTr;\n            if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                movableTr = this.parent.getMovableDataRows()[recordIndex];\n            }\n            checkbox = tr.querySelectorAll('.e-frame')[0] ? tr.querySelectorAll('.e-frame')[0]\n                : movableTr.querySelectorAll('.e-frame')[0];\n            if (!isNullOrUndefined(checkbox)) {\n                removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            }\n        }\n        checkedRecord = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n            record[0] : checkboxRecord;\n        if (isNullOrUndefined(checkedRecord)) {\n            checkedRecord = currentRecord;\n        }\n        checkedRecord.checkboxState = checkState;\n        if (checkState === 'check' && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            if (recordIndex !== -1 && this.selectedIndexes.indexOf(recordIndex) === -1) {\n                this.selectedIndexes.push(recordIndex);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (recordIndex !== -1 &&\n                (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0))) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length === 0)) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && isNullOrUndefined(this.parent.filterModule)) {\n                this.selectedItems.push(checkedRecord);\n            }\n        }\n        else if ((checkState === 'uncheck' || checkState === 'indeterminate') && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            let index = this.selectedItems.indexOf(checkedRecord);\n            if (index !== -1) {\n                this.selectedItems.splice(index, 1);\n            }\n            if (this.selectedIndexes.indexOf(recordIndex) !== -1) {\n                let checkedIndex = this.selectedIndexes.indexOf(recordIndex);\n                this.selectedIndexes.splice(checkedIndex, 1);\n            }\n        }\n        let checkBoxclass = checkState === 'indeterminate' ? 'e-stop' : 'e-' + checkState;\n        if (recordIndex > -1) {\n            if (!isNullOrUndefined(checkbox)) {\n                checkbox.classList.add(checkBoxclass);\n            }\n        }\n    }\n    updateGridActions(args) {\n        let requestType = args.requestType;\n        let childData;\n        let childLength;\n        if (isCheckboxcolumn(this.parent)) {\n            if (this.parent.autoCheckHierarchy) {\n                if ((requestType === 'sorting' || requestType === 'paging')) {\n                    let rows = this.parent.grid.getRows();\n                    childData = this.parent.getCurrentViewRecords();\n                    childLength = childData.length;\n                    this.selectedIndexes = [];\n                    for (let i = 0; i < childLength; i++) {\n                        if (!rows[i].classList.contains('e-summaryrow')) {\n                            this.updateSelectedItems(childData[i], childData[i].checkboxState, true);\n                        }\n                    }\n                }\n                else if (requestType === 'delete' || args.action === 'add') {\n                    let updatedData = [];\n                    if (requestType === 'delete') {\n                        updatedData = args.data;\n                    }\n                    else {\n                        updatedData.push(args.data);\n                    }\n                    for (let i = 0; i < updatedData.length; i++) {\n                        if (requestType === 'delete') {\n                            let index = this.parent.flatData.indexOf(updatedData[i]);\n                            let checkedIndex = this.selectedIndexes.indexOf(index);\n                            this.selectedIndexes.splice(checkedIndex, 1);\n                            this.updateSelectedItems(updatedData[i], 'uncheck');\n                        }\n                        if (!isNullOrUndefined(updatedData[i].parentItem)) {\n                            this.updateParentSelection(updatedData[i].parentItem);\n                        }\n                    }\n                }\n                else if (args.requestType === 'add' && this.parent.autoCheckHierarchy) {\n                    args.data.checkboxState = 'uncheck';\n                }\n                else if (requestType === 'filtering' || requestType === 'searching' || requestType === 'refresh'\n                    && !isRemoteData(this.parent)) {\n                    this.selectedItems = [];\n                    this.selectedIndexes = [];\n                    childData = (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0) ?\n                        this.parent.getCurrentViewRecords() : this.parent.flatData;\n                    childData.forEach((record) => {\n                        if (record.hasChildRecords) {\n                            this.updateParentSelection(record);\n                        }\n                        else {\n                            this.updateSelectedItems(record, record.checkboxState);\n                        }\n                    });\n                    this.headerSelection();\n                }\n            }\n        }\n    }\n    getCheckedrecords() {\n        return this.selectedItems;\n    }\n    getCheckedRowIndexes() {\n        return this.selectedIndexes;\n    }\n}\n","import * as events from '../base/constant';\nimport { Grid, getObject, Print as GridPrint } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Print module\n * @hidden\n */\nexport class Print {\n    /**\n     * Constructor for Print module\n     */\n    constructor(parent) {\n        this.parent = parent;\n        Grid.Inject(GridPrint);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    getModuleName() {\n        return 'print';\n    }\n    /**\n     * @hidden\n     */\n    addEventListener() {\n        this.parent.grid.on(events.printGridInit, this.printTreeGrid, this);\n    }\n    removeEventListener() {\n        this.parent.grid.off(events.printGridInit, this.printTreeGrid);\n    }\n    printTreeGrid(printGrid) {\n        let grid = getObject('printgrid', printGrid);\n        let gridElement = getObject('element', printGrid);\n        grid.addEventListener(events.queryCellInfo, this.parent.grid.queryCellInfo);\n        grid.addEventListener(events.rowDataBound, this.parent.grid.rowDataBound);\n        grid.addEventListener(events.beforeDataBound, this.parent.grid.beforeDataBound);\n        addClass([gridElement], 'e-treegrid');\n    }\n    print() {\n        this.parent.grid.print();\n    }\n    /**\n     * To destroy the Print\n     * @return {void}\n     * @hidden\n     */\n    destroy() {\n        this.removeEventListener();\n    }\n}\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nexport class SearchSettings extends ChildProperty {\n}\n__decorate([\n    Property()\n], SearchSettings.prototype, \"fields\", void 0);\n__decorate([\n    Property(false)\n], SearchSettings.prototype, \"ignoreCase\", void 0);\n__decorate([\n    Property('contains')\n], SearchSettings.prototype, \"operator\", void 0);\n__decorate([\n    Property()\n], SearchSettings.prototype, \"key\", void 0);\n__decorate([\n    Property()\n], SearchSettings.prototype, \"hierarchyMode\", void 0);\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the selection behavior of the TreeGrid.\n */\nexport class SelectionSettings extends ChildProperty {\n}\n__decorate([\n    Property('Row')\n], SelectionSettings.prototype, \"mode\", void 0);\n__decorate([\n    Property('Flow')\n], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n__decorate([\n    Property('Single')\n], SelectionSettings.prototype, \"type\", void 0);\n__decorate([\n    Property(false)\n], SelectionSettings.prototype, \"persistSelection\", void 0);\n__decorate([\n    Property('Default')\n], SelectionSettings.prototype, \"checkboxMode\", void 0);\n__decorate([\n    Property(false)\n], SelectionSettings.prototype, \"checkboxOnly\", void 0);\n","import { getObject, appendChildren } from '@syncfusion/ej2-grids';\nimport { addClass, createElement, isNullOrUndefined, getValue } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { isRemoteData, isOffline, getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * TreeGrid render module\n * @hidden\n */\nexport class Render {\n    /**\n     * Constructor for render module\n     */\n    constructor(parent) {\n        this.parent = parent;\n        this.templateResult = null;\n        this.parent.grid.on('template-result', this.columnTemplateResult, this);\n    }\n    /**\n     * Updated row elements for TreeGrid\n     */\n    RowModifier(args) {\n        if (!args.data) {\n            return;\n        }\n        let data = args.data;\n        let parentData = data.parentItem;\n        let index;\n        if (!isNullOrUndefined(data.parentItem) && !isFilterChildHierarchy(this.parent) &&\n            (!(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root')) ||\n                (isRemoteData(this.parent) && !isOffline(this.parent)))) {\n            index = data.parentItem.index;\n            let collapsed = (this.parent.initialRender && (!(isNullOrUndefined(parentData[this.parent.expandStateMapping]) ||\n                parentData[this.parent.expandStateMapping]) || this.parent.enableCollapseAll)) ||\n                !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n            if (collapsed) {\n                args.row.style.display = 'none';\n            }\n        }\n        else {\n            index = +args.row.getAttribute('aria-rowindex');\n        }\n        if (isRemoteData(this.parent) && !isOffline(this.parent)) {\n            let proxy = this.parent;\n            let parentrec = this.parent.getCurrentViewRecords().filter((rec) => {\n                return getValue(proxy.idMapping, rec) === getValue(proxy.parentIdMapping, data);\n            });\n            if (parentrec.length > 0) {\n                let display = parentrec[0].expanded ? 'table-row' : 'none';\n                args.row.setAttribute('style', 'display: ' + display + ';');\n            }\n        }\n        //addClass([args.row], 'e-gridrowindex' + index + 'level' + (<ITreeData>args.data).level);\n        let summaryRow = getObject('isSummaryRow', args.data);\n        if (summaryRow) {\n            addClass([args.row], 'e-summaryrow');\n        }\n        if (args.row.querySelector('.e-treegridexpand')) {\n            args.row.setAttribute('aria-expanded', 'true');\n        }\n        else if (args.row.querySelector('.e-treegridcollapse')) {\n            args.row.setAttribute('aria-expanded', 'false');\n        }\n        if (this.parent.enableCollapseAll && this.parent.initialRender) {\n            if (!isNullOrUndefined(data.parentItem)) {\n                args.row.style.display = 'none';\n            }\n        }\n        this.parent.trigger(events.rowDataBound, args);\n    }\n    /**\n     * cell renderer for tree column index cell\n     */\n    cellRender(args) {\n        if (!args.data) {\n            return;\n        }\n        let grid = this.parent.grid;\n        let data = args.data;\n        let index;\n        let ispadfilter = isNullOrUndefined(data.filterLevel);\n        let pad = ispadfilter ? data.level : data.filterLevel;\n        let totalIconsWidth = 0;\n        let cellElement;\n        let column = this.parent.getColumnByField(args.column.field);\n        let summaryRow = data.isSummaryRow;\n        if (!isNullOrUndefined(data.parentItem)) {\n            index = data.parentItem.index;\n        }\n        else {\n            index = data.index;\n        }\n        if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex\n            && (args.requestType === 'add' || args.requestType === 'delete' || isNullOrUndefined(args.cell.querySelector('.e-treecell')))) {\n            let container = createElement('div', { className: 'e-treecolumn-container' });\n            let emptyExpandIcon = createElement('span', {\n                className: 'e-icons e-none',\n                styles: 'width: 10px; display: inline-block'\n            });\n            for (let n = 0; n < pad; n++) {\n                totalIconsWidth += 10;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            let iconRequired = !isNullOrUndefined(data.hasFilteredChildRecords)\n                ? data.hasFilteredChildRecords : data.hasChildRecords;\n            if (iconRequired && !isNullOrUndefined(data.childRecords)) {\n                iconRequired = !(data.childRecords.length === 0);\n            }\n            if (iconRequired) {\n                addClass([args.cell], 'e-treerowcell');\n                let expandIcon = createElement('span', { className: 'e-icons' });\n                let expand;\n                if (this.parent.initialRender) {\n                    expand = data.expanded &&\n                        (isNullOrUndefined(data[this.parent.expandStateMapping]) || data[this.parent.expandStateMapping]) &&\n                        !this.parent.enableCollapseAll;\n                }\n                else {\n                    expand = !(!data.expanded || !getExpandStatus(this.parent, data, this.parent.grid.getCurrentViewRecords()));\n                }\n                let collapsed = true;\n                if (!isNullOrUndefined(data.parentItem) && (!isNullOrUndefined(data[this.parent.expandStateMapping])\n                    && data[this.parent.expandStateMapping])\n                    && !(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root'))) {\n                    collapsed = !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n                }\n                addClass([expandIcon], (expand && collapsed) ? 'e-treegridexpand' : 'e-treegridcollapse');\n                totalIconsWidth += 18;\n                container.appendChild(expandIcon);\n                emptyExpandIcon.style.width = '7px';\n                totalIconsWidth += 7;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            else if (pad || !pad && !data.level) {\n                // icons width\n                totalIconsWidth += 20;\n                container.appendChild(emptyExpandIcon.cloneNode());\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            //should add below code when paging funcitonality implemented\n            // if (data.hasChildRecords) {\n            //     addClass([expandIcon], data.expanded ? 'e-treegridexpand' : 'e-treegridcollapse');\n            // }\n            cellElement = createElement('span', { className: 'e-treecell' });\n            if (this.parent.allowTextWrap) {\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            this.updateTreeCell(args, cellElement, container);\n            container.appendChild(cellElement);\n            args.cell.appendChild(container);\n        }\n        if (this.parent.frozenColumns > this.parent.treeColumnIndex &&\n            grid.getColumnIndexByUid(args.column.uid) === this.parent.frozenColumns + 1) {\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n        }\n        if (!isNullOrUndefined(column) && column.showCheckbox) {\n            this.parent.notify('columnCheckbox', args);\n            if (this.parent.allowTextWrap) {\n                let checkboxElement = args.cell.querySelectorAll('.e-frame')[0];\n                let width = parseInt(checkboxElement.style.width, 16);\n                totalIconsWidth += width;\n                totalIconsWidth += 10;\n                if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n                    cellElement = args.cell.querySelector('.e-treecell');\n                }\n                else {\n                    cellElement = args.cell.querySelector('.e-treecheckbox');\n                }\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n        }\n        if (summaryRow) {\n            addClass([args.cell], 'e-summarycell');\n            let summaryData = getObject(args.column.field, args.data);\n            args.cell.querySelector('.e-treecell') != null ?\n                args.cell.querySelector('.e-treecell').innerHTML = summaryData : args.cell.innerHTML = summaryData;\n        }\n        if (isNullOrUndefined(this.parent.rowTemplate)) {\n            this.parent.trigger(events.queryCellInfo, args);\n        }\n    }\n    updateTreeCell(args, cellElement, container) {\n        let textContent = args.cell.querySelector('.e-treecell') != null ?\n            args.cell.querySelector('.e-treecell').innerHTML : args.cell.innerHTML;\n        if (typeof (args.column.template) === 'object' && this.templateResult) {\n            appendChildren(cellElement, this.templateResult);\n            this.templateResult = null;\n            args.cell.innerHTML = '';\n        }\n        else if (args.cell.classList.contains('e-templatecell')) {\n            let len = args.cell.children.length;\n            for (let i = 0; i < len; len = args.cell.children.length) {\n                cellElement.appendChild(args.cell.children[i]);\n            }\n        }\n        else {\n            cellElement.innerHTML = textContent;\n            args.cell.innerHTML = '';\n        }\n    }\n    columnTemplateResult(args) {\n        this.templateResult = args.template;\n    }\n    destroy() {\n        this.parent.grid.off('template-result', this.columnTemplateResult);\n    }\n}\n","import { extend, isNullOrUndefined, setValue, getValue, isBlazor, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { DataManager, Query, DataUtil } from '@syncfusion/ej2-data';\nimport { showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { getObject, getUid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, isCountRequired } from '../utils';\nimport * as events from './constant';\n/**\n * Internal dataoperations for tree grid\n * @hidden\n */\nexport class DataManipulation {\n    constructor(grid) {\n        this.addedRecords = 'addedRecords';\n        this.parent = grid;\n        this.parentItems = [];\n        this.taskIds = [];\n        this.hierarchyData = [];\n        this.storedIndex = -1;\n        this.sortedData = [];\n        this.isSortAction = false;\n        this.addEventListener();\n        this.dataResults = {};\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n    }\n    /**\n     * @hidden\n     */\n    addEventListener() {\n        this.parent.on('updateRemoteLevel', this.updateParentRemoteData, this);\n        this.parent.grid.on('sorting-begin', this.beginSorting, this);\n        this.parent.on('updateAction', this.updateData, this);\n        this.parent.on(events.remoteExpand, this.collectExpandingRecs, this);\n        this.parent.on('dataProcessor', this.dataProcessor, this);\n    }\n    /**\n     * @hidden\n     */\n    removeEventListener() {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.remoteExpand, this.collectExpandingRecs);\n        this.parent.off('updateRemoteLevel', this.updateParentRemoteData);\n        this.parent.off('updateAction', this.updateData);\n        this.parent.off('dataProcessor', this.dataProcessor);\n        this.parent.grid.off('sorting-begin', this.beginSorting);\n    }\n    /**\n     * To destroy the dataModule\n     * @return {void}\n     * @hidden\n     */\n    destroy() {\n        this.removeEventListener();\n    }\n    /** @hidden */\n    isRemote() {\n        if (!(this.parent.dataSource instanceof DataManager)) {\n            return false;\n        }\n        return true;\n        // let gridData:  DataManager = <DataManager>this.parent.dataSource;\n        // return gridData.dataSource.offline !== true && gridData.dataSource.url !== undefined;\n    }\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    convertToFlatData(data) {\n        this.parent.flatData = (Object.keys(data).length === 0 && !(this.parent.dataSource instanceof DataManager) ?\n            this.parent.dataSource : []);\n        this.parent.parentData = [];\n        let adaptorName = 'adaptorName';\n        if ((isRemoteData(this.parent) && !isOffline(this.parent)) && data instanceof DataManager && !(data instanceof Array)) {\n            let dm = this.parent.dataSource;\n            if (this.parent.parentIdMapping) {\n                this.parent.query = isNullOrUndefined(this.parent.query) ?\n                    new Query() : this.parent.query;\n                if (this.parent.parentIdMapping) {\n                    if (this.parent.initialRender) {\n                        this.parent.query.where(this.parent.parentIdMapping, 'equal', null);\n                        this.parent.query.addParams('IdMapping', this.parent.idMapping);\n                    }\n                }\n                let clientRender = 'isClientRender';\n                if (!this.parent.hasChildMapping && !(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender])) {\n                    let qry = this.parent.query.clone();\n                    qry.queries = [];\n                    qry = qry.select([this.parent.parentIdMapping]);\n                    qry.isCountRequired = true;\n                    dm.executeQuery(qry).then((e) => {\n                        this.parentItems = DataUtil.distinct(e.result, this.parent.parentIdMapping, false);\n                        let req = getObject('dataSource.requests', this.parent).filter((e) => {\n                            return e.httpRequest.statusText !== 'OK';\n                        }).length;\n                        if (req === 0) {\n                            setValue('grid.contentModule.isLoaded', true, this.parent);\n                            if (!isNullOrUndefined(this.zerothLevelData)) {\n                                setValue('cancel', false, this.zerothLevelData);\n                                getValue('grid.renderModule', this.parent).dataManagerSuccess(this.zerothLevelData);\n                                this.zerothLevelData = null;\n                            }\n                            this.parent.grid.hideSpinner();\n                        }\n                    });\n                }\n            }\n        }\n        else if (data instanceof Array) {\n            this.hierarchyData = [];\n            this.taskIds = [];\n            for (let i = 0; i < Object.keys(data).length; i++) {\n                let tempData = data[i];\n                this.hierarchyData.push(extend({}, tempData));\n                if (!isNullOrUndefined(tempData[this.parent.idMapping])) {\n                    this.taskIds.push(tempData[this.parent.idMapping]);\n                }\n            }\n            if (this.isSelfReference) {\n                let selfData = [];\n                let mappingData = new DataManager(this.hierarchyData).executeLocal(new Query()\n                    .group(this.parent.parentIdMapping));\n                for (let i = 0; i < mappingData.length; i++) {\n                    let groupData = mappingData[i];\n                    let index = this.taskIds.indexOf(groupData.key);\n                    if (!isNullOrUndefined(groupData.key)) {\n                        if (index > -1) {\n                            let childData = (groupData.items);\n                            this.hierarchyData[index][this.parent.childMapping] = childData;\n                            continue;\n                        }\n                    }\n                    selfData.push.apply(selfData, groupData.items);\n                }\n                this.hierarchyData = this.selfReferenceUpdate(selfData);\n            }\n            if (!Object.keys(this.hierarchyData).length) {\n                this.parent.flatData = (!(this.parent.dataSource instanceof DataManager) ? this.parent.dataSource : []);\n            }\n            else {\n                this.createRecords(this.hierarchyData);\n            }\n            this.storedIndex = -1;\n        }\n        // else if (data instanceof DataManager && this.parent.isLocalData) {\n        //   this.convertToFlatData(data.dataSource.json);\n        // }\n        //this.crudActions();\n    }\n    // private crudActions(): void {\n    //   if (this.parent.dataSource instanceof DataManager && (this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n    //     let oldUpdate: Function = this.parent.dataSource.adaptor.update;\n    //     this.parent.dataSource.adaptor.update =\n    //         function (dm: DataManager, keyField: string, value: Object, tableName?: string, query?: Query, original?: Object): Object {\n    //                value = getPlainData(value);\n    //                return oldUpdate.apply(this, [dm, keyField, value, tableName, query, original]);\n    //              }\n    //   }\n    // }\n    selfReferenceUpdate(selfData) {\n        let result = [];\n        while (this.hierarchyData.length > 0 && selfData.length > 0) {\n            let index = selfData.indexOf(this.hierarchyData[0]);\n            if (index === -1) {\n                this.hierarchyData.shift();\n            }\n            else {\n                result.push(this.hierarchyData.shift());\n                selfData.splice(index, 1);\n            }\n        }\n        return result;\n    }\n    /**\n     * Function to update the zeroth level parent records in remote binding\n     * @hidden\n     */\n    updateParentRemoteData(args) {\n        let records = args.result;\n        let adaptorName = 'adaptorName';\n        let clientRender = 'isClientRender';\n        if (!this.parent.hasChildMapping && !this.parentItems.length &&\n            (!(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]) && !this.parent.loadChildOnDemand)) {\n            this.zerothLevelData = args;\n            setValue('cancel', true, args);\n        }\n        else {\n            if (!(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]) && !this.parent.loadChildOnDemand) {\n                for (let rec = 0; rec < records.length; rec++) {\n                    if ((records[rec][this.parent.hasChildMapping] || this.parentItems.indexOf(records[rec][this.parent.idMapping]) !== -1)\n                        && (isNullOrUndefined(records[rec].index))) {\n                        records[rec].taskData = extend({}, records[rec]);\n                        records[rec].uniqueID = getUid(this.parent.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + records[rec].uniqueID, records[rec], this.parent);\n                        records[rec].level = 0;\n                        records[rec].index = Math.ceil(Math.random() * 1000);\n                        records[rec].hasChildRecords = true;\n                        records[rec].checkboxState = 'uncheck';\n                    }\n                }\n            }\n            else {\n                if (!isNullOrUndefined(records)) {\n                    this.convertToFlatData(records);\n                }\n            }\n        }\n        args.result = (this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender] && !isNullOrUndefined(records))\n            || this.parent.loadChildOnDemand ? this.parent.flatData : records;\n        this.parent.notify('updateResults', args);\n    }\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    collectExpandingRecs(rowDetails) {\n        let gridRows = this.parent.getRows();\n        if (this.parent.rowTemplate) {\n            let rows = this.parent.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        let childRecord;\n        let adaptorName = 'adaptorName';\n        let args = { row: rowDetails.parentRow, data: rowDetails.record };\n        let clientRender = 'isClientRender';\n        if (rowDetails.rows.length > 0) {\n            rowDetails.record.expanded = true;\n            for (let i = 0; i < rowDetails.rows.length; i++) {\n                if (isBlazor() && this.parent.isServerRendered) {\n                    removeClass([rowDetails.rows[i]], 'e-treerowcollapsed');\n                    addClass([rowDetails.rows[i]], 'e-treerowexpanded');\n                }\n                else {\n                    rowDetails.rows[i].style.display = 'table-row';\n                }\n                if ((isBlazor() && (this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]))\n                    || this.parent.loadChildOnDemand) {\n                    let targetEle = rowDetails.rows[i].getElementsByClassName('e-treegridcollapse')[0];\n                    if (!isNullOrUndefined(targetEle)) {\n                        addClass([targetEle], 'e-treegridexpand');\n                        removeClass([targetEle], 'e-treegridcollapse');\n                    }\n                    childRecord = this.parent.rowTemplate ? this.parent.grid.getCurrentViewRecords()[rowDetails.rows[i].rowIndex] :\n                        this.parent.grid.getRowObjectFromUID(rowDetails.rows[i].getAttribute('data-Uid')).data;\n                    let childRows = [];\n                    childRows = gridRows.filter((r) => r.querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1)));\n                    if (childRows.length) {\n                        this.collectExpandingRecs({ record: childRecord, rows: childRows, parentRow: rowDetails.parentRow });\n                    }\n                }\n                let expandingTd = rowDetails.rows[i].querySelector('.e-detailrowcollapse');\n                if (!isNullOrUndefined(expandingTd)) {\n                    this.parent.grid.detailRowModule.expand(expandingTd);\n                }\n            }\n        }\n        else {\n            let dm = this.parent.dataSource;\n            let qry = this.parent.grid.getDataModule().generateQuery();\n            let clonequries = qry.queries.filter((e) => e.fn !== 'onPage' && e.fn !== 'onWhere');\n            qry.queries = clonequries;\n            qry.isCountRequired = true;\n            qry.where(this.parent.parentIdMapping, 'equal', rowDetails.record[this.parent.idMapping]);\n            showSpinner(this.parent.element);\n            dm.executeQuery(qry).then((e) => {\n                let datas = this.parent.grid.currentViewData;\n                let inx = datas.indexOf(rowDetails.record);\n                let haveChild = getObject('actual.nextLevel', e);\n                let result = e.result;\n                rowDetails.record.childRecords = result;\n                for (let r = 0; r < result.length; r++) {\n                    result[r].taskData = extend({}, result[r]);\n                    result[r].level = rowDetails.record.level + 1;\n                    result[r].index = Math.ceil(Math.random() * 1000);\n                    let parentData = extend({}, rowDetails.record);\n                    delete parentData.childRecords;\n                    result[r].parentItem = parentData;\n                    result[r].parentUniqueID = rowDetails.record.uniqueID;\n                    result[r].uniqueID = getUid(this.parent.element.id + '_data_');\n                    setValue('uniqueIDCollection.' + result[r].uniqueID, result[r], this.parent);\n                    // delete result[r].parentItem.childRecords;\n                    if ((result[r][this.parent.hasChildMapping] || this.parentItems.indexOf(result[r][this.parent.idMapping]) !== -1)\n                        && !(haveChild && !haveChild[r])) {\n                        result[r].hasChildRecords = true;\n                        result[r].expanded = false;\n                    }\n                    datas.splice(inx + r + 1, 0, result[r]);\n                }\n                setValue('result', datas, e);\n                setValue('action', 'beforecontentrender', e);\n                this.parent.trigger(events.actionComplete, e);\n                hideSpinner(this.parent.element);\n                if (this.parent.grid.aggregates.length > 0 && !this.parent.enableVirtualization) {\n                    let gridQuery = getObject('query', e);\n                    let result = 'result';\n                    if (isNullOrUndefined(gridQuery)) {\n                        gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n                    }\n                    if (!isNullOrUndefined(gridQuery)) {\n                        let summaryQuery = gridQuery.queries.filter((q) => q.fn === 'onAggregates');\n                        e[result] = this.parent.summaryModule.calculateSummaryValue(summaryQuery, e[result], true);\n                    }\n                }\n                e.count = this.parent.grid.pageSettings.totalRecordsCount;\n                let virtualArgs = {};\n                if (this.parent.enableVirtualization) {\n                    this.remoteVirtualAction(virtualArgs);\n                }\n                getValue('grid.renderModule', this.parent).dataManagerSuccess(e, virtualArgs);\n                this.parent.trigger(events.expanded, args);\n            });\n        }\n    }\n    remoteVirtualAction(virtualArgs) {\n        virtualArgs.requestType = 'refresh';\n        setValue('isExpandCollapse', true, virtualArgs);\n        let contentModule = getValue('grid.contentModule', this.parent);\n        let currentInfo = getValue('currentInfo', contentModule);\n        let prevInfo = getValue('prevInfo', contentModule);\n        if (currentInfo.loadNext && this.parent.grid.pageSettings.currentPage === currentInfo.nextInfo.page) {\n            this.parent.grid.pageSettings.currentPage = prevInfo.page;\n        }\n    }\n    beginSorting() {\n        this.isSortAction = true;\n    }\n    createRecords(data, parentRecords) {\n        let treeGridData = [];\n        for (let i = 0, len = Object.keys(data).length; i < len; i++) {\n            let currentData = extend({}, data[i]);\n            currentData.taskData = data[i];\n            let level = 0;\n            this.storedIndex++;\n            if (!currentData.hasOwnProperty('index')) {\n                currentData.index = this.storedIndex;\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping]) ||\n                (currentData[this.parent.hasChildMapping] && isCountRequired(this.parent))) {\n                currentData.hasChildRecords = true;\n                if (this.parent.enableCollapseAll || !isNullOrUndefined(this.parent.dataStateChange)\n                    && isNullOrUndefined(currentData[this.parent.childMapping])) {\n                    currentData.expanded = false;\n                }\n                else {\n                    currentData.expanded = !isNullOrUndefined(currentData[this.parent.expandStateMapping])\n                        ? currentData[this.parent.expandStateMapping] : true;\n                }\n            }\n            if (!currentData.hasOwnProperty('index')) {\n                currentData.index = currentData.hasChildRecords ? this.storedIndex : this.storedIndex;\n            }\n            if (this.isSelfReference && isNullOrUndefined(currentData[this.parent.parentIdMapping])) {\n                this.parent.parentData.push(currentData);\n            }\n            currentData.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + currentData.uniqueID, currentData, this.parent);\n            if (!isNullOrUndefined(parentRecords)) {\n                let parentData = extend({}, parentRecords);\n                delete parentData.childRecords;\n                delete parentData[this.parent.childMapping];\n                if (this.isSelfReference) {\n                    delete parentData.taskData[this.parent.childMapping];\n                }\n                currentData.parentItem = parentData;\n                currentData.parentUniqueID = parentData.uniqueID;\n                level = parentRecords.level + 1;\n            }\n            if (!currentData.hasOwnProperty('level')) {\n                currentData.level = level;\n            }\n            currentData.checkboxState = 'uncheck';\n            if (isNullOrUndefined(currentData[this.parent.parentIdMapping]) || currentData.parentItem) {\n                this.parent.flatData.push(currentData);\n            }\n            if (!this.isSelfReference && currentData.level === 0) {\n                this.parent.parentData.push(currentData);\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping] && currentData[this.parent.childMapping].length)) {\n                let record = this.createRecords(currentData[this.parent.childMapping], currentData);\n                currentData.childRecords = record;\n            }\n            treeGridData.push(currentData);\n        }\n        return treeGridData;\n    }\n    /**\n     * Function to perform filtering/sorting action for local data\n     * @hidden\n     */\n    dataProcessor(args) {\n        let isExport = getObject('isExport', args);\n        let expresults = getObject('expresults', args);\n        let exportType = getObject('exportType', args);\n        let isPrinting = getObject('isPrinting', args);\n        let dataObj;\n        let actionArgs = getObject('actionArgs', args);\n        let requestType = getObject('requestType', args);\n        let actionData = getObject('data', args);\n        let action = getObject('action', args);\n        let actionAddArgs = actionArgs;\n        let primaryKeyColumnName = this.parent.getPrimaryKeyFieldNames()[0];\n        let dataValue = getObject('data', actionAddArgs);\n        if ((!isNullOrUndefined(actionAddArgs)) && (!isNullOrUndefined(actionAddArgs.action)) && (actionAddArgs.action === 'add')\n            && (!isNullOrUndefined(actionAddArgs.data)) && isNullOrUndefined(actionAddArgs.data[primaryKeyColumnName])) {\n            actionAddArgs.data[primaryKeyColumnName] = args.result[actionAddArgs.index][primaryKeyColumnName];\n            dataValue.taskData[primaryKeyColumnName] = args.result[actionAddArgs.index][primaryKeyColumnName];\n        }\n        if ((!isNullOrUndefined(actionArgs) && Object.keys(actionArgs).length) || requestType === 'save') {\n            requestType = requestType ? requestType : actionArgs.requestType;\n            actionData = actionData ? actionData : getObject('data', actionArgs);\n            action = action ? action : getObject('action', actionArgs);\n            if (this.parent.editSettings.mode === 'Batch') {\n                this.batchChanges = this.parent.grid.editModule.getBatchChanges();\n            }\n            if (action === 'add' || (requestType === 'batchsave' && (this.parent.editSettings.mode === 'Batch'\n                && this.batchChanges[this.addedRecords].length))) {\n                this.parent.grid.currentViewData = args.result;\n            }\n            if (this.parent.isLocalData) {\n                this.updateAction(actionData, action, requestType);\n            }\n        }\n        if (isExport && !isNullOrUndefined(expresults)) {\n            dataObj = expresults;\n        }\n        else {\n            dataObj = isCountRequired(this.parent) ? getValue('result', this.parent.grid.dataSource)\n                : this.parent.grid.dataSource;\n        }\n        let results = dataObj instanceof DataManager ? dataObj.dataSource.json : dataObj;\n        let count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        if ((this.parent.grid.allowFiltering && this.parent.grid.filterSettings.columns.length) ||\n            (this.parent.grid.searchSettings.key.length > 0)) {\n            let qry = new Query();\n            let gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = new Query();\n                gridQuery = getValue('grid.renderModule.data', this.parent).filterQuery(gridQuery);\n                gridQuery = getValue('grid.renderModule.data', this.parent).searchQuery(gridQuery);\n            }\n            let fltrQuery = gridQuery.queries.filter((q) => q.fn === 'onWhere');\n            let srchQuery = gridQuery.queries.filter((q) => q.fn === 'onSearch');\n            qry.queries = fltrQuery.concat(srchQuery);\n            let filteredData = new DataManager(results).executeLocal(qry);\n            this.parent.notify('updateFilterRecs', { data: filteredData });\n            results = this.dataResults.result;\n            this.dataResults.result = null;\n            if (this.parent.grid.aggregates.length > 0) {\n                let query = getObject('query', args);\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(query)) {\n                    let summaryQuery = query.queries.filter((q) => q.fn === 'onAggregates');\n                    results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, results, true);\n                }\n            }\n        }\n        if (this.parent.grid.aggregates.length && this.parent.grid.sortSettings.columns.length === 0\n            && this.parent.grid.filterSettings.columns.length === 0 && !this.parent.grid.searchSettings.key.length) {\n            let gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n            }\n            let summaryQuery = gridQuery.queries.filter((q) => q.fn === 'onAggregates');\n            results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.parent.flatData, true);\n        }\n        if (this.parent.grid.sortSettings.columns.length > 0 || this.isSortAction) {\n            this.isSortAction = false;\n            let parentData;\n            let action = 'action';\n            let collpasedIndexes = [];\n            parentData = this.parent.parentData;\n            let sortedData;\n            let query = getObject('query', args);\n            let srtQry = new Query();\n            for (let srt = this.parent.grid.sortSettings.columns.length - 1; srt >= 0; srt--) {\n                let col = this.parent.getColumnByField(this.parent.grid.sortSettings.columns[srt].field);\n                let compFun = col.sortComparer && !this.isRemote() ?\n                    col.sortComparer.bind(col) :\n                    this.parent.grid.sortSettings.columns[srt].direction;\n                srtQry.sortBy(this.parent.grid.sortSettings.columns[srt].field, compFun);\n            }\n            let modifiedData = new DataManager(parentData).executeLocal(srtQry);\n            sortedData = modifiedData;\n            let sortArgs = { modifiedData: modifiedData, filteredData: results, srtQry: srtQry };\n            this.parent.notify('createSort', sortArgs);\n            results = sortArgs.modifiedData;\n            this.dataResults.result = null;\n            this.sortedData = results;\n            this.parent.notify('updateModel', {});\n            if (this.parent.grid.aggregates.length > 0 && !isNullOrUndefined(query)) {\n                let isSort = false;\n                let query = getObject('query', args);\n                let summaryQuery = query.queries.filter((q) => q.fn === 'onAggregates');\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.sortedData, isSort);\n            }\n        }\n        count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        let temp = this.paging(results, count, isExport, isPrinting, exportType, args);\n        results = temp.result;\n        count = temp.count;\n        args.result = results;\n        args.count = count;\n        this.parent.notify('updateResults', args);\n    }\n    paging(results, count, isExport, isPrinting, exportType, args) {\n        if (this.parent.allowPaging && (!isExport || exportType === 'CurrentPage')\n            && (!isPrinting || this.parent.printMode === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count });\n            results = this.dataResults.result;\n            count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n                : this.dataResults.count;\n        }\n        else if (this.parent.enableVirtualization && (!isExport || exportType === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count, actionArgs: getValue('actionArgs', args) });\n            results = this.dataResults.result;\n            count = this.dataResults.count;\n        }\n        let value = { result: results, count: count };\n        return value;\n    }\n    /**\n     * update for datasource\n     */\n    updateData(dataResult) {\n        this.dataResults = dataResult;\n    }\n    updateAction(actionData, action, requestType) {\n        if ((requestType === 'delete' || requestType === 'save')) {\n            this.parent.notify(events.crudAction, { value: actionData, action: action || requestType });\n        }\n        if (requestType === 'batchsave' && this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify(events.batchSave, {});\n        }\n    }\n}\n","/**\n * Defines Predefined toolbar items.\n * @hidden\n */\nexport var ToolbarItem;\n(function (ToolbarItem) {\n    ToolbarItem[ToolbarItem[\"Add\"] = 0] = \"Add\";\n    ToolbarItem[ToolbarItem[\"Edit\"] = 1] = \"Edit\";\n    ToolbarItem[ToolbarItem[\"Update\"] = 2] = \"Update\";\n    ToolbarItem[ToolbarItem[\"Delete\"] = 3] = \"Delete\";\n    ToolbarItem[ToolbarItem[\"Cancel\"] = 4] = \"Cancel\";\n    ToolbarItem[ToolbarItem[\"Search\"] = 5] = \"Search\";\n    ToolbarItem[ToolbarItem[\"ExpandAll\"] = 6] = \"ExpandAll\";\n    ToolbarItem[ToolbarItem[\"CollapseAll\"] = 7] = \"CollapseAll\";\n    ToolbarItem[ToolbarItem[\"ExcelExport\"] = 8] = \"ExcelExport\";\n    ToolbarItem[ToolbarItem[\"PdfExport\"] = 9] = \"PdfExport\";\n    ToolbarItem[ToolbarItem[\"CsvExport\"] = 10] = \"CsvExport\";\n    ToolbarItem[ToolbarItem[\"Print\"] = 11] = \"Print\";\n    ToolbarItem[ToolbarItem[\"RowIndent\"] = 12] = \"RowIndent\";\n    ToolbarItem[ToolbarItem[\"RowOutdent\"] = 13] = \"RowOutdent\";\n})(ToolbarItem || (ToolbarItem = {}));\n/**\n * Defines predefined contextmenu items.\n * @hidden\n */\nexport var ContextMenuItems;\n(function (ContextMenuItems) {\n    ContextMenuItems[ContextMenuItems[\"AutoFit\"] = 0] = \"AutoFit\";\n    ContextMenuItems[ContextMenuItems[\"AutoFitAll\"] = 1] = \"AutoFitAll\";\n    ContextMenuItems[ContextMenuItems[\"SortAscending\"] = 2] = \"SortAscending\";\n    ContextMenuItems[ContextMenuItems[\"SortDescending\"] = 3] = \"SortDescending\";\n    ContextMenuItems[ContextMenuItems[\"Edit\"] = 4] = \"Edit\";\n    ContextMenuItems[ContextMenuItems[\"Delete\"] = 5] = \"Delete\";\n    ContextMenuItems[ContextMenuItems[\"Save\"] = 6] = \"Save\";\n    ContextMenuItems[ContextMenuItems[\"Cancel\"] = 7] = \"Cancel\";\n    ContextMenuItems[ContextMenuItems[\"PdfExport\"] = 8] = \"PdfExport\";\n    ContextMenuItems[ContextMenuItems[\"ExcelExport\"] = 9] = \"ExcelExport\";\n    ContextMenuItems[ContextMenuItems[\"CsvExport\"] = 10] = \"CsvExport\";\n    ContextMenuItems[ContextMenuItems[\"FirstPage\"] = 11] = \"FirstPage\";\n    ContextMenuItems[ContextMenuItems[\"PrevPage\"] = 12] = \"PrevPage\";\n    ContextMenuItems[ContextMenuItems[\"LastPage\"] = 13] = \"LastPage\";\n    ContextMenuItems[ContextMenuItems[\"NextPage\"] = 14] = \"NextPage\";\n    ContextMenuItems[ContextMenuItems[\"AddRow\"] = 15] = \"AddRow\";\n})(ContextMenuItems || (ContextMenuItems = {}));\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the paging behavior of the TreeGrid.\n */\nexport class PageSettings extends ChildProperty {\n}\n__decorate([\n    Property(12)\n], PageSettings.prototype, \"pageSize\", void 0);\n__decorate([\n    Property(8)\n], PageSettings.prototype, \"pageCount\", void 0);\n__decorate([\n    Property(1)\n], PageSettings.prototype, \"currentPage\", void 0);\n__decorate([\n    Property()\n], PageSettings.prototype, \"totalRecordsCount\", void 0);\n__decorate([\n    Property(false)\n], PageSettings.prototype, \"enableQueryString\", void 0);\n__decorate([\n    Property(false)\n], PageSettings.prototype, \"pageSizes\", void 0);\n__decorate([\n    Property(null)\n], PageSettings.prototype, \"template\", void 0);\n__decorate([\n    Property('All')\n], PageSettings.prototype, \"pageSizeMode\", void 0);\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, getEnumValue, compile } from '@syncfusion/ej2-base';\nimport { Internationalization } from '@syncfusion/ej2-base';\nimport { CellType } from '@syncfusion/ej2-grids';\n/**\n * Configures the TreeGrid's aggregate column.\n */\nexport class AggregateColumn extends ChildProperty {\n    constructor() {\n        super(...arguments);\n        this.intl = new Internationalization();\n        this.templateFn = {};\n    }\n    /**\n     * @hidden\n     */\n    setFormatter(cultureName) {\n        if (this.format && (this.format.skeleton || this.format.format)) {\n            this.formatFn = this.getFormatFunction(this.format);\n        }\n    }\n    /**\n     * @hidden\n     */\n    getFormatFunction(format) {\n        if (format.type) {\n            return this.intl.getDateFormat(format);\n        }\n        else {\n            return this.intl.getNumberFormat(format);\n        }\n    }\n    /**\n     * @hidden\n     */\n    getFormatter() {\n        return this.formatFn;\n    }\n    /**\n     * @hidden\n     */\n    setTemplate(helper = {}) {\n        if (this.footerTemplate !== undefined) {\n            this.templateFn[getEnumValue(CellType, CellType.Summary)] = { fn: compile(this.footerTemplate, helper),\n                property: 'footerTemplate' };\n        }\n    }\n    /**\n     * @hidden\n     */\n    getTemplate(type) {\n        return this.templateFn[getEnumValue(CellType, type)];\n    }\n    /**\n     * @hidden\n     */\n    setPropertiesSilent(prop) {\n        this.setProperties(prop, true);\n    }\n}\n__decorate([\n    Property()\n], AggregateColumn.prototype, \"type\", void 0);\n__decorate([\n    Property()\n], AggregateColumn.prototype, \"footerTemplate\", void 0);\n__decorate([\n    Property()\n], AggregateColumn.prototype, \"field\", void 0);\n__decorate([\n    Property()\n], AggregateColumn.prototype, \"format\", void 0);\n__decorate([\n    Property()\n], AggregateColumn.prototype, \"columnName\", void 0);\n__decorate([\n    Property()\n], AggregateColumn.prototype, \"customAggregate\", void 0);\nexport class AggregateRow extends ChildProperty {\n}\n__decorate([\n    Collection([], AggregateColumn)\n], AggregateRow.prototype, \"columns\", void 0);\n__decorate([\n    Property(true)\n], AggregateRow.prototype, \"showChildSummary\", void 0);\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Configures the edit behavior of the TreeGrid.\n */\nexport class EditSettings extends ChildProperty {\n}\n__decorate([\n    Property(false)\n], EditSettings.prototype, \"allowAdding\", void 0);\n__decorate([\n    Property(false)\n], EditSettings.prototype, \"allowEditing\", void 0);\n__decorate([\n    Property(false)\n], EditSettings.prototype, \"allowDeleting\", void 0);\n__decorate([\n    Property('Cell')\n], EditSettings.prototype, \"mode\", void 0);\n__decorate([\n    Property('Top')\n], EditSettings.prototype, \"newRowPosition\", void 0);\n__decorate([\n    Property(true)\n], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n__decorate([\n    Property(true)\n], EditSettings.prototype, \"showConfirmDialog\", void 0);\n__decorate([\n    Property(false)\n], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n__decorate([\n    Property('')\n], EditSettings.prototype, \"template\", void 0);\n__decorate([\n    Property({})\n], EditSettings.prototype, \"dialog\", void 0);\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property, Collection } from '@syncfusion/ej2-base';\n/**\n * Represents the field name and direction of sort column.\n */\nexport class SortDescriptor extends ChildProperty {\n}\n__decorate([\n    Property()\n], SortDescriptor.prototype, \"field\", void 0);\n__decorate([\n    Property()\n], SortDescriptor.prototype, \"direction\", void 0);\n/**\n * Configures the sorting behavior of TreeGrid.\n */\nexport class SortSettings extends ChildProperty {\n}\n__decorate([\n    Collection([], SortDescriptor)\n], SortSettings.prototype, \"columns\", void 0);\n__decorate([\n    Property(true)\n], SortSettings.prototype, \"allowUnsort\", void 0);\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar TreeGrid_1;\nimport { Component, addClass, createElement, EventHandler, isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { removeClass, Complex, Collection, isBlazor, getElement, getValue } from '@syncfusion/ej2-base';\nimport { Event, Property, NotifyPropertyChanges, setValue, KeyboardEvents, L10n } from '@syncfusion/ej2-base';\nimport { Column } from '../models/column';\nimport { RowDropSettings, getUid } from '@syncfusion/ej2-grids';\nimport { FilterSettings } from '../models/filter-settings';\nimport { TextWrapSettings } from '../models/textwrap-settings';\nimport { gridObserver } from '@syncfusion/ej2-grids';\nimport { TreeClipboard } from '../actions/clipboard';\nimport { Selection as TreeGridSelection } from '../actions/selection';\nimport { Print } from '../actions/print';\nimport * as events from '../base/constant';\nimport { SearchSettings } from '../models/search-settings';\nimport { SelectionSettings } from '../models/selection-settings';\nimport { getActualProperties, getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, RemoteSaveAdaptor, JsonAdaptor, Deferred } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner } from '@syncfusion/ej2-popups';\nimport { isRemoteData, isOffline, extendArray, isCountRequired } from '../utils';\nimport { Grid } from '@syncfusion/ej2-grids';\nimport { Render } from '../renderer/render';\nimport { DataManipulation } from './data';\nimport { iterateArrayOrObject } from '@syncfusion/ej2-grids';\nimport { ToolbarItem, ContextMenuItems } from '../enum';\nimport { PageSettings } from '../models/page-settings';\nimport { AggregateRow } from '../models/summary';\nimport { EditSettings } from '../models/edit-settings';\nimport { SortSettings } from '../models/sort-settings';\n/**\n * Represents the TreeGrid component.\n * ```html\n * <div id='treegrid'></div>\n * <script>\n *  var treegridObj = new TreeGrid({ allowPaging: true });\n *  treegridObj.appendTo('#treegrid');\n * </script>\n * ```\n */\nlet TreeGrid = TreeGrid_1 = class TreeGrid extends Component {\n    constructor(options, element) {\n        super(options, element);\n        this.dataResults = {};\n        this.uniqueIDCollection = {};\n        this.uniqueIDFilterCollection = {};\n        this.changedRecords = 'changedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.addedRecords = 'addedRecords';\n        TreeGrid_1.Inject(TreeGridSelection);\n        setValue('mergePersistData', this.mergePersistTreeGridData, this);\n        this.grid = new Grid();\n    }\n    /**\n     * Export TreeGrid data to Excel file(.xlsx).\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    excelExport(excelExportProperties, isMultipleExport, \n    /* tslint:disable-next-line:no-any */\n    workbook, isBlob) {\n        if (isBlazor()) {\n            this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n            return null;\n        }\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n    }\n    /**\n     * Export TreeGrid data to CSV file.\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    csvExport(excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob) {\n        if (isBlazor()) {\n            this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n            return null;\n        }\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n    }\n    /**\n     * Export TreeGrid data to PDF document.\n     * @param  {pdfExportProperties} PdfExportProperties - Defines the export properties of the Grid.\n     * @param  {isMultipleExport} isMultipleExport - Define to enable multiple export.\n     * @param  {pdfDoc} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    pdfExport(pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        if (isBlazor()) {\n            this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n            return null;\n        }\n        return this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    getModuleName() {\n        return 'treegrid';\n    }\n    /**\n     * For internal use only - Initialize the event handler;\n     * @private\n     */\n    preRender() {\n        this.TreeGridLocale();\n        this.initProperties();\n        this.defaultLocale = {\n            Above: 'Above',\n            Below: 'Below',\n            AddRow: 'Add Row',\n            ExpandAll: 'Expand All',\n            CollapseAll: 'Collapse All',\n            RowIndent: 'Indent',\n            RowOutdent: 'Outdent'\n        };\n        this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n        if (this.isSelfReference && isNullOrUndefined(this.childMapping)) {\n            this.childMapping = 'Children';\n        }\n    }\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    sortByColumn(columnName, direction, isMultiSort) {\n        this.sortModule.sortColumn(columnName, direction, isMultiSort);\n    }\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    clearSorting() {\n        if (this.sortModule) {\n            this.sortModule.clearSorting();\n        }\n    }\n    /**\n     * Remove sorted column by field name.\n     * @param {string} field - Defines the column field name to remove sort.\n     * @return {void}\n     * @hidden\n     */\n    removeSortColumn(field) {\n        this.sortModule.removeSortColumn(field);\n    }\n    /**\n     * Searches TreeGrid records using the given key.\n     * You can customize the default search option by using the\n     * [`searchSettings`](./#searchsettings/).\n     * @param  {string} searchString - Defines the key.\n     * @return {void}\n     */\n    search(searchString) {\n        this.grid.search(searchString);\n    }\n    /**\n     * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n     * > * This method ignores the hidden columns.\n     * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n     * @param  {string |string[]} fieldNames - Defines the column names.\n     * @return {void}\n     *\n     *\n     *\n     */\n    autoFitColumns(fieldNames) {\n        this.resizeModule.autoFitColumns(fieldNames);\n        this.updateColumnModel();\n    }\n    /**\n     * Changes the TreeGrid column positions by field names.\n     * @param  {string} fromFName - Defines the origin field name.\n     * @param  {string} toFName - Defines the destination field name.\n     * @return {void}\n     */\n    reorderColumns(fromFName, toFName) {\n        this.grid.reorderColumns(fromFName, toFName);\n    }\n    TreeGridLocale() {\n        /* tslint:disable-next-line:no-any */\n        let locale = L10n.locale;\n        let localeObject;\n        localeObject = {};\n        setValue(this.locale, {}, localeObject);\n        let gridLocale;\n        gridLocale = {};\n        gridLocale = getObject(this.locale, locale);\n        let treeGridLocale;\n        treeGridLocale = {};\n        treeGridLocale = getObject(this.getModuleName(), gridLocale);\n        setValue('grid', treeGridLocale, getObject(this.locale, localeObject));\n        L10n.load(localeObject);\n    }\n    /**\n     * By default, prints all the pages of the TreeGrid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./#printmode).\n     * @return {void}\n     */\n    print() {\n        this.printModule.print();\n    }\n    treeGridkeyActionHandler(e) {\n        if (this.allowKeyboard) {\n            switch (e.action) {\n                case 'ctrlDownArrow':\n                    this.expandAll();\n                    break;\n                case 'ctrlUpArrow':\n                    this.collapseAll();\n                    break;\n                case 'ctrlShiftUpArrow':\n                    let collapsetarget = e.target;\n                    let collapsecolumn = collapsetarget.closest('.e-rowcell');\n                    let collapserow = collapsecolumn.closest('tr');\n                    let collapseRow = collapserow.querySelector('.e-treegridexpand');\n                    if (collapseRow !== null && collapseRow !== undefined) {\n                        this.expandCollapseRequest(collapserow.querySelector('.e-treegridexpand'));\n                    }\n                    break;\n                case 'ctrlShiftDownArrow':\n                    let expandtarget = e.target;\n                    let expandcolumn = expandtarget.closest('.e-rowcell');\n                    let expandrow = expandcolumn.closest('tr');\n                    let expandRow = expandrow.querySelector('.e-treegridcollapse');\n                    if (expandRow !== null && expandRow !== undefined) {\n                        this.expandCollapseRequest(expandrow.querySelector('.e-treegridcollapse'));\n                    }\n                    break;\n                case 'downArrow':\n                    let target = e.target.parentElement;\n                    let summaryElement = this.findnextRowElement(target);\n                    if (summaryElement !== null) {\n                        let rowIndex = summaryElement.rowIndex;\n                        this.selectRow(rowIndex);\n                        let cellIndex = e.target.cellIndex;\n                        let row = summaryElement.children[cellIndex];\n                        addClass([row], 'e-focused');\n                        addClass([row], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n                    break;\n                case 'upArrow':\n                    let targetRow = e.target.parentElement;\n                    let summaryRowElement = this.findPreviousRowElement(targetRow);\n                    if (summaryRowElement !== null) {\n                        let rIndex = summaryRowElement.rowIndex;\n                        this.selectRow(rIndex);\n                        let cIndex = e.target.cellIndex;\n                        let rows = summaryRowElement.children[cIndex];\n                        addClass([rows], 'e-focused');\n                        addClass([rows], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n            }\n        }\n    }\n    // Get Proper Row Element from the summary \n    findnextRowElement(summaryRowElement) {\n        let rowElement = summaryRowElement.nextElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findnextRowElement(rowElement);\n        }\n        return rowElement;\n    }\n    // Get Proper Row Element from the summary \n    findPreviousRowElement(summaryRowElement) {\n        let rowElement = summaryRowElement.previousElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findPreviousRowElement(rowElement);\n        }\n        return rowElement;\n    }\n    initProperties() {\n        this.defaultLocale = {};\n        this.flatData = [];\n        this.parentData = [];\n        this.columnModel = [];\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n        this.keyConfigs = {\n            ctrlDownArrow: 'ctrl+downarrow',\n            ctrlUpArrow: 'ctrl+uparrow',\n            ctrlShiftUpArrow: 'ctrl+shift+uparrow',\n            ctrlShiftDownArrow: 'ctrl+shift+downarrow',\n            downArrow: 'downArrow',\n            upArrow: 'upArrow'\n        };\n        this.isLocalData = (!(this.dataSource instanceof DataManager) || this.dataSource.dataSource.offline\n            || (!isNullOrUndefined(this.dataSource.ready)) || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n        this.isSelfReference = !isNullOrUndefined(this.parentIdMapping);\n    }\n    /**\n     * Binding events to the element while component creation.\n     * @hidden\n     */\n    wireEvents() {\n        EventHandler.add(this.grid.element, 'click', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n        this.keyboardModule = new KeyboardEvents(this.element, {\n            keyAction: this.treeGridkeyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n        if (this.allowKeyboard) {\n            this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n        }\n    }\n    /**\n     * To provide the array of modules needed for component rendering\n     * @return {ModuleDeclaration[]}\n     * @hidden\n     */\n    requiredModules() {\n        let modules = [];\n        if (this.isDestroyed) {\n            return modules;\n        }\n        modules.push({\n            member: 'filter', args: [this, this.filterSettings]\n        });\n        if (!isNullOrUndefined(this.toolbar)) {\n            modules.push({\n                member: 'toolbar',\n                args: [this]\n            });\n        }\n        if (this.contextMenuItems) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this]\n            });\n        }\n        if (this.allowPaging) {\n            modules.push({\n                member: 'pager',\n                args: [this, this.pageSettings]\n            });\n        }\n        if (this.allowReordering) {\n            modules.push({\n                member: 'reorder',\n                args: [this]\n            });\n        }\n        if (this.allowSorting) {\n            modules.push({\n                member: 'sort',\n                args: [this]\n            });\n        }\n        if (this.aggregates.length > 0) {\n            modules.push({\n                member: 'summary', args: [this]\n            });\n        }\n        modules.push({\n            member: 'resize', args: [this]\n        });\n        if (this.allowExcelExport) {\n            modules.push({\n                member: 'ExcelExport', args: [this]\n            });\n        }\n        if (this.frozenColumns || this.frozenRows || this.getFrozenColumns()) {\n            modules.push({\n                member: 'freeze', args: [this]\n            });\n        }\n        if (this.detailTemplate) {\n            modules.push({\n                member: 'detailRow', args: [this]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport', args: [this]\n            });\n        }\n        if (this.showColumnMenu) {\n            modules.push({\n                member: 'columnMenu', args: [this]\n            });\n        }\n        if (this.allowRowDragAndDrop) {\n            modules.push({\n                member: 'rowDragAndDrop',\n                args: [this]\n            });\n        }\n        if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n            modules.push({\n                member: 'edit',\n                args: [this]\n            });\n        }\n        if (this.isCommandColumn(this.columns)) {\n            modules.push({\n                member: 'commandColumn',\n                args: [this]\n            });\n        }\n        if (this.allowSelection) {\n            modules.push({\n                member: 'selection',\n                args: [this]\n            });\n        }\n        if (this.enableVirtualization) {\n            modules.push({\n                member: 'virtualScroll',\n                args: [this]\n            });\n        }\n        return modules;\n    }\n    isCommandColumn(columns) {\n        return columns.some((col) => {\n            if (col.columns) {\n                return this.isCommandColumn(col.columns);\n            }\n            return !!(col.commands || col.commandsTemplate);\n        });\n    }\n    /**\n     * Unbinding events from the element while component destroy.\n     * @hidden\n     */\n    unwireEvents() {\n        EventHandler.remove(this.grid.element, 'click', this.mouseClickHandler);\n    }\n    /**\n     * For internal use only - To Initialize the component rendering.\n     * @private\n     */\n    render() {\n        createSpinner({ target: this.element }, this.createElement);\n        this.renderModule = new Render(this);\n        this.dataModule = new DataManipulation(this);\n        this.printModule = new Print(this);\n        let clientRender = 'isClientRender';\n        if (this[clientRender]) {\n            this.isServerRendered = false;\n        }\n        this.trigger(events.load);\n        this.autoGenerateColumns();\n        this.initialRender = true;\n        if (!isNullOrUndefined(this.dataSource)) {\n            this.convertTreeData(this.dataSource);\n        }\n        if (!isBlazor() || !this.isServerRendered) {\n            this.loadGrid();\n            if (this.element.classList.contains('e-treegrid') && this.rowDropSettings.targetID) {\n                this.grid.rowDropSettings.targetID += '_gridcontrol';\n            }\n            this.addListener();\n            let gridContainer = createElement('div', { id: this.element.id + '_gridcontrol' });\n            addClass([this.element], 'e-treegrid');\n            if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                this.element.style.height = this.height;\n            }\n            if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                this.element.style.width = this.width;\n            }\n            this.element.appendChild(gridContainer);\n            this.grid.appendTo(gridContainer);\n            this.wireEvents();\n        }\n        this.renderComplete();\n        let destroyTemplate = 'destroyTemplate';\n        let destroyTemplateFn = this.grid[destroyTemplate];\n        this.grid[destroyTemplate] = (args) => {\n            destroyTemplateFn.apply(this.grid);\n            this.clearTemplate(args);\n        };\n        if (isBlazor() && this.isServerRendered) {\n            let fn = (args) => this.gridRendered(args, fn);\n            gridObserver.on('component-rendered', fn, this);\n        }\n    }\n    afterGridRender() {\n        if (!isNullOrUndefined(this.grid.clipboardModule)) {\n            this.grid.clipboardModule.destroy();\n        }\n        this.clipboardModule = this.grid.clipboardModule = new TreeClipboard(this);\n    }\n    gridRendered(args, fn) {\n        if (args.id === this.element.id + '_gridcontrol') {\n            this.grid = args.grid;\n        }\n        else {\n            return;\n        }\n        this.grid.query.queries = [];\n        let isJsComponent = 'isJsComponent';\n        if (!this.isServerRendered) {\n            this.grid[isJsComponent] = true;\n        }\n        this.setBlazorGUID();\n        this.setColIndex(this.grid.columns);\n        this.bindGridEvents();\n        let headerCheckbox = 'headerCheckbox';\n        if (!isNullOrUndefined(this.selectionModule)) {\n            this.grid.on('colgroup-refresh', this.selectionModule[headerCheckbox], this.selectionModule);\n        }\n        for (let i = 0; i < this.columns.length; i++) {\n            this.columns[i].uid = this.grid.columns[i].uid;\n        }\n        this.wireEvents();\n        this.afterGridRender();\n        let processModel = 'processModel';\n        this.grid[processModel]();\n        gridObserver.off('component-rendered', this.gridRendered);\n    }\n    setColIndex(columnModel, ind = 0) {\n        for (let i = 0, len = columnModel.length; i < len; i++) {\n            if (columnModel[i].columns) {\n                columnModel[i].index = isNullOrUndefined(columnModel[i].index) ? ind :\n                    columnModel[i].index;\n                ind++;\n                ind = this.setColIndex(columnModel[i].columns, ind);\n            }\n            else {\n                columnModel[i].index = isNullOrUndefined(columnModel[i].index) ? ind :\n                    columnModel[i].index;\n                ind++;\n            }\n        }\n        return ind;\n    }\n    setBlazorGUID() {\n        let guid = 'guid';\n        if (this.editSettings) {\n            this.grid.editSettings[guid] = this.editSettings[guid];\n            this.grid.editSettings.template = this.editSettings.template;\n        }\n        for (let i = 0; i < this.aggregates.length; i++) {\n            for (let j = 0; j < this.aggregates[i].columns.length; j++) {\n                this.grid.aggregates[i].columns[j][guid] = this.aggregates[i].columns[j][guid];\n            }\n        }\n        for (let i = 0; i < this.columns.length; i++) {\n            this.grid.columns[i][guid] = this.columns[i][guid];\n        }\n    }\n    ;\n    convertTreeData(data) {\n        if (data instanceof Array && data.length > 0 && data[0].hasOwnProperty('level')) {\n            this.flatData = isCountRequired(this) ? getValue('result', data) : data;\n            this.flatData.filter((e) => {\n                setValue('uniqueIDCollection.' + e.uniqueID, e, this);\n                if (e.level === 0) {\n                    this.parentData.push(e);\n                }\n            });\n        }\n        else {\n            if (isCountRequired(this)) {\n                let griddata = getValue('result', this.dataSource);\n                this.dataModule.convertToFlatData(griddata);\n            }\n            else {\n                this.dataModule.convertToFlatData(data);\n            }\n        }\n    }\n    // private getGridData(): Object {\n    //   if (isRemoteData(this)) {\n    //     return this.dataSource;\n    //   } else if (this.isLocalData && this.dataSource instanceof DataManager) {\n    //     this.dataSource.dataSource.json = this.flatData;\n    //     return this.dataSource;\n    //   }\n    //   return this.flatData;\n    // }\n    bindGridProperties() {\n        let edit = {};\n        this.bindedDataSource();\n        this.grid.enableRtl = this.enableRtl;\n        this.grid.allowKeyboard = this.allowKeyboard;\n        this.grid.columns = this.getGridColumns(this.columns);\n        this.grid.allowExcelExport = this.allowExcelExport;\n        this.grid.allowPdfExport = this.allowPdfExport;\n        this.grid.query = this.query;\n        this.grid.columnQueryMode = this.columnQueryMode;\n        this.grid.allowPaging = this.allowPaging;\n        this.grid.pageSettings = getActualProperties(this.pageSettings);\n        this.grid.pagerTemplate = this.pagerTemplate;\n        this.grid.showColumnMenu = this.showColumnMenu;\n        this.grid.allowSorting = this.allowSorting;\n        this.grid.allowFiltering = this.allowFiltering;\n        this.grid.enableVirtualization = this.enableVirtualization;\n        this.grid.width = this.width;\n        this.grid.height = this.height;\n        this.grid.enableAltRow = this.enableAltRow;\n        this.grid.allowReordering = this.allowReordering;\n        this.grid.allowTextWrap = this.allowTextWrap;\n        this.grid.allowResizing = this.allowResizing;\n        this.grid.enableHover = this.enableHover;\n        this.grid.enableAutoFill = this.enableAutoFill;\n        this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n        this.grid.rowDropSettings = getActualProperties(this.rowDropSettings);\n        this.grid.rowHeight = this.rowHeight;\n        this.grid.gridLines = this.gridLines;\n        this.grid.allowSelection = this.allowSelection;\n        this.grid.toolbar = getActualProperties(this.getGridToolbar());\n        this.grid.toolbarTemplate = this.toolbarTemplate;\n        this.grid.filterSettings = getActualProperties(this.filterSettings);\n        this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n        this.grid.sortSettings = getActualProperties(this.sortSettings);\n        this.grid.searchSettings = getActualProperties(this.searchSettings);\n        this.grid.aggregates = getActualProperties(this.aggregates);\n        this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n        this.grid.printMode = getActualProperties(this.printMode);\n        this.grid.locale = getActualProperties(this.locale);\n        this.grid.selectedRowIndex = this.selectedRowIndex;\n        this.grid.contextMenuItems = getActualProperties(this.getContextMenu());\n        this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n        this.grid.editSettings = this.getGridEditSettings();\n        this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n        this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n        this.grid.frozenRows = this.frozenRows;\n        this.grid.frozenColumns = this.frozenColumns;\n        let templateInstance = 'templateDotnetInstance';\n        this.grid[templateInstance] = this[templateInstance];\n        let isJsComponent = 'isJsComponent';\n        this.grid[isJsComponent] = true;\n    }\n    triggerEvents(args) {\n        this.trigger(getObject('name', args), args);\n    }\n    bindGridEvents() {\n        let treeGrid = this;\n        this.grid.rowSelecting = this.triggerEvents.bind(this);\n        this.grid.rowSelected = (args) => {\n            if (!isBlazor()) {\n                this.selectedRowIndex = this.grid.selectedRowIndex;\n            }\n            treeGrid.notify(events.rowSelected, args);\n            this.trigger(events.rowSelected, args);\n        };\n        this.grid.rowDeselected = (args) => {\n            this.selectedRowIndex = this.grid.selectedRowIndex;\n            if (isBlazor() && !this.isServerRendered) {\n                let data = 'data';\n                let rowIndex = 'rowIndex';\n                let row = 'row';\n                args[data] = args[data][args[data].length - 1];\n                args[rowIndex] = args[rowIndex][args[rowIndex].length - 1];\n                args[row] = args[row][args[row].length - 1];\n            }\n            this.trigger(events.rowDeselected, args);\n        };\n        this.grid.resizeStop = (args) => {\n            this.updateColumnModel();\n            this.trigger(events.resizeStop, args);\n        };\n        this.grid.excelQueryCellInfo = (args) => {\n            this.notify('excelCellInfo', args);\n            args = this.dataResults;\n        };\n        this.grid.pdfQueryCellInfo = (args) => {\n            this.notify('pdfCellInfo', args);\n            args = this.dataResults;\n        };\n        this.grid.checkBoxChange = (args) => {\n            this.trigger(events.checkboxChange, args);\n        };\n        this.grid.pdfExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.pdfHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.dataSourceChanged = this.triggerEvents.bind(this);\n        this.grid.recordDoubleClick = this.triggerEvents.bind(this);\n        this.grid.rowDeselecting = this.triggerEvents.bind(this);\n        this.grid.cellDeselected = this.triggerEvents.bind(this);\n        this.grid.cellDeselecting = this.triggerEvents.bind(this);\n        this.grid.columnMenuOpen = this.triggerEvents.bind(this);\n        this.grid.columnMenuClick = this.triggerEvents.bind(this);\n        this.grid.cellSelected = this.triggerEvents.bind(this);\n        this.grid.headerCellInfo = this.triggerEvents.bind(this);\n        this.grid.resizeStart = this.triggerEvents.bind(this);\n        this.grid.resizing = this.triggerEvents.bind(this);\n        this.grid.columnDrag = this.triggerEvents.bind(this);\n        this.grid.columnDragStart = this.triggerEvents.bind(this);\n        this.grid.columnDrop = this.triggerEvents.bind(this);\n        this.grid.beforePrint = this.triggerEvents.bind(this);\n        this.grid.beforeCopy = this.triggerEvents.bind(this);\n        this.grid.beforePaste = (args) => {\n            let rows = this.getRows();\n            let rowIndex = 'rowIndex';\n            while (rows[args[rowIndex]].classList.contains('e-summaryrow')) {\n                args[rowIndex]++;\n            }\n            this.trigger(events.beforePaste, args);\n        };\n        this.grid.load = () => {\n            treeGrid.grid.on('initial-end', treeGrid.afterGridRender, treeGrid);\n        };\n        this.grid.printComplete = this.triggerEvents.bind(this);\n        this.grid.actionFailure = this.triggerEvents.bind(this);\n        this.extendedGridDataBoundEvent();\n        this.extendedGridEvents();\n        this.extendedGridActionEvents();\n        this.extendedGridEditEvents();\n        this.bindGridDragEvents();\n        this.bindCallBackEvents();\n    }\n    extendedGridDataBoundEvent() {\n        let treeGrid = this;\n        this.grid.dataBound = (args) => {\n            this.updateRowTemplate(args);\n            this.updateColumnModel();\n            this.updateAltRow(this.getRows());\n            this.notify('dataBoundArg', args);\n            this.trigger(events.dataBound, args);\n            if (isRemoteData(this) && !isOffline(this) && !this.hasChildMapping) {\n                let req = getObject('dataSource.requests', this).filter((e) => {\n                    return e.httpRequest.statusText !== 'OK';\n                }).length;\n                setValue('grid.contentModule.isLoaded', !(req > 0), this);\n            }\n            this.initialRender = false;\n        };\n        this.grid.beforeDataBound = function (args) {\n            let dataSource = 'dataSource';\n            let requestType = getObject('action', args);\n            if (isRemoteData(treeGrid) && !isOffline(treeGrid) && requestType !== 'edit') {\n                treeGrid.notify('updateRemoteLevel', args);\n                args = (treeGrid.dataResults);\n            }\n            else if (treeGrid.flatData.length === 0 && isOffline(treeGrid) && treeGrid.dataSource instanceof DataManager) {\n                let dm = treeGrid.dataSource;\n                treeGrid.dataModule.convertToFlatData(dm.dataSource.json);\n                args.result = treeGrid.grid.dataSource[dataSource].json = treeGrid.flatData;\n            }\n            if (!isRemoteData(treeGrid) && !isCountRequired(this) && !isNullOrUndefined(treeGrid.dataSource)) {\n                if (this.isPrinting) {\n                    setValue('isPrinting', true, args);\n                }\n                treeGrid.notify('dataProcessor', args);\n                //args = this.dataModule.dataProcessor(args);\n            }\n            extend(args, treeGrid.dataResults);\n            // this.notify(events.beforeDataBound, args);\n            if (!this.isPrinting) {\n                let callBackPromise = new Deferred();\n                treeGrid.trigger(events.beforeDataBound, args, (beforeDataBoundArgs) => {\n                    callBackPromise.resolve(beforeDataBoundArgs);\n                });\n                return callBackPromise;\n            }\n        };\n    }\n    bindCallBackEvents() {\n        let beginEdit;\n        let name = 'name';\n        if (isBlazor() && this.isServerRendered) {\n            if (!isNullOrUndefined(this.grid.beginEdit) && this.grid.beginEdit[name] === 'bound triggerEJEvents') {\n                beginEdit = this.grid.beginEdit;\n            }\n        }\n        this.grid.toolbarClick = (args) => {\n            let callBackPromise = new Deferred();\n            this.trigger(events.toolbarClick, args, (toolbarargs) => {\n                if (!toolbarargs.cancel) {\n                    this.notify(events.toolbarClick, args);\n                }\n                callBackPromise.resolve(toolbarargs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSelecting = (args) => {\n            let callBackPromise = new Deferred();\n            this.trigger(getObject('name', args), args, (cellselectingArgs) => {\n                callBackPromise.resolve(cellselectingArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.beginEdit = (args) => {\n            if (isBlazor() && this.isServerRendered) {\n                if (beginEdit && typeof beginEdit === 'function' && beginEdit[name] === 'bound triggerEJEvents') {\n                    beginEdit.apply(this, [args]);\n                }\n            }\n            let callBackPromise = new Deferred();\n            this.trigger(events.beginEdit, args, (begineditArgs) => {\n                callBackPromise.resolve(begineditArgs);\n            });\n            return callBackPromise;\n        };\n    }\n    extendedGridEditEvents() {\n        let keypressed = 'key-pressed';\n        let editKeyPress = 'keyPressed';\n        let localobserver = 'localObserver';\n        let cellEdit;\n        let cellSave;\n        let name = 'name';\n        if (isBlazor() && this.isServerRendered) {\n            if (!isNullOrUndefined(this.grid.cellEdit) && this.grid.cellEdit[name] === 'bound triggerEJEvents') {\n                cellEdit = this.grid.cellEdit;\n            }\n            if (!isNullOrUndefined(this.grid.cellSave) && this.grid.cellSave[name] === 'bound triggerEJEvents') {\n                cellSave = this.grid.cellSave;\n            }\n        }\n        if (this.editModule && isBlazor() && this.isServerRendered) {\n            this.grid.on(keypressed, this.editModule[editKeyPress], this.editModule);\n            let events = this.grid[localobserver].boundedEvents['key-pressed'];\n            events.splice(0, 0, events.pop());\n        }\n        this.grid.dataStateChange = (args) => {\n            if (this.isExpandRefresh) {\n                this.isExpandRefresh = false;\n                this.grid.dataSource = { result: this.flatData, count: getValue('count', this.grid.dataSource) };\n            }\n            else {\n                this.trigger(events.dataStateChange, args);\n            }\n        };\n        this.grid.cellSave = (args) => {\n            if (isBlazor() && this.isServerRendered) {\n                if (cellSave && typeof cellSave === 'function' && cellSave[name] === 'bound triggerEJEvents') {\n                    cellSave.apply(this, [args]);\n                }\n            }\n            if (this.grid.isContextMenuOpen()) {\n                let contextitems;\n                contextitems = this.grid.contextMenuModule.contextMenu.element.getElementsByClassName('e-selected')[0];\n                if ((isNullOrUndefined(contextitems) || contextitems.id !== this.element.id + '_gridcontrol_cmenu_Save')) {\n                    args.cancel = true;\n                }\n            }\n            let callBackPromise = new Deferred();\n            this.trigger(events.cellSave, args, (cellsaveArgs) => {\n                if (isBlazor() && !this.isServerRendered) {\n                    cellsaveArgs.cell = getElement(cellsaveArgs.cell);\n                }\n                if (!cellsaveArgs.cancel) {\n                    this.notify(events.cellSave, cellsaveArgs);\n                }\n                callBackPromise.resolve(cellsaveArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSaved = (args) => {\n            this.trigger(events.cellSaved, args);\n            this.notify(events.cellSaved, args);\n        };\n        this.grid.cellEdit = (args) => {\n            if (isBlazor() && this.isServerRendered) {\n                if (cellEdit && typeof cellEdit === 'function' && cellEdit[name] === 'bound triggerEJEvents') {\n                    cellEdit.apply(this, [args]);\n                }\n            }\n            let prom = 'promise';\n            let promise = new Deferred();\n            args[prom] = promise;\n            this.notify(events.cellEdit, args);\n            return promise;\n        };\n        this.grid.batchAdd = (args) => {\n            this.trigger(events.batchAdd, args);\n            this.notify(events.batchAdd, args);\n        };\n        this.grid.beforeBatchSave = (args) => {\n            this.trigger(events.beforeBatchSave, args);\n            this.notify(events.beforeBatchSave, args);\n        };\n        this.grid.beforeBatchAdd = (args) => {\n            this.trigger(events.beforeBatchAdd, args);\n            this.notify(events.beforeBatchAdd, args);\n        };\n        this.grid.batchDelete = (args) => {\n            this.trigger(events.batchDelete, args);\n            this.notify(events.batchDelete, args);\n        };\n        this.grid.beforeBatchDelete = (args) => {\n            this.trigger(events.beforeBatchDelete, args);\n            this.notify(events.beforeBatchDelete, args);\n        };\n        this.grid.batchCancel = (args) => {\n            if (this.editSettings.mode !== 'Cell') {\n                this.trigger(events.batchCancel, args);\n            }\n            this.notify(events.batchCancel, args);\n        };\n    }\n    updateRowTemplate(args) {\n        if (isBlazor() && !this.isServerRendered) {\n            setTimeout(() => {\n                this.treeColumnRowTemplate(args);\n            }, 1000);\n        }\n        else {\n            this.treeColumnRowTemplate(args);\n        }\n    }\n    bindedDataSource() {\n        let dataSource = 'dataSource';\n        let isDataAvailable = 'isDataAvailable';\n        let adaptor = 'adaptor';\n        let ready = 'ready';\n        let adaptorName = 'adaptorName';\n        let dotnetInstance = 'dotnetInstance';\n        let key = 'key';\n        if (this.dataSource && isCountRequired(this)) {\n            let data = this.flatData;\n            let datacount = getValue('count', this.dataSource);\n            this.grid.dataSource = { result: data, count: datacount };\n        }\n        else {\n            this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n                this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n        }\n        if (isBlazor() && this.dataSource instanceof DataManager) {\n            this.grid.dataSource[adaptorName] = this.dataSource[adaptorName];\n            this.grid.dataSource[dotnetInstance] = this.dataSource[dotnetInstance];\n            this.grid.dataSource[key] = this.dataSource[key];\n        }\n        if (this.dataSource instanceof DataManager && (this.dataSource.dataSource.offline || this.dataSource.ready)) {\n            this.grid.dataSource[dataSource].json = extendArray(this.dataSource[dataSource].json);\n            this.grid.dataSource[ready] = this.dataSource.ready;\n            let dm = this.grid.dataSource;\n            if (!isNullOrUndefined(this.grid.dataSource[ready])) {\n                this.grid.dataSource[ready].then((e) => {\n                    dm[dataSource].offline = true;\n                    dm[isDataAvailable] = true;\n                    dm[dataSource].json = e.result;\n                    dm[adaptor] = new JsonAdaptor();\n                });\n            }\n        }\n    }\n    extendedGridActionEvents() {\n        let actionComplete;\n        let name = 'name';\n        if (isBlazor() && this.isServerRendered) {\n            if (!isNullOrUndefined(this.grid.actionComplete) && this.grid.actionComplete[name] === 'bound triggerEJEvents') {\n                actionComplete = this.grid.actionComplete;\n            }\n        }\n        this.grid.actionBegin = (args) => {\n            if (args.requestType === 'sorting' && args.target && args.target.parentElement &&\n                args.target.parentElement.classList.contains('e-hierarchycheckbox')) {\n                args.cancel = true;\n            }\n            let requestType = getObject('requestType', args);\n            if (requestType === 'reorder') {\n                this.notify('getColumnIndex', {});\n            }\n            this.notify('actionBegin', { editAction: args });\n            if (!isRemoteData(this) && !isNullOrUndefined(this.filterModule) && !isCountRequired(this)\n                && (this.grid.filterSettings.columns.length === 0 || this.grid.searchSettings.key.length === 0)) {\n                this.notify('clearFilters', { flatData: this.grid.dataSource });\n                this.grid.dataSource = this.dataResults.result;\n            }\n            let callBackPromise = new Deferred();\n            if (isBlazor() && args.requestType === 'delete' && !this.isServerRendered) {\n                let data = 'data';\n                args[data] = args[data][0];\n            }\n            this.trigger(events.actionBegin, args, (actionArgs) => {\n                if (isBlazor() && actionArgs.requestType === 'delete' && !this.isServerRendered) {\n                    let data = 'data';\n                    actionArgs[data] = [actionArgs[data]];\n                }\n                if (!actionArgs.cancel) {\n                    this.notify(events.beginEdit, actionArgs);\n                }\n                if (isBlazor() && actionArgs.requestType === 'beginEdit' && !this.isServerRendered) {\n                    actionArgs.row = getElement(actionArgs.row);\n                }\n                callBackPromise.resolve(actionArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.actionComplete = (args) => {\n            let name = 'name';\n            if (isBlazor() && this.isServerRendered) {\n                let rows = this.getRows();\n                for (let i = 0; i < rows.length; i++) {\n                    if (rows[i].classList.contains('e-treerowcollapsed') || rows[i].classList.contains('e-treerowexpanded')) {\n                        (this.enableCollapseAll && args.requestType === 'paging') ? removeClass([rows[i]], 'e-treerowexpanded') :\n                            removeClass([rows[i]], 'e-treerowcollapsed');\n                        (this.enableCollapseAll && args.requestType === 'paging') ? addClass([rows[i]], 'e-treerowcollapsed') :\n                            addClass([rows[i]], 'e-treerowexpanded');\n                    }\n                    let cells = rows[i].querySelectorAll('.e-rowcell');\n                    let expandicon = cells[this.treeColumnIndex].getElementsByClassName('e-treegridcollapse')[0] ||\n                        cells[this.treeColumnIndex].getElementsByClassName('e-treegridexpand')[0];\n                    if (expandicon) {\n                        (this.enableCollapseAll && args.requestType === 'paging') ? removeClass([expandicon], 'e-treegridexpand') :\n                            removeClass([expandicon], 'e-treegridcollapse');\n                        (this.enableCollapseAll && args.requestType === 'paging') ? addClass([expandicon], 'e-treegridcollapse') :\n                            addClass([expandicon], 'e-treegridexpand');\n                    }\n                }\n                if (actionComplete && typeof actionComplete === 'function' && actionComplete[name] === 'bound triggerEJEvents') {\n                    actionComplete.apply(this, [args]);\n                }\n            }\n            this.notify('actioncomplete', args);\n            this.updateColumnModel();\n            this.updateTreeGridModel();\n            if (args.requestType === 'reorder') {\n                this.notify('setColumnIndex', {});\n            }\n            this.notify('actionComplete', { editAction: args });\n            if (args.requestType === 'add' && (this.editSettings.newRowPosition !== 'Top' && this.editSettings.newRowPosition !== 'Bottom')) {\n                this.notify(events.beginAdd, args);\n            }\n            if (args.requestType === 'batchsave') {\n                this.notify(events.batchSave, args);\n            }\n            this.notify('updateGridActions', args);\n            if (isBlazor() && args.requestType === 'delete' && !this.isServerRendered) {\n                let data = 'data';\n                args[data] = args[data][0];\n            }\n            this.trigger(events.actionComplete, args);\n        };\n    }\n    extendedGridEvents() {\n        let treeGrid = this;\n        this.grid.recordDoubleClick = (args) => {\n            this.trigger(events.recordDoubleClick, args);\n            this.notify(events.recordDoubleClick, args);\n        };\n        this.grid.detailDataBound = (args) => {\n            this.notify('detaildataBound', args);\n            this.trigger(events.detailDataBound, args);\n        };\n        this.grid.rowDataBound = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.RowModifier(args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.cellRender(args);\n        };\n        this.grid.contextMenuClick = (args) => {\n            this.notify(events.contextMenuClick, args);\n            this.trigger(events.contextMenuClick, args);\n        };\n        this.grid.contextMenuOpen = (args) => {\n            this.notify(events.contextMenuOpen, args);\n            this.trigger(events.contextMenuOpen, args);\n        };\n        this.grid.queryCellInfo = (args) => {\n            this.renderModule.cellRender(args);\n        };\n    }\n    bindGridDragEvents() {\n        let treeGrid = this;\n        this.grid.rowDragStartHelper = (args) => {\n            treeGrid.trigger(events.rowDragStartHelper, args);\n        };\n        this.grid.rowDragStart = (args) => {\n            treeGrid.trigger(events.rowDragStart, args);\n        };\n        this.grid.rowDrag = (args) => {\n            if (this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            treeGrid.notify(events.rowdraging, args);\n            treeGrid.trigger(events.rowDrag, args);\n        };\n        this.grid.rowDrop = (args) => {\n            if (this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            treeGrid.notify(events.rowDropped, args);\n            args.cancel = true;\n        };\n    }\n    /**\n     * Renders TreeGrid component\n     * @private\n     */\n    loadGrid() {\n        this.bindGridProperties();\n        this.bindGridEvents();\n        setValue('registeredTemplate', this.registeredTemplate, this.grid);\n        let ref = 'viewContainerRef';\n        setValue('viewContainerRef', this[ref], this.grid);\n    }\n    /**\n     * AutoGenerate TreeGrid columns from first record\n     * @hidden\n     */\n    autoGenerateColumns() {\n        if (!this.columns.length && (!this.dataModule.isRemote() && Object.keys(this.dataSource).length)) {\n            let record;\n            // if (this.dataSource instanceof DataManager) {\n            //   record = (<DataManager>this.dataSource).dataSource.json[0];\n            // } else {\n            record = this.dataSource[0];\n            // }\n            let keys = Object.keys(record);\n            for (let i = 0; i < keys.length; i++) {\n                if ([this.childMapping, this.parentIdMapping].indexOf(keys[i]) === -1) {\n                    this.columns.push(keys[i]);\n                }\n            }\n        }\n    }\n    getGridEditSettings() {\n        let edit = {};\n        let guid = 'guid';\n        edit.allowAdding = this.editSettings.allowAdding;\n        edit.allowEditing = this.editSettings.allowEditing;\n        edit.allowDeleting = this.editSettings.allowDeleting;\n        edit.newRowPosition = this.editSettings.newRowPosition === 'Bottom' ? 'Bottom' : 'Top';\n        edit.allowEditOnDblClick = this.editSettings.allowEditOnDblClick;\n        edit.showConfirmDialog = this.editSettings.showConfirmDialog;\n        edit.template = this.editSettings.template;\n        edit.showDeleteConfirmDialog = this.editSettings.showDeleteConfirmDialog;\n        edit[guid] = this.editSettings[guid];\n        edit.dialog = this.editSettings.dialog;\n        switch (this.editSettings.mode) {\n            case 'Dialog':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Batch':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Row':\n                edit.mode = 'Normal';\n                break;\n            case 'Cell':\n                edit.mode = 'Normal';\n                edit.showConfirmDialog = false;\n                break;\n        }\n        return edit;\n    }\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    getContextMenu() {\n        if (this.contextMenuItems) {\n            let items = [];\n            for (let i = 0; i < this.contextMenuItems.length; i++) {\n                let item;\n                switch (this.contextMenuItems[i]) {\n                    case 'AddRow':\n                    case ContextMenuItems.AddRow:\n                        items.push({ text: this.l10n.getConstant('AddRow'),\n                            target: '.e-content', id: this.element.id + '_gridcontrol_cmenu_AddRow',\n                            items: [{ text: this.l10n.getConstant('Above'), id: 'Above' }, { text: this.l10n.getConstant('Below'), id: 'Below' }] });\n                        break;\n                    default:\n                        items.push(this.contextMenuItems[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    }\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    getGridToolbar() {\n        if (this.toolbar) {\n            let items = [];\n            for (let i = 0; i < this.toolbar.length; i++) {\n                let item;\n                switch (this.toolbar[i]) {\n                    case 'Search':\n                    case ToolbarItem.Search:\n                        items.push('Search');\n                        break;\n                    case 'Print':\n                    case ToolbarItem.Print:\n                        items.push('Print');\n                        break;\n                    case 'ExpandAll':\n                    case ToolbarItem.ExpandAll:\n                        let tooltipText = this.l10n.getConstant('ExpandAll');\n                        items.push({ text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-expand', id: this.element.id + '_gridcontrol_expandall' });\n                        break;\n                    case 'CollapseAll':\n                    case ToolbarItem.CollapseAll:\n                        let tooltip = this.l10n.getConstant('CollapseAll');\n                        items.push({ text: tooltip,\n                            tooltipText: tooltip, prefixIcon: 'e-collapse', id: this.element.id + '_gridcontrol_collapseall'\n                        });\n                        break;\n                    case 'Indent':\n                    case ToolbarItem.RowIndent:\n                        let tooltipindent = this.l10n.getConstant('RowIndent');\n                        items.push({\n                            text: tooltipindent, tooltipText: tooltipindent,\n                            prefixIcon: 'e-indent', id: this.element.id + '_gridcontrol_indent'\n                        });\n                        break;\n                    case 'Outdent':\n                    case ToolbarItem.RowOutdent:\n                        let tooltipoutdent = this.l10n.getConstant('RowOutdent');\n                        items.push({\n                            text: tooltipoutdent, tooltipText: tooltipoutdent,\n                            prefixIcon: 'e-outdent', id: this.element.id + '_gridcontrol_outdent'\n                        });\n                        break;\n                    default:\n                        items.push(this.toolbar[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    }\n    /**\n     * Convert TreeGrid ColumnModel to Grid Column\n     * @hidden\n     */\n    getGridColumns(columns) {\n        let column = columns;\n        this.columnModel = [];\n        let treeGridColumn;\n        let gridColumn;\n        let gridColumnCollection = [];\n        for (let i = 0; i < column.length; i++) {\n            let treeColumn = this.grid.getColumnByUid(column[i].uid);\n            gridColumn = treeColumn ? treeColumn : {};\n            treeGridColumn = {};\n            if (typeof this.columns[i] === 'string') {\n                gridColumn.field = treeGridColumn.field = this.columns[i];\n            }\n            else {\n                for (let prop of Object.keys(column[i])) {\n                    gridColumn[prop] = treeGridColumn[prop] = column[i][prop];\n                }\n            }\n            if (column[i].columns) {\n                this.getGridColumns(columns[i].columns);\n            }\n            else {\n                this.columnModel.push(new Column(treeGridColumn));\n            }\n            gridColumnCollection.push(gridColumn);\n        }\n        return gridColumnCollection;\n    }\n    /**\n     * Called internally if any of the property value changed.\n     * @hidden\n     */\n    /* tslint:disable-next-line:max-line-length */\n    // tslint:disable-next-line:max-func-body-length\n    onPropertyChanged(newProp, oldProp) {\n        let properties = Object.keys(newProp);\n        let requireRefresh = false;\n        let preventUpdate = 'preventUpdate';\n        for (let prop of properties) {\n            switch (prop) {\n                case 'columns':\n                    if (!(isBlazor() && this.isServerRendered && this[preventUpdate])) {\n                        this.grid.columns = this.getGridColumns(this.columns);\n                    }\n                    break;\n                case 'treeColumnIndex':\n                    this.grid.refreshColumns();\n                    break;\n                case 'allowPaging':\n                    this.grid.allowPaging = this.allowPaging;\n                    break;\n                case 'pageSettings':\n                    this.grid.pageSettings = getActualProperties(this.pageSettings);\n                    requireRefresh = true;\n                    break;\n                case 'enableVirtualization':\n                    this.grid.enableVirtualization = this.enableVirtualization;\n                    break;\n                case 'toolbar':\n                    this.grid.toolbar = this.getGridToolbar();\n                    break;\n                case 'allowSelection':\n                    this.grid.allowSelection = this.allowSelection;\n                    break;\n                case 'selectionSettings':\n                    this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n                    break;\n                case 'allowSorting':\n                    this.grid.allowSorting = this.allowSorting;\n                    break;\n                case 'allowMultiSorting':\n                    this.grid.allowMultiSorting = this.allowMultiSorting;\n                    break;\n                case 'sortSettings':\n                    this.grid.sortSettings = getActualProperties(this.sortSettings);\n                    break;\n                case 'searchSettings':\n                    this.grid.searchSettings = getActualProperties(this.searchSettings);\n                    break;\n                case 'allowFiltering':\n                    this.grid.allowFiltering = this.allowFiltering;\n                    break;\n                case 'filterSettings':\n                    this.grid.filterSettings = getActualProperties(this.filterSettings);\n                    break;\n                case 'showColumnMenu':\n                    this.grid.showColumnMenu = this.showColumnMenu;\n                    break;\n                case 'allowRowDragAndDrop':\n                    this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n                    break;\n                case 'aggregates':\n                    this.grid.aggregates = getActualProperties(this.aggregates);\n                    break;\n                case 'dataSource':\n                    this.isLocalData = (!(this.dataSource instanceof DataManager) || (!isNullOrUndefined(this.dataSource.ready))\n                        || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n                    this.convertTreeData(this.dataSource);\n                    if (this.isLocalData) {\n                        if (isCountRequired(this)) {\n                            let count = getValue('count', this.dataSource);\n                            this.grid.dataSource = { result: this.flatData, count: count };\n                        }\n                        else {\n                            this.grid.dataSource = this.flatData;\n                        }\n                    }\n                    else {\n                        this.bindedDataSource();\n                        if (this.enableVirtualization) {\n                            this.grid.contentModule.removeEventListener();\n                            this.grid.contentModule.eventListener('on');\n                            this.grid.contentModule.renderTable();\n                        }\n                    }\n                    break;\n                case 'query':\n                    this.grid.query = this.query;\n                    break;\n                case 'enableCollapseAll':\n                    if (newProp[prop]) {\n                        this.collapseAll();\n                    }\n                    else {\n                        this.expandAll();\n                    }\n                    break;\n                case 'expandStateMapping':\n                    this.refresh();\n                    break;\n                case 'gridLines':\n                    this.grid.gridLines = this.gridLines;\n                    break;\n                case 'rowTemplate':\n                    this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n                    break;\n                case 'frozenRows':\n                    this.grid.frozenRows = this.frozenRows;\n                    break;\n                case 'frozenColumns':\n                    this.grid.frozenColumns = this.frozenColumns;\n                    break;\n                case 'rowHeight':\n                    this.grid.rowHeight = this.rowHeight;\n                    break;\n                case 'height':\n                    if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                        this.element.style.height = this.height;\n                    }\n                    this.grid.height = this.height;\n                    break;\n                case 'width':\n                    if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                        this.element.style.width = this.width;\n                    }\n                    this.grid.width = this.width;\n                    break;\n                case 'locale':\n                    this.grid.locale = this.locale;\n                    break;\n                case 'selectedRowIndex':\n                    this.grid.selectedRowIndex = this.selectedRowIndex;\n                    break;\n                case 'enableAltRow':\n                    this.grid.enableAltRow = this.enableAltRow;\n                    break;\n                case 'enableHover':\n                    this.grid.enableHover = this.enableHover;\n                    break;\n                case 'enableAutoFill':\n                    this.grid.enableAutoFill = this.enableAutoFill;\n                    break;\n                case 'allowExcelExport':\n                    this.grid.allowExcelExport = this.allowExcelExport;\n                    break;\n                case 'allowPdfExport':\n                    this.grid.allowPdfExport = this.allowPdfExport;\n                    break;\n                case 'enableRtl':\n                    this.grid.enableRtl = this.enableRtl;\n                    break;\n                case 'allowReordering':\n                    this.grid.allowReordering = this.allowReordering;\n                    break;\n                case 'allowResizing':\n                    this.grid.allowResizing = this.allowResizing;\n                    break;\n                case 'textWrapSettings':\n                    this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n                    break;\n                case 'allowTextWrap':\n                    this.grid.allowTextWrap = getActualProperties(this.allowTextWrap);\n                    this.refresh();\n                    break;\n                case 'contextMenuItems':\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'detailTemplate':\n                    this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n                    break;\n                case 'columnMenuItems':\n                    this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n                    break;\n                case 'editSettings':\n                    if (this.grid.isEdit && this.grid.editSettings.mode === 'Normal' && newProp[prop].mode &&\n                        (newProp[prop].mode === 'Cell' || newProp[prop].mode === 'Row')) {\n                        this.grid.closeEdit();\n                    }\n                    this.grid.editSettings = this.getGridEditSettings();\n                    break;\n            }\n            if (requireRefresh) {\n                this.refresh();\n            }\n        }\n    }\n    /**\n     * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n     * @method destroy\n     * @return {void}\n     */\n    destroy() {\n        this.removeListener();\n        this.unwireEvents();\n        super.destroy();\n        this.grid.destroy();\n        this.dataModule.destroy();\n        let modules = ['dataModule', 'sortModule', 'renderModule', 'filterModule', 'printModule', 'clipboardModule',\n            'excelExportModule', 'pdfExportModule', 'toolbarModule', 'summaryModule', 'reorderModule', 'resizeModule',\n            'pagerModule', 'keyboardModule', 'columnMenuModule', 'contextMenuModule', 'editModule', 'virtualScrollModule',\n            'selectionModule', 'detailRow', 'rowDragAndDropModule', 'freezeModule'];\n        for (let i = 0; i < modules.length; i++) {\n            if (this[modules[i]]) {\n                this[modules[i]] = null;\n            }\n        }\n        this.element.innerHTML = '';\n        this.grid = null;\n    }\n    /**\n     * Update the TreeGrid model\n     * @method dataBind\n     * @return {void}\n     * @private\n     */\n    dataBind() {\n        super.dataBind();\n        if (!(isBlazor() && this.isServerRendered) || getValue('isRendered', this.grid) && !this.initialRender) {\n            this.grid.dataBind();\n        }\n    }\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     * @hidden\n     */\n    getPersistData() {\n        let keyEntity = ['pageSettings', 'sortSettings',\n            'filterSettings', 'columns', 'searchSettings', 'selectedRowIndex'];\n        let ignoreOnPersist = {\n            pageSettings: ['template', 'pageSizes', 'pageSizeMode', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n            filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent', 'hierarchyMode'],\n            searchSettings: ['fields', 'operator', 'ignoreCase'],\n            sortSettings: [], columns: [], selectedRowIndex: []\n        };\n        let ignoreOnColumn = ['filter', 'edit', 'filterBarTemplate', 'headerTemplate', 'template',\n            'commandTemplate', 'commands', 'dataSource'];\n        for (let i = 0; i < keyEntity.length; i++) {\n            let currentObject = this[keyEntity[i]];\n            for (let val of ignoreOnPersist[keyEntity[i]]) {\n                delete currentObject[val];\n            }\n        }\n        this.ignoreInArrays(ignoreOnColumn, this.columns);\n        return this.addOnPersist(keyEntity);\n    }\n    ignoreInArrays(ignoreOnColumn, columns) {\n        for (let i = 0; i < columns.length; i++) {\n            if (columns[i].columns) {\n                this.ignoreInColumn(ignoreOnColumn, columns[i]);\n                this.ignoreInArrays(ignoreOnColumn, columns[i].columns);\n            }\n            else {\n                this.ignoreInColumn(ignoreOnColumn, columns[i]);\n            }\n        }\n    }\n    ignoreInColumn(ignoreOnColumn, column) {\n        for (let i = 0; i < ignoreOnColumn.length; i++) {\n            delete column[ignoreOnColumn[i]];\n            column.filter = {};\n        }\n    }\n    mouseClickHandler(e) {\n        if (!isNullOrUndefined(e.touches)) {\n            return;\n        }\n        let target = e.target;\n        if ((target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && (!this.isEditCollapse && !this.grid.isEdit)) {\n            this.expandCollapseRequest(target);\n        }\n        this.isEditCollapse = false;\n        this.notify('checkboxSelection', { target: target });\n    }\n    /**\n     * Returns TreeGrid rows\n     * @return {HTMLTableRowElement[]}\n     */\n    getRows() {\n        return this.grid.getRows();\n    }\n    /**\n     * Gets the pager of the TreeGrid.\n     * @return {Element}\n     */\n    getPager() {\n        return this.grid.getPager(); //get element from pager\n    }\n    /**\n     * Adds a new record to the TreeGrid. Without passing parameters, it adds empty rows.\n     * > `editSettings.allowEditing` should be true.\n     * @param {Object} data - Defines the new add record data.\n     * @param {number} index - Defines the row index to be added.\n     * @param {RowPosition} position - Defines the new row position to be added.\n     */\n    addRecord(data, index, position) {\n        if (this.editModule) {\n            this.editModule.addRecord(data, index, position);\n        }\n    }\n    /**\n     * Cancels edited state.\n     */\n    closeEdit() {\n        if (this.grid.editModule) {\n            this.grid.editModule.closeEdit();\n        }\n    }\n    /**\n     * Saves the cell that is currently edited. It does not save the value to the DataSource.\n     */\n    saveCell() {\n        if (this.grid.editModule) {\n            this.grid.editModule.saveCell();\n        }\n    }\n    /**\n     * To update the specified cell by given value without changing into edited state.\n     * @param {number} rowIndex Defines the row index.\n     * @param {string} field Defines the column field.\n     * @param {string | number | boolean | Date} value - Defines the value to be changed.\n     */\n    updateCell(rowIndex, field, value) {\n        if (this.grid.editModule) {\n            this.grid.editModule.updateCell(rowIndex, field, value);\n        }\n    }\n    /**\n     * To update the specified row by given values without changing into edited state.\n     * @param {number} index Defines the row index.\n     * @param {Object} data Defines the data object to be updated.\n     */\n    updateRow(index, data) {\n        if (this.grid.editModule) {\n            this.grid.editModule.updateRow(index, data);\n        }\n    }\n    /**\n     * Delete a record with Given options. If fieldName and data is not given then TreeGrid will delete the selected record.\n     * > `editSettings.allowDeleting` should be true.\n     * @param {string} fieldName - Defines the primary key field, 'Name of the column'.\n     * @param {Object} data - Defines the JSON data of the record to be deleted.\n     */\n    deleteRecord(fieldName, data) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRecord(fieldName, data);\n        }\n    }\n    /**\n     * To edit any particular row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row to be edited.\n     */\n    startEdit(row) {\n        if (this.grid.editModule) {\n            this.grid.editModule.startEdit(row);\n        }\n    }\n    /**\n     * To edit any particular cell using row index and cell index.\n     * @param {number} rowIndex - Defines row index to edit a particular cell.\n     * @param {string} field - Defines the field name of the column to perform cell edit.\n     */\n    editCell(rowIndex, field) {\n        if (this.editModule) {\n            this.editModule.editCell(rowIndex, field);\n        }\n    }\n    /**\n     * Enables or disables ToolBar items.\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     */\n    enableToolbarItems(items, isEnable) {\n        if (this.grid.toolbarModule) {\n            this.grid.toolbarModule.enableItems(items, isEnable);\n        }\n    }\n    /**\n     * If TreeGrid is in editable state, you can save a record by invoking endEdit.\n     */\n    endEdit() {\n        if (this.grid.editModule) {\n            this.grid.editModule.endEdit();\n        }\n    }\n    /**\n     * Delete any visible row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row element.\n     */\n    deleteRow(tr) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRow(tr);\n        }\n    }\n    /**\n     * Get the names of the primary key columns of the TreeGrid.\n     * @return {string[]}\n     */\n    getPrimaryKeyFieldNames() {\n        return this.grid.getPrimaryKeyFieldNames();\n    }\n    /**\n     * Updates particular cell value based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {string } field - Specifies the field name which you want to update.\n     * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n     */\n    setCellValue(key, field, value) {\n        this.grid.setCellValue(key, field, value);\n    }\n    /**\n     * Updates and refresh the particular row values based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *  @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     *  @param {Object} rowData - To update new data for the particular row.\n     */\n    setRowData(key, rowData) {\n        let currentRecords = this.getCurrentViewRecords();\n        let primaryKey = this.grid.getPrimaryKeyFieldNames()[0];\n        let level = 0;\n        let record = {};\n        currentRecords.some((value, i, e) => {\n            if (value[primaryKey] === key) {\n                record = value;\n                return true;\n            }\n            else {\n                return false;\n            }\n        });\n        level = record.level;\n        let data = rowData;\n        data.level = level;\n        data.index = record.index;\n        data.childRecords = record.childRecords;\n        data.taskData = record.taskData;\n        data.uniqueID = record.uniqueID;\n        data.parentItem = record.parentItem;\n        data.checkboxState = record.checkboxState;\n        data.hasChildRecords = record.hasChildRecords;\n        data.parentUniqueID = record.parentUniqueID;\n        data.expanded = record.expanded;\n        this.grid.setRowData(key, data);\n    }\n    /**\n     * Navigates to the specified target page.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    goToPage(pageNo) {\n        if (this.grid.pagerModule) {\n            this.grid.pagerModule.goToPage(pageNo);\n        }\n    }\n    /**\n     * Defines the text of external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    updateExternalMessage(message) {\n        if (this.pagerModule) {\n            this.grid.pagerModule.updateExternalMessage(message);\n        }\n    }\n    /**\n     * Gets a cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    getCellFromIndex(rowIndex, columnIndex) {\n        return this.grid.getCellFromIndex(rowIndex, columnIndex);\n    }\n    /**\n     * Gets a Column by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Column}\n     */\n    getColumnByField(field) {\n        if (isBlazor() && this.isServerRendered) {\n            return iterateArrayOrObject(this.grid.columns, (item, index) => {\n                if (item.field === field) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n        else {\n            return iterateArrayOrObject(this.columnModel, (item, index) => {\n                if (item.field === field) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n    }\n    /**\n     * Gets a column by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {Column}\n     */\n    getColumnByUid(uid) {\n        if (isBlazor() && this.isServerRendered) {\n            return iterateArrayOrObject(this.grid.columns, (item, index) => {\n                if (item.uid === uid) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n        else {\n            return iterateArrayOrObject(this.columnModel, (item, index) => {\n                if (item.uid === uid) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n    }\n    /**\n     * Gets the collection of column fields.\n     * @return {string[]}\n     */\n    getColumnFieldNames() {\n        return this.grid.getColumnFieldNames();\n    }\n    /**\n     * Gets the footer div of the TreeGrid.\n     * @return {Element}\n     */\n    getFooterContent() {\n        return this.grid.getFooterContent();\n    }\n    /**\n     * Gets the footer table element of the TreeGrid.\n     * @return {Element}\n     */\n    getFooterContentTable() {\n        return this.grid.getFooterContentTable();\n    }\n    /**\n     * Shows a column by its column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} showBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    showColumns(keys, showBy) {\n        this.grid.showColumns(keys, showBy);\n        this.updateColumnModel();\n    }\n    /**\n     * Hides a column by column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} hideBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    hideColumns(keys, hideBy) {\n        this.grid.hideColumns(keys, hideBy);\n        this.updateColumnModel();\n    }\n    /**\n     * Gets a column header by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Element}\n     */\n    getColumnHeaderByField(field) {\n        return this.grid.getColumnHeaderByField(field);\n    }\n    /**\n     * Gets a column header by column index.\n     * @param  {number} index - Specifies the column index.\n     * @return {Element}\n     */\n    getColumnHeaderByIndex(index) {\n        return this.grid.getColumnHeaderByIndex(index);\n    }\n    /**\n     * Gets a column header by UID.\n     * @param  {string} field - Specifies the column uid.\n     * @return {Element}\n     */\n    getColumnHeaderByUid(uid) {\n        return this.grid.getColumnHeaderByUid(uid);\n    }\n    /**\n     * Gets a column index by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {number}\n     */\n    getColumnIndexByField(field) {\n        return this.grid.getColumnIndexByField(field);\n    }\n    /**\n     * Gets a column index by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {number}\n     */\n    getColumnIndexByUid(uid) {\n        return this.grid.getColumnIndexByUid(uid);\n    }\n    /**\n     * Gets the columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    getColumns(isRefresh) {\n        if (isBlazor() && this.isServerRendered) {\n            return this.grid.columns;\n        }\n        else {\n            this.updateColumnModel(this.grid.getColumns(isRefresh));\n            return this.columnModel;\n        }\n    }\n    updateColumnModel(column) {\n        this.columnModel = [];\n        let stackedHeader = false;\n        let gridColumns = isNullOrUndefined(column) ? this.grid.getColumns() : column;\n        let gridColumn;\n        for (let i = 0; i < gridColumns.length; i++) {\n            gridColumn = {};\n            for (let prop of Object.keys(gridColumns[i])) {\n                if (!isBlazor() || prop !== 'edit') {\n                    gridColumn[prop] = gridColumns[i][prop];\n                }\n            }\n            this.columnModel.push(new Column(gridColumn));\n        }\n        if (!isBlazor() || !this.isServerRendered) {\n            let merge = 'deepMerge';\n            this[merge] = ['columns']; // Workaround for blazor updateModel\n            if (this.grid.columns.length !== this.columnModel.length) {\n                stackedHeader = true;\n            }\n            if (!stackedHeader) {\n                this.setProperties({ columns: this.columnModel }, true);\n            }\n            this[merge] = undefined; // Workaround for blazor updateModel\n        }\n        return this.columnModel;\n    }\n    /**\n     * Gets the content div of the TreeGrid.\n     * @return {Element}\n     */\n    getContent() {\n        return this.grid.getContent();\n    }\n    mergePersistTreeGridData() {\n        let persist1 = 'mergePersistGridData';\n        this.grid[persist1].apply(this);\n    }\n    mergeColumns(storedColumn, columns) {\n        let persist2 = 'mergeColumns';\n        this.grid[persist2].apply(this, [storedColumn, columns]);\n    }\n    updateTreeGridModel() {\n        this.setProperties({ filterSettings: getObject('properties', this.grid.filterSettings) }, true);\n        this.setProperties({ pageSettings: getObject('properties', this.grid.pageSettings) }, true);\n        this.setProperties({ searchSettings: getObject('properties', this.grid.searchSettings) }, true);\n        this.setProperties({ sortSettings: getObject('properties', this.grid.sortSettings) }, true);\n    }\n    /**\n     * Gets the content table of the TreeGrid.\n     * @return {Element}\n     */\n    getContentTable() {\n        return this.grid.getContentTable();\n    }\n    /**\n     * Gets all the TreeGrid's data rows.\n     * @return {Element[]}\n     */\n    getDataRows() {\n        let dRows = [];\n        let rows = this.grid.getDataRows();\n        for (let i = 0, len = rows.length; i < len; i++) {\n            if (!rows[i].classList.contains('e-summaryrow')) {\n                dRows.push(rows[i]);\n            }\n        }\n        return dRows;\n    }\n    /**\n     * Get current visible data of TreeGrid.\n     * @return {Object[]}\n     * @isGenericType true\n     */\n    getCurrentViewRecords() {\n        return this.grid.currentViewData;\n    }\n    /**\n     * Gets the added, edited,and deleted data before bulk save to the DataSource in batch mode.\n     * @return {Object}\n     */\n    getBatchChanges() {\n        return this.grid.editModule.getBatchChanges();\n    }\n    /**\n     * Gets the header div of the TreeGrid.\n     * @return {Element}\n     */\n    getHeaderContent() {\n        return this.grid.getHeaderContent();\n    }\n    /**\n     * Gets the header table element of the TreeGrid.\n     * @return {Element}\n     */\n    getHeaderTable() {\n        return this.grid.getHeaderTable();\n    }\n    /**\n     * Gets a row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    getRowByIndex(index) {\n        return this.grid.getRowByIndex(index);\n    }\n    /**\n     * Get a row information based on cell\n     * @param {Element}\n     * @return RowInfo\n     */\n    getRowInfo(target) {\n        return this.grid.getRowInfo(target);\n    }\n    /**\n     * Gets UID by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {string}\n     */\n    getUidByColumnField(field) {\n        return this.grid.getUidByColumnField(field);\n    }\n    /**\n     * Gets the visible columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    getVisibleColumns() {\n        let cols = [];\n        for (let col of this.columnModel) {\n            if (col.visible) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    }\n    /**\n     * By default, TreeGrid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     */\n    showSpinner() {\n        showSpinner(this.element);\n    }\n    /**\n     * Manually shown spinner needs to hide by `hideSpinnner`.\n     */\n    hideSpinner() {\n        hideSpinner(this.element);\n    }\n    /**\n     * Refreshes the TreeGrid header and content.\n     */\n    refresh() {\n        this.grid.refresh();\n    }\n    /**\n     * Get the records of checked rows.\n     * @return {Object[]}\n     * @isGenericType true\n     */\n    getCheckedRecords() {\n        return this.selectionModule.getCheckedrecords();\n    }\n    /**\n     * Get the indexes of checked rows.\n     * @return {number[]}\n     */\n    getCheckedRowIndexes() {\n        return this.selectionModule.getCheckedRowIndexes();\n    }\n    /**\n     * Checked the checkboxes using rowIndexes.\n     */\n    selectCheckboxes(indexes) {\n        this.selectionModule.selectCheckboxes(indexes);\n    }\n    /**\n     * Refreshes the TreeGrid column changes.\n     */\n    refreshColumns(refreshUI) {\n        if (isNullOrUndefined(refreshUI) || refreshUI) {\n            this.grid.columns = this.getGridColumns(this.columns);\n            this.grid.refreshColumns();\n        }\n        else {\n            this.grid.setProperties({ columns: this.getGridColumns(this.columns) }, true);\n        }\n    }\n    /**\n     * Refreshes the TreeGrid header.\n     */\n    refreshHeader() {\n        this.grid.refreshHeader();\n    }\n    /**\n     * Expands or collapse child records\n     * @return {string}\n     * @hidden\n     */\n    expandCollapseRequest(target) {\n        if (this.editSettings.mode === 'Batch') {\n            let obj = 'dialogObj';\n            let showDialog = 'showDialog';\n            if (this.getBatchChanges()[this.changedRecords].length ||\n                this.getBatchChanges()[this.deletedRecords].length || this.getBatchChanges()[this.addedRecords].length) {\n                let dialogObj = this.grid.editModule[obj];\n                this.grid.editModule[showDialog]('CancelEdit', dialogObj);\n                this.targetElement = target;\n                return;\n            }\n        }\n        if (this.rowTemplate) {\n            let rowInfo = target.closest('.e-treerowcell').parentElement;\n            let record = this.getCurrentViewRecords()[rowInfo.rowIndex];\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo, record);\n            }\n            else {\n                this.expandRow(rowInfo, record);\n            }\n        }\n        else {\n            let rowInfo = this.grid.getRowInfo(target);\n            let record = rowInfo.rowData;\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo.row, record);\n            }\n            else {\n                this.expandRow(rowInfo.row, record);\n            }\n        }\n    }\n    /**\n     * Expands child rows\n     * @return {void}\n     */\n    expandRow(row, record) {\n        record = this.getCollapseExpandRecords(row, record);\n        let args = { data: record, row: row, cancel: false };\n        this.trigger(events.expanding, args, (expandingArgs) => {\n            if (!expandingArgs.cancel) {\n                this.expandCollapse('expand', row, record);\n                if (!(isRemoteData(this) && !isOffline(this)) && !isCountRequired(this)) {\n                    let collapseArgs = { data: record, row: row };\n                    this.trigger(events.expanded, collapseArgs);\n                }\n            }\n        });\n    }\n    getCollapseExpandRecords(row, record) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All' && this.isExpandAll && isNullOrUndefined(record) &&\n            !isRemoteData(this)) {\n            record = this.flatData.filter((e) => {\n                return e.hasChildRecords;\n            });\n        }\n        else if (isNullOrUndefined(record)) {\n            record = this.grid.getCurrentViewRecords()[row.rowIndex];\n        }\n        return record;\n    }\n    /**\n     * Collapses child rows\n     * @return {void}\n     */\n    collapseRow(row, record) {\n        record = this.getCollapseExpandRecords(row, record);\n        let args = { data: record, row: row, cancel: false };\n        this.trigger(events.collapsing, args, (collapsingArgs) => {\n            if (!collapsingArgs.cancel) {\n                this.expandCollapse('collapse', row, record);\n                let collapseArgs = { data: record, row: row };\n                if (!isRemoteData(this)) {\n                    this.trigger(events.collapsed, collapseArgs);\n                }\n            }\n        });\n    }\n    /**\n     * Expands the records at specific hierarchical level\n     * @return {void}\n     */\n    expandAtLevel(level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            let rec = this.grid.dataSource.filter((e) => {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = true;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.expandRow(null, rec);\n        }\n        else {\n            let rec = this.getRecordDetails(level);\n            let row = getObject('rows', rec);\n            let record = getObject('records', rec);\n            for (let i = 0; i < record.length; i++) {\n                this.expandRow(row[i], record[i]);\n            }\n        }\n    }\n    getRecordDetails(level) {\n        let rows = this.getRows().filter((e) => {\n            return (e.className.indexOf('level' + level) !== -1\n                && (e.querySelector('.e-treegridcollapse') || e.querySelector('.e-treegridexpand')));\n        });\n        let records = this.getCurrentViewRecords().filter((e) => { return e.level === level && e.hasChildRecords; });\n        let obj = { records: records, rows: rows };\n        return obj;\n    }\n    /**\n     * Collapses the records at specific hierarchical level\n     * @return {void}\n     */\n    collapseAtLevel(level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            let record = this.grid.dataSource.filter((e) => {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = false;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.collapseRow(null, record);\n        }\n        else {\n            let rec = this.getRecordDetails(level);\n            let rows = getObject('rows', rec);\n            let records = getObject('records', rec);\n            for (let i = 0; i < records.length; i++) {\n                this.collapseRow(rows[i], records[i]);\n            }\n        }\n    }\n    /**\n     * Expands All the rows\n     * @return {void}\n     */\n    expandAll() {\n        this.expandCollapseAll('expand');\n    }\n    /**\n     * Collapses All the rows\n     * @return {void}\n     */\n    collapseAll() {\n        this.expandCollapseAll('collapse');\n    }\n    expandCollapseAll(action) {\n        let rows = this.getRows().filter((e) => {\n            return e.querySelector('.e-treegrid' + (action === 'expand' ? 'collapse' : 'expand'));\n        });\n        this.isExpandAll = true;\n        this.isCollapseAll = true;\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            this.flatData.filter((e) => {\n                if (e.hasChildRecords) {\n                    e.expanded = action === 'collapse' ? false : true;\n                }\n            });\n            if (rows.length) {\n                action === 'collapse' ? this.collapseRow(rows[0]) : this.expandRow(rows[0]);\n            }\n        }\n        else {\n            for (let i = 0; i < rows.length; i++) {\n                action === 'collapse' ? this.collapseRow(rows[i]) : this.expandRow(rows[i]);\n            }\n        }\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n    }\n    expandCollapse(action, row, record, isChild) {\n        let expandingArgs = { row: row, data: record, childData: [], requestType: action };\n        if (!isRemoteData(this) && action === 'expand' && this.isSelfReference) {\n            this.updateChildOnDemand(expandingArgs);\n        }\n        let gridRows = this.getRows();\n        if (this.rowTemplate) {\n            let rows = this.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        let rowIndex;\n        if (isNullOrUndefined(row)) {\n            rowIndex = this.getCurrentViewRecords().indexOf(record);\n            row = gridRows[rowIndex];\n        }\n        else {\n            rowIndex = +row.getAttribute('aria-rowindex');\n        }\n        if (!isNullOrUndefined(row)) {\n            row.setAttribute('aria-expanded', action === 'expand' ? 'true' : 'false');\n        }\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)\n            && !isCountRequired(this)) {\n            this.notify(events.localPagedExpandCollapse, { action: action, row: row, record: record });\n        }\n        else {\n            let displayAction;\n            if (action === 'expand') {\n                displayAction = 'table-row';\n                if (!isChild) {\n                    record.expanded = true;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                let targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                addClass([targetEle], 'e-treegridexpand');\n                removeClass([targetEle], 'e-treegridcollapse');\n            }\n            else {\n                displayAction = 'none';\n                if (!isChild) {\n                    record.expanded = false;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                let targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                addClass([targetEle], 'e-treegridcollapse');\n                removeClass([targetEle], 'e-treegridexpand');\n            }\n            let detailrows = gridRows.filter((r) => r.classList.contains('e-griddetailrowindex' + record.index + 'level' + (record.level + 1)));\n            if (isRemoteData(this) && !isOffline(this)) {\n                this.remoteExpand(action, row, record, isChild);\n            }\n            else {\n                if (!isCountRequired(this) || action === 'collapse') {\n                    this.localExpand(action, row, record, isChild);\n                }\n            }\n            this.notify('rowExpandCollapse', { detailrows: detailrows, action: displayAction, record: record, row: row });\n            this.updateAltRow(gridRows);\n        }\n    }\n    updateChildOnDemand(expandingArgs) {\n        let deff = new Deferred();\n        let childDataBind = 'childDataBind';\n        expandingArgs[childDataBind] = deff.resolve;\n        let record = expandingArgs.data;\n        this.trigger(events.dataStateChange, expandingArgs);\n        deff.promise.then((e) => {\n            if (expandingArgs.childData.length) {\n                let currentData = (this.flatData);\n                let index = 0;\n                for (let i = 0; i < currentData.length; i++) {\n                    if (currentData[i].taskData === record.taskData) {\n                        index = i;\n                        break;\n                    }\n                }\n                let data = getValue('result', this.dataSource);\n                let childData = extendArray(expandingArgs.childData);\n                let length = record[this.childMapping] ?\n                    record[this.childMapping].length > childData.length ? record[this.childMapping].length : childData.length : childData.length;\n                for (let i = 0; i < length; i++) {\n                    if (record[this.childMapping]) {\n                        data.filter((e, i) => {\n                            if (e[this.parentIdMapping] === record[this.idMapping]) {\n                                data.splice(i, 1);\n                            }\n                        });\n                    }\n                    if (childData[i]) {\n                        childData[i].level = record.level + 1;\n                        childData[i].index = Math.ceil(Math.random() * 1000);\n                        childData[i].parentItem = extend({}, record);\n                        childData[i].taskData = extend({}, childData[i]);\n                        delete childData[i].parentItem.childRecords;\n                        delete childData[i].taskData.parentItem;\n                        childData[i].parentUniqueID = record.uniqueID;\n                        childData[i].uniqueID = getUid(this.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + childData[i].uniqueID, childData[i], this);\n                        if (!isNullOrUndefined(childData[i][this.childMapping]) ||\n                            (childData[i][this.hasChildMapping] && isCountRequired(this))) {\n                            childData[i].hasChildRecords = true;\n                        }\n                        currentData.splice(index + 1 + i, record[this.childMapping] && record[this.childMapping][i] ? 1 : 0, childData[i]);\n                    }\n                    else {\n                        currentData.splice(index + 1 + i, 1);\n                    }\n                }\n                currentData[index][this.childMapping] = childData;\n                currentData[index].childRecords = childData;\n                currentData[index].expanded = true;\n                setValue('uniqueIDCollection.' + currentData[index].uniqueID, currentData[index], this);\n                for (let j = 0; j < expandingArgs.childData.length; j++) {\n                    data.push(expandingArgs.childData[j]);\n                }\n            }\n            this.isExpandRefresh = true;\n            this.refresh();\n            this.trigger(events.expanded, expandingArgs);\n        });\n    }\n    remoteExpand(action, row, record, isChild) {\n        let gridRows = this.getRows();\n        if (this.rowTemplate) {\n            let rows = this.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        let args = { data: record, row: row };\n        let rows = [];\n        rows = gridRows.filter((r) => r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1)));\n        if (action === 'expand') {\n            this.notify(events.remoteExpand, { record: record, rows: rows, parentRow: row });\n            let args = { row: row, data: record };\n            if (rows.length > 0) {\n                this.trigger(events.expanded, args);\n            }\n        }\n        else {\n            this.collapseRemoteChild(rows);\n            this.trigger(events.collapsed, args);\n        }\n    }\n    localExpand(action, row, record, isChild) {\n        let childRecords = this.getCurrentViewRecords().filter((e) => {\n            return e.parentUniqueID === record.uniqueID;\n        });\n        let movableRows;\n        let gridRows = this.getRows();\n        if (this.rowTemplate) {\n            let rows = this.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        let displayAction = (action === 'expand') ? 'table-row' : 'none';\n        let index = childRecords[0].parentItem.index;\n        let rows = gridRows.filter((r) => r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1)));\n        if (this.frozenRows > 0) {\n            movableRows = this.getMovableRows().filter((r) => r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1)));\n        }\n        for (let i = 0; i < rows.length; i++) {\n            rows[i].style.display = displayAction;\n            if (!isNullOrUndefined(movableRows)) {\n                movableRows[i].style.display = displayAction;\n            }\n            this.notify('childRowExpand', { row: rows[i] });\n            if (!isNullOrUndefined(childRecords[i].childRecords) && (action !== 'expand' ||\n                isNullOrUndefined(childRecords[i].expanded) || childRecords[i].expanded)) {\n                this.expandCollapse(action, rows[i], childRecords[i], true);\n                if (this.frozenColumns <= this.treeColumnIndex && !isNullOrUndefined(movableRows)) {\n                    this.expandCollapse(action, movableRows[i], childRecords[i], true);\n                }\n            }\n        }\n    }\n    updateAltRow(rows) {\n        if (this.enableAltRow && !this.rowTemplate) {\n            let visibleRowCount = 0;\n            for (let i = 0; rows && i < rows.length; i++) {\n                let gridRow = rows[i];\n                if (gridRow.style.display !== 'none') {\n                    if (gridRow.classList.contains('e-altrow')) {\n                        removeClass([gridRow], 'e-altrow');\n                    }\n                    if (visibleRowCount % 2 !== 0 && !gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        addClass([gridRow], 'e-altrow');\n                    }\n                    if (!gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        visibleRowCount++;\n                    }\n                }\n            }\n        }\n    }\n    treeColumnRowTemplate(args) {\n        if (this.rowTemplate) {\n            let rows = this.getContentTable().rows;\n            rows = [].slice.call(rows);\n            for (let i = 0; i < rows.length; i++) {\n                let rcell = this.grid.getContentTable().rows[i].cells[this.treeColumnIndex];\n                let row = rows[i];\n                let rowData = this.grid.getRowsObject()[i].data;\n                let arg = { data: rowData, row: row, cell: rcell, column: this.getColumns()[this.treeColumnIndex] };\n                this.renderModule.cellRender(arg);\n            }\n        }\n    }\n    collapseRemoteChild(rows) {\n        let rData;\n        for (let i = 0; i < rows.length; i++) {\n            if (this.rowTemplate) {\n                rData = this.grid.getCurrentViewRecords()[rows[i].rowIndex];\n            }\n            else {\n                rData = this.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n            }\n            rData.expanded = false;\n            if (isBlazor() && this.isServerRendered) {\n                removeClass([rows[i]], 'e-treerowexpanded');\n                addClass([rows[i]], 'e-treerowcollapsed');\n            }\n            else {\n                rows[i].style.display = 'none';\n            }\n            let collapsingTd = rows[i].querySelector('.e-detailrowexpand');\n            if (!isNullOrUndefined(collapsingTd)) {\n                this.grid.detailRowModule.collapse(collapsingTd);\n            }\n            if (rows[i].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                let expandElement = rows[i].querySelector('.e-treecolumn-container .e-treegridexpand');\n                removeClass([expandElement], 'e-treegridexpand');\n                addClass([expandElement], 'e-treegridcollapse');\n                let cRow = [];\n                let eRows = this.getRows();\n                for (let i = 0; i < eRows.length; i++) {\n                    if (eRows[i].querySelector('.e-gridrowindex' + rData.index + 'level' + (rData.level + 1))) {\n                        cRow.push(eRows[i]);\n                    }\n                }\n                this.collapseRemoteChild(cRow);\n            }\n        }\n    }\n    /**\n     * @hidden\n     */\n    addListener() {\n        this.on('updateResults', this.updateResultModel, this);\n        this.grid.on('initial-end', this.afterGridRender, this);\n    }\n    updateResultModel(returnResult) {\n        this.dataResults = returnResult;\n    }\n    /**\n     * @hidden\n     */\n    removeListener() {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.off('updateResults', this.updateResultModel);\n        this.grid.off('initial-end', this.afterGridRender);\n    }\n    /**\n     * Filters TreeGrid row by column name with the given options.\n     * @param  {string} fieldName - Defines the field name of the column.\n     * @param  {string} filterOperator - Defines the operator to filter records.\n     * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n     * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n     * @param  {boolean} matchCase - If match case is set to true, TreeGrid filters the records with exact match. if false, it filters case\n     * insensitive records (uppercase and lowercase letters treated the same).\n     * @param  {boolean} ignoreAccent - If ignoreAccent set to true,\n     * then filter ignores the diacritic characters or accents while filtering.\n     * @param  {string} actualFilterValue - Defines the actual filter value for the filter column.\n     * @param  {string} actualOperator - Defines the actual filter operator for the filter column.\n     * @return {void}\n     */\n    filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n        this.grid.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n    }\n    /**\n     * Clears all the filtered rows of the TreeGrid.\n     * @return {void}\n     */\n    clearFiltering() {\n        this.grid.clearFiltering();\n    }\n    /**\n     * Removes filtered column by field name.\n     * @param  {string} field - Defines column field name to remove filter.\n     * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n     * @return {void}\n     * @hidden\n     */\n    removeFilteredColsByField(field, isClearFilterBar) {\n        this.grid.removeFilteredColsByField(field, isClearFilterBar);\n    }\n    /**\n     * Selects a row by given index.\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    selectRow(index, isToggle) {\n        this.grid.selectRow(index, isToggle);\n    }\n    /**\n     * Selects a collection of rows by indexes.\n     * @param  {number[]} rowIndexes - Specifies the row indexes.\n     * @return {void}\n     */\n    selectRows(rowIndexes) {\n        this.grid.selectRows(rowIndexes);\n    }\n    /**\n     * Deselects the current selected rows and cells.\n     * @return {void}\n     */\n    clearSelection() {\n        this.grid.clearSelection();\n    }\n    /**\n     * Copy the selected rows or cells data into clipboard.\n     * @param {boolean} withHeader - Specifies whether the column header text needs to be copied along with rows or cells.\n     */\n    copy(withHeader) {\n        this.clipboardModule.copy(withHeader);\n    }\n    /**\n     * Paste data from clipboard to selected cells.\n     * @param {boolean} data - Specifies the date for paste.\n     * @param {boolean} rowIndex - Specifies the row index.\n     * @param {boolean} colIndex - Specifies the column index.\n     */\n    paste(data, rowIndex, colIndex) {\n        this.clipboardModule.paste(data, rowIndex, colIndex);\n    }\n    /**\n     * Selects a cell by the given index.\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    selectCell(cellIndex, isToggle) {\n        this.grid.selectCell(cellIndex, isToggle);\n    }\n    /**\n     * Gets the collection of selected rows.\n     * @return {Element[]}\n     */\n    getSelectedRows() {\n        return this.grid.getSelectedRows();\n    }\n    /**\n     * Gets a movable table cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    getMovableCellFromIndex(rowIndex, columnIndex) {\n        return this.grid.getMovableCellFromIndex(rowIndex, columnIndex);\n    }\n    /**\n     * Gets all the TreeGrid's movable table data rows.\n     * @return {Element[]}\n     */\n    getMovableDataRows() {\n        return this.grid.getMovableDataRows();\n    }\n    /**\n     * Gets a movable tables row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    getMovableRowByIndex(index) {\n        return this.grid.getMovableRowByIndex(index);\n    }\n    /**\n     * Gets the TreeGrid's movable content rows from frozen treegrid.\n     * @return {Element[]}\n     */\n    getMovableRows() {\n        return this.grid.getMovableRows();\n    }\n    /**\n     * @hidden\n     */\n    getFrozenColumns() {\n        return this.getFrozenCount(this.columns, 0);\n    }\n    getFrozenCount(cols, cnt) {\n        for (let i = 0, len = cols.length; i < len; i++) {\n            if (cols[i].columns) {\n                cnt = this.getFrozenCount(cols[i].columns, cnt);\n            }\n            else {\n                if (cols[i].isFrozen) {\n                    cnt++;\n                }\n            }\n        }\n        return cnt;\n    }\n    /**\n     * Gets the collection of selected row indexes.\n     * @return {number[]}\n     */\n    getSelectedRowIndexes() {\n        return this.grid.getSelectedRowIndexes();\n    }\n    /**\n     * Gets the collection of selected row and cell indexes.\n     * @return {number[]}\n     */\n    getSelectedRowCellIndexes() {\n        return this.grid.getSelectedRowCellIndexes();\n    }\n    /**\n     * Gets the collection of selected records.\n     * @isGenericType true\n     * @return {Object[]}\n     */\n    getSelectedRecords() {\n        return this.grid.getSelectedRecords();\n    }\n    /**\n     * Gets the data module.\n     * @return {Data}\n     */\n    getDataModule() {\n        return { baseModule: this.grid.getDataModule(), treeModule: this.dataModule };\n    }\n    /**\n     * Reorder the rows based on given indexes and position\n     */\n    reorderRows(fromIndexes, toIndex, position) {\n        this.rowDragAndDropModule.reorderRows(fromIndexes, toIndex, position);\n    }\n};\n__decorate([\n    Property(0)\n], TreeGrid.prototype, \"frozenRows\", void 0);\n__decorate([\n    Property(0)\n], TreeGrid.prototype, \"frozenColumns\", void 0);\n__decorate([\n    Property('Ellipsis')\n], TreeGrid.prototype, \"clipMode\", void 0);\n__decorate([\n    Property([])\n], TreeGrid.prototype, \"columns\", void 0);\n__decorate([\n    Property(null)\n], TreeGrid.prototype, \"childMapping\", void 0);\n__decorate([\n    Property(null)\n], TreeGrid.prototype, \"hasChildMapping\", void 0);\n__decorate([\n    Property(0)\n], TreeGrid.prototype, \"treeColumnIndex\", void 0);\n__decorate([\n    Property(null)\n], TreeGrid.prototype, \"idMapping\", void 0);\n__decorate([\n    Property(null)\n], TreeGrid.prototype, \"parentIdMapping\", void 0);\n__decorate([\n    Property(false)\n], TreeGrid.prototype, \"enableCollapseAll\", void 0);\n__decorate([\n    Property(null)\n], TreeGrid.prototype, \"expandStateMapping\", void 0);\n__decorate([\n    Property(false)\n], TreeGrid.prototype, \"allowRowDragAndDrop\", void 0);\n__decorate([\n    Property([])\n], TreeGrid.prototype, \"dataSource\", void 0);\n__decorate([\n    Property()\n], TreeGrid.prototype, \"query\", void 0);\n__decorate([\n    Property()\n], TreeGrid.prototype, \"cloneQuery\", void 0);\n__decorate([\n    Property('AllPages')\n], TreeGrid.prototype, \"printMode\", void 0);\n__decorate([\n    Property(false)\n], TreeGrid.prototype, \"allowPaging\", void 0);\n__decorate([\n    Property(false)\n], TreeGrid.prototype, \"loadChildOnDemand\", void 0);\n__decorate([\n    Property(false)\n], TreeGrid.prototype, \"allowTextWrap\", void 0);\n__decorate([\n    Complex({}, TextWrapSettings)\n], TreeGrid.prototype, \"textWrapSettings\", void 0);\n__decorate([\n    Property(false)\n], TreeGrid.prototype, \"allowReordering\", void 0);\n__decorate([\n    Property(false)\n], TreeGrid.prototype, \"allowResizing\", void 0);\n__decorate([\n    Property(false)\n], TreeGrid.prototype, \"autoCheckHierarchy\", void 0);\n__decorate([\n    Complex({}, PageSettings)\n], TreeGrid.prototype, \"pageSettings\", void 0);\n__decorate([\n    Complex({}, RowDropSettings)\n], TreeGrid.prototype, \"rowDropSettings\", void 0);\n__decorate([\n    Property()\n], TreeGrid.prototype, \"pagerTemplate\", void 0);\n__decorate([\n    Property(false)\n], TreeGrid.prototype, \"showColumnMenu\", void 0);\n__decorate([\n    Property(false)\n], TreeGrid.prototype, \"allowSorting\", void 0);\n__decorate([\n    Property(true)\n], TreeGrid.prototype, \"allowMultiSorting\", void 0);\n__decorate([\n    Complex({}, SortSettings)\n], TreeGrid.prototype, \"sortSettings\", void 0);\n__decorate([\n    Collection([], AggregateRow)\n], TreeGrid.prototype, \"aggregates\", void 0);\n__decorate([\n    Complex({}, EditSettings)\n], TreeGrid.prototype, \"editSettings\", void 0);\n__decorate([\n    Property(false)\n], TreeGrid.prototype, \"allowFiltering\", void 0);\n__decorate([\n    Property()\n], TreeGrid.prototype, \"detailTemplate\", void 0);\n__decorate([\n    Complex({}, FilterSettings)\n], TreeGrid.prototype, \"filterSettings\", void 0);\n__decorate([\n    Complex({}, SearchSettings)\n], TreeGrid.prototype, \"searchSettings\", void 0);\n__decorate([\n    Property()\n], TreeGrid.prototype, \"toolbar\", void 0);\n__decorate([\n    Property()\n], TreeGrid.prototype, \"toolbarTemplate\", void 0);\n__decorate([\n    Property('Default')\n], TreeGrid.prototype, \"gridLines\", void 0);\n__decorate([\n    Property()\n], TreeGrid.prototype, \"contextMenuItems\", void 0);\n__decorate([\n    Property()\n], TreeGrid.prototype, \"columnMenuItems\", void 0);\n__decorate([\n    Property()\n], TreeGrid.prototype, \"rowTemplate\", void 0);\n__decorate([\n    Property('Parent')\n], TreeGrid.prototype, \"copyHierarchyMode\", void 0);\n__decorate([\n    Property(null)\n], TreeGrid.prototype, \"rowHeight\", void 0);\n__decorate([\n    Property(true)\n], TreeGrid.prototype, \"enableAltRow\", void 0);\n__decorate([\n    Property(true)\n], TreeGrid.prototype, \"allowKeyboard\", void 0);\n__decorate([\n    Property(false)\n], TreeGrid.prototype, \"enableHover\", void 0);\n__decorate([\n    Property(false)\n], TreeGrid.prototype, \"enableAutoFill\", void 0);\n__decorate([\n    Property('auto')\n], TreeGrid.prototype, \"height\", void 0);\n__decorate([\n    Property('auto')\n], TreeGrid.prototype, \"width\", void 0);\n__decorate([\n    Property(false)\n], TreeGrid.prototype, \"enableVirtualization\", void 0);\n__decorate([\n    Property('All')\n], TreeGrid.prototype, \"columnQueryMode\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"created\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"load\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"expanding\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"expanded\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"collapsing\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"collapsed\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"cellSave\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"cellSaved\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"actionBegin\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"actionComplete\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"beginEdit\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"batchAdd\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"batchDelete\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"batchCancel\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"beforeBatchAdd\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"beforeBatchDelete\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"beforeBatchSave\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"cellEdit\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"actionFailure\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"dataBound\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"dataSourceChanged\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"dataStateChange\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"recordDoubleClick\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"rowDataBound\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"detailDataBound\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"queryCellInfo\", void 0);\n__decorate([\n    Property(true)\n], TreeGrid.prototype, \"allowSelection\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"rowSelecting\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"rowSelected\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"rowDeselecting\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"rowDeselected\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"headerCellInfo\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"cellSelecting\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"columnMenuOpen\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"columnMenuClick\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"cellSelected\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"cellDeselecting\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"cellDeselected\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"resizeStart\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"resizing\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"resizeStop\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"columnDragStart\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"columnDrag\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"columnDrop\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"checkboxChange\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"printComplete\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"beforePrint\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"toolbarClick\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"beforeDataBound\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"contextMenuOpen\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"contextMenuClick\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"beforeCopy\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"beforePaste\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"rowDrag\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"rowDragStart\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"rowDragStartHelper\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"rowDrop\", void 0);\n__decorate([\n    Property(-1)\n], TreeGrid.prototype, \"selectedRowIndex\", void 0);\n__decorate([\n    Complex({}, SelectionSettings)\n], TreeGrid.prototype, \"selectionSettings\", void 0);\n__decorate([\n    Property(false)\n], TreeGrid.prototype, \"allowExcelExport\", void 0);\n__decorate([\n    Property(false)\n], TreeGrid.prototype, \"allowPdfExport\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"pdfQueryCellInfo\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"excelQueryCellInfo\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"beforeExcelExport\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"excelExportComplete\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"beforePdfExport\", void 0);\n__decorate([\n    Event()\n], TreeGrid.prototype, \"pdfExportComplete\", void 0);\nTreeGrid = TreeGrid_1 = __decorate([\n    NotifyPropertyChanges\n], TreeGrid);\nexport { TreeGrid };\n","import { getObject, Grid, Reorder as GridReorder } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Reorder module\n * @hidden\n */\nexport class Reorder {\n    /**\n     * Constructor for Reorder module\n     */\n    constructor(parent, treeColumn) {\n        Grid.Inject(GridReorder);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    getModuleName() {\n        return 'reorder';\n    }\n    /**\n     * @hidden\n     */\n    addEventListener() {\n        this.parent.on('getColumnIndex', this.getTreeColumn, this);\n    }\n    removeEventListener() {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('getColumnIndex', this.getTreeColumn);\n    }\n    /**\n     * To destroy the Reorder\n     * @return {void}\n     * @hidden\n     */\n    destroy() {\n        this.removeEventListener();\n    }\n    getTreeColumn() {\n        let columnModel = 'columnModel';\n        let treeColumn = this.parent[columnModel][this.parent.treeColumnIndex];\n        let treeIndex;\n        let updatedCols = this.parent.getColumns();\n        for (let f = 0; f < updatedCols.length; f++) {\n            let treeColumnfield = getObject('field', treeColumn);\n            let parentColumnfield = getObject('field', updatedCols[f]);\n            if (treeColumnfield === parentColumnfield) {\n                treeIndex = f;\n                break;\n            }\n        }\n        this.parent.setProperties({ treeColumnIndex: treeIndex }, true);\n    }\n}\n","import { Grid, Resize as GridResize } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Resize module\n * @hidden\n */\nexport class Resize {\n    /**\n     * Constructor for Resize module\n     */\n    constructor(parent) {\n        Grid.Inject(GridResize);\n        this.parent = parent;\n    }\n    /**\n     * Resize by field names.\n     * @param  {string|string[]} fName - Defines the field name.\n     * @return {void}\n     */\n    autoFitColumns(fName) {\n        this.parent.grid.autoFitColumns(fName);\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    getModuleName() {\n        return 'resize';\n    }\n    /**\n     * Destroys the Resize.\n     * @method destroy\n     * @return {void}\n     */\n    destroy() {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.grid.resizeModule.destroy();\n    }\n}\n","import { isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { extendArray, getPlainData, getParentData } from '../utils';\nexport function editAction(details, control, isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord) {\n    let value = details.value;\n    let action = details.action;\n    let changedRecords = 'changedRecords';\n    let i;\n    let j;\n    let addedRecords = 'addedRecords';\n    let batchChanges;\n    let key = control.grid.getPrimaryKeyFieldNames()[0];\n    let treeData = control.dataSource instanceof DataManager ?\n        control.dataSource.dataSource.json : control.dataSource;\n    let modifiedData = [];\n    let originalData = value;\n    let isSkip = false;\n    if (control.editSettings.mode === 'Batch') {\n        batchChanges = control.grid.editModule.getBatchChanges();\n    }\n    if (action === 'add' || (action === 'batchsave' && (control.editSettings.mode === 'Batch'\n        && batchChanges[addedRecords].length))) {\n        let addAct = addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord);\n        value = addAct.value;\n        isSkip = addAct.isSkip;\n    }\n    if (value instanceof Array) {\n        modifiedData = extendArray(value);\n    }\n    else {\n        modifiedData.push(extend({}, value));\n    }\n    if (!isSkip && (action !== 'add' ||\n        (control.editSettings.newRowPosition !== 'Top' && control.editSettings.newRowPosition !== 'Bottom'))) {\n        for (let k = 0; k < modifiedData.length; k++) {\n            if (typeof (modifiedData[k][key]) === 'object') {\n                modifiedData[k] = modifiedData[k][key];\n            }\n            let keys = Object.keys(modifiedData[k].taskData);\n            i = treeData.length;\n            while (i-- && i >= 0) {\n                if (treeData[i][key] === modifiedData[k][key]) {\n                    if (action === 'delete') {\n                        let currentData = treeData[i];\n                        treeData.splice(i, 1);\n                        if (isSelfReference) {\n                            if (!isNullOrUndefined(currentData[control.parentIdMapping])) {\n                                let parentData = control.flatData.filter((e) => e[control.idMapping] === currentData[control.parentIdMapping])[0];\n                                let childRecords = parentData ? parentData[control.childMapping] : [];\n                                for (let p = childRecords.length - 1; p >= 0; p--) {\n                                    if (childRecords[p][control.idMapping] === currentData[control.idMapping]) {\n                                        childRecords.splice(p, 1);\n                                        if (!childRecords.length) {\n                                            parentData.hasChildRecords = false;\n                                            updateParentRow(key, parentData, action, control, isSelfReference);\n                                        }\n                                        break;\n                                    }\n                                }\n                            }\n                            break;\n                        }\n                    }\n                    else {\n                        if (action === 'edit') {\n                            for (j = 0; j < keys.length; j++) {\n                                if (treeData[i].hasOwnProperty(keys[j]) && ((control.editSettings.mode !== 'Cell'\n                                    || (!isNullOrUndefined(batchChanges) && batchChanges[changedRecords].length === 0))\n                                    || keys[j] === columnName)) {\n                                    let editedData = getParentData(control, modifiedData[k].uniqueID);\n                                    editedData.taskData[keys[j]] = treeData[i][keys[j]] = modifiedData[k][keys[j]];\n                                }\n                            }\n                        }\n                        else if (action === 'add' || action === 'batchsave') {\n                            let index;\n                            if (control.editSettings.newRowPosition === 'Child') {\n                                if (isSelfReference) {\n                                    originalData.taskData[control.parentIdMapping] = treeData[i][control.idMapping];\n                                    treeData.splice(i + 1, 0, originalData.taskData);\n                                }\n                                else {\n                                    if (!treeData[i].hasOwnProperty(control.childMapping)) {\n                                        treeData[i][control.childMapping] = [];\n                                    }\n                                    treeData[i][control.childMapping].push(originalData.taskData);\n                                    updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                                }\n                            }\n                            else if (control.editSettings.newRowPosition === 'Below') {\n                                treeData.splice(i + 1, 0, originalData.taskData);\n                                updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                            }\n                            else if (!addRowIndex) {\n                                index = 0;\n                                treeData.splice(index, 0, originalData.taskData);\n                            }\n                            else if (control.editSettings.newRowPosition === 'Above') {\n                                treeData.splice(i, 0, originalData.taskData);\n                                updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                            }\n                        }\n                        break;\n                    }\n                }\n                else if (!isNullOrUndefined(treeData[i][control.childMapping])) {\n                    if (removeChildRecords(treeData[i][control.childMapping], modifiedData[k], action, key, control, isSelfReference, originalData, columnName)) {\n                        updateParentRow(key, treeData[i], action, control, isSelfReference);\n                    }\n                }\n            }\n        }\n    }\n}\nexport function addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord) {\n    let value;\n    let isSkip = false;\n    let currentViewRecords = control.grid.getCurrentViewRecords();\n    value = extend({}, details.value);\n    value = getPlainData(value);\n    switch (control.editSettings.newRowPosition) {\n        case 'Top':\n            treeData.unshift(value);\n            isSkip = true;\n            break;\n        case 'Bottom':\n            treeData.push(value);\n            isSkip = true;\n            break;\n        case 'Above':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                value = extend({}, currentViewRecords[addRowIndex + 1]);\n                value = getPlainData(value);\n            }\n            break;\n        case 'Below':\n        case 'Child':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                let primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n                let currentdata = currentViewRecords[addRowIndex];\n                if (!isNullOrUndefined(currentdata) && currentdata[primaryKeys] === details.value[primaryKeys] || selectedIndex !== -1) {\n                    value = extend({}, currentdata);\n                }\n                else {\n                    value = extend({}, details.value);\n                }\n                value = getPlainData(value);\n            }\n            if (selectedIndex === -1) {\n                treeData.unshift(value);\n                isSkip = true;\n            }\n    }\n    return { value: value, isSkip: isSkip };\n}\nexport function removeChildRecords(childRecords, modifiedData, action, key, control, isSelfReference, originalData, columnName) {\n    let isChildAll = false;\n    let j = childRecords.length;\n    while (j-- && j >= 0) {\n        if (childRecords[j][key] === modifiedData[key] ||\n            (isSelfReference && childRecords[j][control.parentIdMapping] === modifiedData[control.idMapping])) {\n            if (action === 'edit') {\n                let keys = Object.keys(modifiedData);\n                let editedData = getParentData(control, modifiedData.uniqueID);\n                for (let i = 0; i < keys.length; i++) {\n                    if (childRecords[j].hasOwnProperty(keys[i]) && (control.editSettings.mode !== 'Cell' || keys[i] === columnName)) {\n                        editedData[keys[i]] = editedData.taskData[keys[i]] = childRecords[j][keys[i]] = modifiedData[keys[i]];\n                    }\n                }\n                break;\n            }\n            else if (action === 'add' || action === 'batchsave') {\n                if (control.editSettings.newRowPosition === 'Child') {\n                    if (isSelfReference) {\n                        originalData[control.parentIdMapping] = childRecords[j][control.idMapping];\n                        childRecords.splice(j + 1, 0, originalData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                    else {\n                        if (!childRecords[j].hasOwnProperty(control.childMapping)) {\n                            childRecords[j][control.childMapping] = [];\n                        }\n                        childRecords[j][control.childMapping].push(originalData.taskData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Above') {\n                    childRecords.splice(j, 0, originalData.taskData);\n                    updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                }\n                else if (control.editSettings.newRowPosition === 'Below') {\n                    childRecords.splice(j + 1, 0, originalData.taskData);\n                    updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                }\n            }\n            else {\n                let parentItem = childRecords[j].parentItem;\n                childRecords.splice(j, 1);\n                if (!childRecords.length) {\n                    isChildAll = true;\n                }\n            }\n        }\n        else if (!isNullOrUndefined(childRecords[j][control.childMapping])) {\n            if (removeChildRecords(childRecords[j][control.childMapping], modifiedData, action, key, control, isSelfReference, originalData, columnName)) {\n                updateParentRow(key, childRecords[j], action, control, isSelfReference);\n            }\n        }\n    }\n    return isChildAll;\n}\nexport function updateParentRow(key, record, action, control, isSelfReference, child) {\n    if ((control.editSettings.newRowPosition === 'Above' || control.editSettings.newRowPosition === 'Below')\n        && ((action === 'add' || action === 'batchsave')) && !isNullOrUndefined(child.parentItem)) {\n        let parentData = getParentData(control, child.parentItem.uniqueID);\n        parentData.childRecords.push(child);\n    }\n    else {\n        let currentRecords = control.grid.getCurrentViewRecords();\n        let index;\n        currentRecords.map((e, i) => { if (e[key] === record[key]) {\n            index = i;\n            return;\n        } });\n        record = currentRecords[index];\n        record.hasChildRecords = false;\n        if (action === 'add' || action === 'batchsave') {\n            record.expanded = true;\n            record.hasChildRecords = true;\n            if (control.sortSettings.columns.length && isNullOrUndefined(child)) {\n                child = currentRecords.filter((e) => {\n                    if (e.parentUniqueID === record.uniqueID) {\n                        return e;\n                    }\n                    else {\n                        return null;\n                    }\n                });\n            }\n            let childRecords = child ? child instanceof Array ? child[0] : child : currentRecords[index + 1];\n            if (control.editSettings.newRowPosition !== 'Below') {\n                if (!record.hasOwnProperty('childRecords')) {\n                    record.childRecords = [];\n                }\n                else {\n                    if (!isNullOrUndefined(child) && record[key] !== child[key]) {\n                        record.childRecords.push(child);\n                    }\n                }\n                if (record.childRecords.indexOf(childRecords) === -1 && record[key] !== child[key]) {\n                    record.childRecords.unshift(childRecords);\n                }\n                if (isSelfReference) {\n                    if (!record.hasOwnProperty(control.childMapping)) {\n                        record[control.childMapping] = [];\n                    }\n                    if (record[control.childMapping].indexOf(childRecords) === -1 && record[key] !== child[key]) {\n                        record[control.childMapping].unshift(childRecords);\n                    }\n                }\n            }\n        }\n        let primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n        let data = control.grid.dataSource instanceof DataManager ?\n            control.grid.dataSource.dataSource.json : control.grid.dataSource;\n        for (let i = 0; i < data.length; i++) {\n            if (data[i][primaryKeys] === record[primaryKeys]) {\n                data[i] = record;\n                break;\n            }\n        }\n        control.grid.setRowData(key, record);\n        let row = control.getRowByIndex(index);\n        if (control.editSettings.mode === 'Batch') {\n            row = control.getRows()[control.grid.getRowIndexByPrimaryKey(record[key])];\n        }\n        let movableRow;\n        if (control.frozenRows || control.getFrozenColumns()) {\n            movableRow = control.getMovableRowByIndex(index);\n        }\n        control.renderModule.cellRender({\n            data: record, cell: row.cells[control.treeColumnIndex] ? row.cells[control.treeColumnIndex]\n                : movableRow.cells[control.treeColumnIndex - control.frozenColumns],\n            column: control.grid.getColumns()[control.treeColumnIndex],\n            requestType: action\n        });\n    }\n}\n","import { Grid, RowDD as GridDragDrop, parentsUntil } from '@syncfusion/ej2-grids';\nimport { getObject, Scroll } from '@syncfusion/ej2-grids';\nimport { closest, isNullOrUndefined, classList, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport * as events from '../base/constant';\nimport { editAction } from './crud-actions';\nimport { getParentData, findChildrenRecords, isRemoteData, isOffline, isCountRequired } from '../utils';\n/**\n * TreeGrid RowDragAndDrop module\n * @hidden\n */\nexport class RowDD {\n    /**\n     *\n     * Constructor for render module\n     */\n    constructor(parent) {\n        /** @hidden */\n        this.canDrop = true;\n        /** @hidden */\n        this.isDraggedWithChild = false;\n        /** @hidden */\n        this.isaddtoBottom = false;\n        Grid.Inject(GridDragDrop);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    getChildrecordsByParentID(id) {\n        let index;\n        let treeGridDataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            treeGridDataSource = this.parent.grid.dataSource.dataSource.json;\n        }\n        else {\n            treeGridDataSource = this.parent.grid.dataSource;\n        }\n        let record = treeGridDataSource.filter((e) => {\n            return e.uniqueID === id;\n        });\n        return record;\n    }\n    /**\n     * @hidden\n     */\n    addEventListener() {\n        this.parent.on(events.rowdraging, this.Rowdraging, this);\n        this.parent.on(events.rowDropped, this.rowDropped, this);\n        this.parent.on(events.rowsAdd, this.rowsAdded, this);\n        this.parent.on(events.rowsRemove, this.rowsRemoved, this);\n    }\n    /**\n     * Reorder the rows based on given indexes and position\n     */\n    reorderRows(fromIndexes, toIndex, position) {\n        let tObj = this.parent;\n        if (fromIndexes[0] !== toIndex && position === 'above' || 'below' || 'child') {\n            if (position === 'above') {\n                this.dropPosition = 'topSegment';\n            }\n            if (position === 'below') {\n                this.dropPosition = 'bottomSegment';\n            }\n            if (position === 'child') {\n                this.dropPosition = 'middleSegment';\n            }\n            let data = [];\n            for (let i = 0; i < fromIndexes.length; i++) {\n                data[i] = this.parent.getCurrentViewRecords()[fromIndexes[i]];\n            }\n            let isByMethod = true;\n            let args = {\n                data: data,\n                dropIndex: toIndex\n            };\n            if (!isCountRequired(this.parent)) {\n                this.dropRows(args, isByMethod);\n            }\n            //this.refreshGridDataSource();\n            this.parent.refresh();\n            if (tObj.isLocalData) {\n                tObj.flatData = this.orderToIndex(tObj.flatData);\n            }\n        }\n        else {\n            return;\n        }\n    }\n    orderToIndex(currentData) {\n        for (let i = 0; i < currentData.length; i++) {\n            currentData[i].index = i;\n        }\n        return currentData;\n    }\n    rowsAdded(e) {\n        let draggedRecord;\n        let dragRecords = e.records;\n        for (let i = e.records.length - 1; i > -1; i--) {\n            draggedRecord = dragRecords[i];\n            if (draggedRecord.parentUniqueID) {\n                let record = dragRecords.filter((data) => {\n                    return data.uniqueID === draggedRecord.parentUniqueID;\n                });\n                if (record.length) {\n                    let index = record[0].childRecords.indexOf(draggedRecord);\n                    let parentRecord = record[0];\n                    if (index !== -1) {\n                        parentRecord.childRecords.splice(index, 1);\n                        if (!parentRecord.childRecords.length) {\n                            parentRecord.hasChildRecords = false;\n                            parentRecord.hasFilteredChildRecords = false;\n                        }\n                        this.isDraggedWithChild = true;\n                    }\n                }\n            }\n        }\n        if (isNullOrUndefined(this.parent.dataSource) || !this.parent.dataSource.length) {\n            let tObj = this.parent;\n            let draggedRecord;\n            let dragRecords = e.records;\n            let dragLength = e.records.length;\n            for (let i = dragLength - 1; i > -1; i--) {\n                draggedRecord = dragRecords[i];\n                let recordIndex1 = 0;\n                if (!draggedRecord.taskData.hasOwnProperty(tObj.childMapping)) {\n                    draggedRecord.taskData[tObj.childMapping] = [];\n                }\n                if (isNullOrUndefined(tObj.dataSource)) {\n                    tObj.dataSource = [];\n                }\n                tObj.dataSource.splice(recordIndex1, 0, draggedRecord.taskData);\n                tObj.setProperties({ dataSource: tObj.dataSource }, false);\n            }\n        }\n        else {\n            for (let i = 0; i < dragRecords.length; i++) {\n                setValue('uniqueIDCollection.' + dragRecords[i].uniqueID, dragRecords[i], this.parent);\n            }\n            let args = { data: e.records, dropIndex: e.toIndex };\n            if (this.parent.dataSource instanceof DataManager) {\n                this.treeGridData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                this.treeGridData = this.parent.grid.dataSource;\n            }\n            this.dropRows(args);\n        }\n    }\n    rowsRemoved(e) {\n        for (let i = 0; i < e.records.length; i++) {\n            this.draggedRecord = e.records[i];\n            if (this.draggedRecord.hasChildRecords || this.draggedRecord.parentItem &&\n                this.parent.grid.dataSource.\n                    indexOf(this.getChildrecordsByParentID(this.draggedRecord.parentUniqueID)[0]) !== -1 ||\n                this.draggedRecord.level === 0) {\n                this.deleteDragRow();\n            }\n        }\n    }\n    refreshGridDataSource() {\n        let draggedRecord = this.draggedRecord;\n        let droppedRecord = this.droppedRecord;\n        let proxy = this.parent;\n        let tempDataSource;\n        let idx;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            tempDataSource = proxy.dataSource.dataSource.json;\n        }\n        else {\n            tempDataSource = proxy.dataSource;\n        }\n        if (tempDataSource && (!isNullOrUndefined(droppedRecord) && !droppedRecord.parentItem)) {\n            for (let i = 0; i < Object.keys(tempDataSource).length; i++) {\n                if (tempDataSource[i][this.parent.childMapping] === droppedRecord.taskData[this.parent.childMapping]) {\n                    idx = i;\n                }\n            }\n            if (this.dropPosition === 'topSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx, 0, draggedRecord.taskData);\n                }\n            }\n            else if (this.dropPosition === 'bottomSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx + 1, 0, draggedRecord.taskData);\n                }\n            }\n        }\n        else if (!this.parent.parentIdMapping && (!isNullOrUndefined(droppedRecord) && droppedRecord.parentItem)) {\n            if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                let record = this.getChildrecordsByParentID(droppedRecord.parentUniqueID)[0];\n                let childRecords = record.childRecords;\n                for (let i = 0; i < childRecords.length; i++) {\n                    droppedRecord.parentItem.taskData[this.parent.childMapping][i] = childRecords[i].taskData;\n                }\n            }\n        }\n        if (this.parent.parentIdMapping) {\n            if (draggedRecord.parentItem) {\n                if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                }\n                else {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                }\n            }\n            else {\n                draggedRecord.taskData[this.parent.parentIdMapping] = null;\n                draggedRecord[this.parent.parentIdMapping] = null;\n            }\n        }\n    }\n    removeFirstrowBorder(element, isRemove) {\n        let canremove = this.dropPosition === 'bottomSegment';\n        if (this.parent.element.getElementsByClassName('e-firstrow-border').length > 0 && element &&\n            (element.rowIndex !== 0 || canremove)) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n    }\n    removeLastrowBorder(element, isRemove) {\n        let isEmptyRow = element && (element.classList.contains('e-emptyrow') || element.classList.contains('e-columnheader'));\n        let islastRowIndex = element && !isEmptyRow &&\n            this.parent.getRowByIndex(this.parent.getRows().length - 1).getAttribute('data-uid') !==\n                element.getAttribute('data-uid');\n        let canremove = islastRowIndex || this.dropPosition === 'topSegment';\n        if (this.parent.element.getElementsByClassName('e-lastrow-border').length > 0 && element && (islastRowIndex || canremove)) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n    }\n    updateIcon(row, index, args) {\n        let rowEle = args.target ? closest(args.target, 'tr') : null;\n        this.dropPosition = undefined;\n        let rowPositionHeight = 0;\n        this.removeFirstrowBorder(rowEle);\n        this.removeLastrowBorder(rowEle);\n        for (let i = 0; i < args.rows.length; i++) {\n            if (!isNullOrUndefined(rowEle) && rowEle.getAttribute('data-uid') === args.rows[i].getAttribute('data-uid')\n                || !parentsUntil(args.target, 'e-gridcontent')) {\n                this.dropPosition = 'Invalid';\n                this.addErrorElem();\n            }\n        }\n        // To get the corresponding drop position related to mouse position \n        let tObj = this.parent;\n        let rowTop = 0;\n        let roundOff = 0;\n        let toolHeight = tObj.toolbar && tObj.toolbar.length ?\n            document.getElementById(tObj.element.id + '_gridcontrol_toolbarItems').offsetHeight : 0;\n        // tObj.lastRow = tObj.getRowByIndex(tObj.getCurrentViewRecords().length - 1);\n        let positionOffSet = this.getOffset(tObj.element);\n        // let contentHeight1: number = (tObj.element.offsetHeight  - (tObj.getContent() as HTMLElement).offsetHeight) + positionOffSet.top;\n        let contentHeight = tObj.getHeaderContent().offsetHeight + positionOffSet.top + toolHeight;\n        let scrollTop = tObj.getContent().firstElementChild.scrollTop;\n        if (!isNullOrUndefined(rowEle)) {\n            rowPositionHeight = rowEle.offsetTop - scrollTop;\n        }\n        // let scrollTop = (tObj.grid.scrollModule as any).content.scrollTop;\n        if (tObj.allowTextWrap) {\n            rowTop = row[0].offsetHeight;\n        }\n        else {\n            rowTop = rowPositionHeight + contentHeight + roundOff;\n        }\n        let rowBottom = rowTop + row[0].offsetHeight;\n        let difference = rowBottom - rowTop;\n        let divide = difference / 3;\n        let topRowSegment = rowTop + divide;\n        let middleRowSegment = topRowSegment + divide;\n        let bottomRowSegment = middleRowSegment + divide;\n        let posx = positionOffSet.left;\n        let mouseEvent = getObject('originalEvent.event', args);\n        let posy = mouseEvent.pageY;\n        let isTopSegment = posy <= topRowSegment;\n        let isMiddleRowSegment = (posy > topRowSegment && posy <= middleRowSegment);\n        let isBottomRowSegment = (posy > middleRowSegment && posy <= bottomRowSegment);\n        if (isTopSegment || isMiddleRowSegment || isBottomRowSegment) {\n            if (isTopSegment && this.dropPosition !== 'Invalid') {\n                this.removeChildBorder();\n                this.dropPosition = 'topSegment';\n                this.removetopOrBottomBorder();\n                this.addFirstrowBorder(rowEle);\n                this.removeErrorElem();\n                this.removeLastrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n            if (isMiddleRowSegment && this.dropPosition !== 'Invalid') {\n                this.removetopOrBottomBorder();\n                let element;\n                let rowElement = [];\n                element = closest(args.target, 'tr');\n                rowElement = [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse'));\n                if (rowElement.length > 0) {\n                    this.addRemoveClasses(rowElement, true, 'e-childborder');\n                }\n                this.addLastRowborder(rowEle);\n                this.addFirstrowBorder(rowEle);\n                this.dropPosition = 'middleSegment';\n            }\n            if (isBottomRowSegment && this.dropPosition !== 'Invalid') {\n                this.removeErrorElem();\n                this.removetopOrBottomBorder();\n                this.removeChildBorder();\n                this.dropPosition = 'bottomSegment';\n                this.addLastRowborder(rowEle);\n                this.removeFirstrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n        }\n        return this.dropPosition;\n    }\n    removeChildBorder() {\n        let borderElem = [];\n        borderElem = [].slice.call(this.parent.element.querySelectorAll('.e-childborder'));\n        if (borderElem.length > 0) {\n            this.addRemoveClasses(borderElem, false, 'e-childborder');\n        }\n    }\n    addFirstrowBorder(targetRow) {\n        let node = this.parent.element;\n        let tObj = this.parent;\n        if (targetRow && targetRow.rowIndex === 0 && !targetRow.classList.contains('e-emptyrow')) {\n            let div = this.parent.createElement('div', { className: 'e-firstrow-border' });\n            let gridheaderEle = this.parent.getHeaderContent();\n            let toolbarHeight = 0;\n            if (tObj.toolbar) {\n                toolbarHeight = tObj.toolbarModule.getToolbar().offsetHeight;\n            }\n            let multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n            if (multiplegrid) {\n                div.style.top = this.parent.grid.element.getElementsByClassName('e-gridheader')[0].offsetHeight\n                    + toolbarHeight + 'px';\n            }\n            div.style.width = multiplegrid ? node.offsetWidth + 'px' :\n                node.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridheaderEle.querySelectorAll('.e-firstrow-border').length) {\n                gridheaderEle.appendChild(div);\n            }\n        }\n    }\n    addLastRowborder(trElement) {\n        let isEmptyRow = trElement && (trElement.classList.contains('e-emptyrow') ||\n            trElement.classList.contains('e-columnheader'));\n        if (trElement && !isEmptyRow && this.parent.getRowByIndex(this.parent.getRows().length - 1).getAttribute('data-uid') ===\n            trElement.getAttribute('data-uid')) {\n            let bottomborder = this.parent.createElement('div', { className: 'e-lastrow-border' });\n            let gridcontentEle = this.parent.getContent();\n            bottomborder.style.width = this.parent.element.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridcontentEle.querySelectorAll('.e-lastrow-border').length) {\n                gridcontentEle.classList.add('e-treegrid-relative');\n                gridcontentEle.appendChild(bottomborder);\n                bottomborder.style.bottom = this.getScrollWidth() + 'px';\n            }\n        }\n    }\n    getScrollWidth() {\n        let scrollElem = this.parent.getContent().firstElementChild;\n        return scrollElem.scrollWidth > scrollElem.offsetWidth ? Scroll.getScrollBarWidth() : 0;\n    }\n    addErrorElem() {\n        let dragelem = document.getElementsByClassName('e-cloneproperties')[0];\n        let errorelem = dragelem.querySelectorAll('.e-errorelem').length;\n        if (!errorelem && !this.parent.rowDropSettings.targetID) {\n            let ele = document.createElement('div');\n            classList(ele, ['e-errorcontainer'], []);\n            classList(ele, ['e-icons', 'e-errorelem'], []);\n            let errorVal = dragelem.querySelector('.errorValue');\n            let content = dragelem.querySelector('.e-rowcell').innerHTML;\n            if (errorVal) {\n                content = errorVal.innerHTML;\n                errorVal.parentNode.removeChild(errorVal);\n            }\n            dragelem.querySelector('.e-rowcell').innerHTML = '';\n            let spanContent = document.createElement('span');\n            spanContent.className = 'errorValue';\n            spanContent.style.paddingLeft = '16px';\n            spanContent.innerHTML = content;\n            dragelem.querySelector('.e-rowcell').appendChild(ele);\n            dragelem.querySelector('.e-rowcell').appendChild(spanContent);\n        }\n    }\n    removeErrorElem() {\n        let errorelem = document.querySelector('.e-errorelem');\n        if (errorelem) {\n            errorelem.remove();\n        }\n    }\n    topOrBottomBorder(target) {\n        let element;\n        let multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n        let rowElement = [];\n        element = closest(target, 'tr');\n        rowElement = element ? [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse')) : [];\n        if (rowElement.length) {\n            if (this.dropPosition === 'topSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-droptop');\n                if (this.parent.element.getElementsByClassName('e-lastrow-dragborder').length > 0) {\n                    this.parent.element.getElementsByClassName('e-lastrow-dragborder')[0].remove();\n                }\n            }\n            if (this.dropPosition === 'bottomSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-dropbottom');\n            }\n        }\n    }\n    removetopOrBottomBorder() {\n        let border = [];\n        border = [].slice.call(this.parent.element.querySelectorAll('.e-dropbottom, .e-droptop'));\n        if (border.length) {\n            this.addRemoveClasses(border, false, 'e-dropbottom');\n            this.addRemoveClasses(border, false, 'e-droptop');\n        }\n    }\n    addRemoveClasses(cells, add, className) {\n        for (let i = 0, len = cells.length; i < len; i++) {\n            if (add) {\n                cells[i].classList.add(className);\n            }\n            else {\n                cells[i].classList.remove(className);\n            }\n        }\n    }\n    getOffset(element) {\n        let box = element.getBoundingClientRect();\n        let body = document.body;\n        let docElem = document.documentElement;\n        let scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop;\n        let scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft;\n        let clientTop = docElem.clientTop || body.clientTop || 0;\n        let clientLeft = docElem.clientLeft || body.clientLeft || 0;\n        let top = box.top + scrollTop - clientTop;\n        let left = box.left + scrollLeft - clientLeft;\n        return { top: Math.round(top), left: Math.round(left) };\n    }\n    Rowdraging(args) {\n        let tObj = this.parent;\n        let cloneElement = this.parent.element.querySelector('.e-cloneproperties');\n        cloneElement.style.cursor = '';\n        let rowEle = args.target ? closest(args.target, 'tr') : null;\n        let rowIdx = rowEle ? rowEle.rowIndex : -1;\n        let dragRecords = [];\n        let droppedRecord = tObj.getCurrentViewRecords()[rowIdx];\n        this.removeErrorElem();\n        this.canDrop = true;\n        if (!args.data[0]) {\n            dragRecords.push(args.data);\n        }\n        else {\n            dragRecords = args.data;\n        }\n        if (rowIdx !== -1) {\n            this.ensuredropPosition(dragRecords, droppedRecord);\n        }\n        else {\n            this.canDrop = false;\n            this.addErrorElem();\n        }\n        if (!tObj.rowDropSettings.targetID && this.canDrop) {\n            tObj.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n        }\n        if (tObj.rowDropSettings.targetID) {\n            let dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID) {\n                let srcControl = dropElement.ej2_instances[0];\n                srcControl.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n            }\n        }\n        if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID)) {\n            let dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (!dropElement) {\n                cloneElement.style.cursor = 'default';\n            }\n        }\n    }\n    rowDropped(args) {\n        let tObj = this.parent;\n        if (!tObj.rowDropSettings.targetID) {\n            if (parentsUntil(args.target, 'e-content')) {\n                if (this.parent.element.querySelector('.e-errorelem')) {\n                    this.dropPosition = 'Invalid';\n                }\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel) {\n                    if (!isCountRequired(this.parent)) {\n                        this.dropRows(args);\n                    }\n                    tObj.refresh();\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                    if (!isNullOrUndefined(tObj.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                        tObj.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                    }\n                }\n            }\n        }\n        else {\n            if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID) || parentsUntil(args.target, 'e-treegrid') &&\n                parentsUntil(args.target, 'e-treegrid').id === tObj.rowDropSettings.targetID) {\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel && tObj.rowDropSettings.targetID) {\n                    this.dragDropGrid(args);\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                }\n            }\n        }\n        this.removetopOrBottomBorder();\n        this.removeChildBorder();\n        if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-firstrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n        else if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-lastrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n    }\n    dragDropGrid(args) {\n        let tObj = this.parent;\n        let currentIndex;\n        let targetRow = closest(args.target, 'tr');\n        let targetIndex = isNaN(this.getTargetIdx(targetRow)) ? 0 : this.getTargetIdx(targetRow);\n        let dropElement = parentsUntil(args.target, 'e-treegrid');\n        let srcControl;\n        if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID && !isRemoteData(this.parent)\n            && !isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            let records = tObj.getSelectedRecords();\n            let indexes = [];\n            for (let i = 0; i < records.length; i++) {\n                indexes[i] = records[i].index;\n            }\n            tObj.notify(events.rowsRemove, { indexes: indexes, records: records });\n            srcControl.notify(events.rowsAdd, { toIndex: targetIndex, records: records });\n            tObj.refresh();\n            srcControl.refresh();\n            if (srcControl.grid.dataSource.length > 1) {\n                srcControl.refresh();\n                if (!isNullOrUndefined(srcControl.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                    srcControl.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                }\n                if (!isNullOrUndefined(srcControl.getContent().querySelector('.e-lastrow-border'))) {\n                    srcControl.getContent().querySelector('.e-lastrow-border').remove();\n                }\n            }\n        }\n        if (isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            tObj.refresh();\n            srcControl.refresh();\n        }\n    }\n    getTargetIdx(targetRow) {\n        return targetRow ? parseInt(targetRow.getAttribute('aria-rowindex'), 10) : 0;\n    }\n    getParentData(record) {\n        let parentItem = record.parentItem;\n        if (this.dropPosition === 'bottomSegment') {\n            let selectedRecord = this.parent.getSelectedRecords()[0];\n            this.droppedRecord = getParentData(this.parent, selectedRecord.parentItem.uniqueID);\n        }\n        if (this.dropPosition === 'middleSegment') {\n            let level = this.parent.getSelectedRecords()[0].level;\n            if (level === parentItem.level) {\n                this.droppedRecord = getParentData(this.parent, parentItem.uniqueID);\n            }\n            else {\n                this.getParentData(parentItem);\n            }\n        }\n    }\n    dropRows(args, isByMethod) {\n        if (this.dropPosition !== 'Invalid' && !isRemoteData(this.parent)) {\n            let tObj = this.parent;\n            let draggedRecord;\n            let droppedRecord;\n            if (isNullOrUndefined(args.dropIndex)) {\n                let rowIndex = tObj.getSelectedRowIndexes()[0] - 1;\n                let record = tObj.getCurrentViewRecords()[rowIndex];\n                this.getParentData(record);\n            }\n            else {\n                this.droppedRecord = tObj.getCurrentViewRecords()[args.dropIndex];\n            }\n            let dragRecords = [];\n            droppedRecord = this.droppedRecord;\n            if (!args.data[0]) {\n                dragRecords.push(args.data);\n            }\n            else {\n                dragRecords = args.data;\n            }\n            let count = 0;\n            let multiplegrid = this.parent.rowDropSettings.targetID;\n            this.isMultipleGrid = multiplegrid;\n            let addToBottom = false;\n            if (!multiplegrid) {\n                this.ensuredropPosition(dragRecords, droppedRecord);\n            }\n            else {\n                this.isaddtoBottom = addToBottom = multiplegrid && this.isDraggedWithChild;\n            }\n            let dragLength = dragRecords.length;\n            for (let i = 0; i < dragLength; i++) {\n                draggedRecord = dragRecords[i];\n                this.draggedRecord = draggedRecord;\n                let recordIndex = args.dropIndex;\n                let isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n                if (this.dropPosition !== 'Invalid') {\n                    if (!tObj.rowDropSettings.targetID || isByMethod) {\n                        this.deleteDragRow();\n                    }\n                    let recordIndex1 = this.treeGridData.indexOf(droppedRecord);\n                    this.dropAtTop(recordIndex1, isSelfReference, i);\n                    if (this.dropPosition === 'bottomSegment') {\n                        if (!droppedRecord.hasChildRecords) {\n                            if (this.parent.parentIdMapping) {\n                                this.treeData.splice(recordIndex1 + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + 1, 0, this.draggedRecord);\n                        }\n                        else {\n                            count = this.getChildCount(droppedRecord, 0);\n                            if (this.parent.parentIdMapping) {\n                                this.treeData.splice(recordIndex1 + count + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + count + 1, 0, this.draggedRecord);\n                        }\n                        draggedRecord.parentItem = this.treeGridData[recordIndex1].parentItem;\n                        draggedRecord.parentUniqueID = this.treeGridData[recordIndex1].parentUniqueID;\n                        draggedRecord.level = this.treeGridData[recordIndex1].level;\n                        if (draggedRecord.hasChildRecords) {\n                            let level = 1;\n                            this.updateChildRecordLevel(draggedRecord, level);\n                            this.updateChildRecord(draggedRecord, recordIndex1 + count + 1);\n                        }\n                        if (droppedRecord.parentItem) {\n                            let rec = this.getChildrecordsByParentID(droppedRecord.parentUniqueID);\n                            let childRecords = rec[0].childRecords;\n                            let droppedRecordIndex = childRecords.indexOf(droppedRecord) + 1;\n                            childRecords.splice(droppedRecordIndex, 0, draggedRecord);\n                        }\n                    }\n                    this.dropMiddle(recordIndex, recordIndex1, args, isByMethod, isSelfReference, i);\n                }\n                if (isNullOrUndefined(draggedRecord.parentItem)) {\n                    let parentRecords = tObj.parentData;\n                    let newParentIndex = parentRecords.indexOf(this.droppedRecord);\n                    if (this.dropPosition === 'bottomSegment') {\n                        parentRecords.splice(newParentIndex + 1, 0, draggedRecord);\n                    }\n                    else if (this.dropPosition === 'topSegment') {\n                        parentRecords.splice(newParentIndex, 0, draggedRecord);\n                    }\n                }\n                tObj.rowDragAndDropModule.refreshGridDataSource();\n            }\n        }\n    }\n    dropMiddle(recordIndex, recordIndex1, args, isSelfReference, isByMethod, i) {\n        let tObj = this.parent;\n        let childRecords = findChildrenRecords(this.droppedRecord);\n        let childRecordsLength = (isNullOrUndefined(childRecords) ||\n            childRecords.length === 0) ? recordIndex1 + 1 :\n            childRecords.length + recordIndex1 + 1;\n        if (this.dropPosition === 'middleSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(childRecordsLength, 0, this.draggedRecord.taskData);\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            else {\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            this.recordLevel();\n            if (this.draggedRecord.hasChildRecords) {\n                this.updateChildRecord(this.draggedRecord, childRecordsLength, this.droppedRecord.expanded);\n            }\n        }\n    }\n    dropAtTop(recordIndex1, isSelfReference, i) {\n        let tObj = this.parent;\n        if (this.dropPosition === 'topSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(recordIndex1, 0, this.draggedRecord.taskData);\n            }\n            this.draggedRecord.parentItem = this.treeGridData[recordIndex1].parentItem;\n            this.draggedRecord.parentUniqueID = this.treeGridData[recordIndex1].parentUniqueID;\n            this.draggedRecord.level = this.treeGridData[recordIndex1].level;\n            this.treeGridData.splice(recordIndex1, 0, this.draggedRecord);\n            if (this.draggedRecord.hasChildRecords) {\n                let level = 1;\n                this.updateChildRecord(this.draggedRecord, recordIndex1);\n                this.updateChildRecordLevel(this.draggedRecord, level);\n            }\n            if (this.droppedRecord.parentItem) {\n                let rec = this.getChildrecordsByParentID(this.droppedRecord.parentUniqueID);\n                let childRecords = rec[0].childRecords;\n                let droppedRecordIndex = childRecords.indexOf(this.droppedRecord);\n                childRecords.splice(droppedRecordIndex, 0, this.draggedRecord);\n            }\n        }\n    }\n    recordLevel() {\n        let tObj = this.parent;\n        let draggedRecord = this.draggedRecord;\n        let droppedRecord = this.droppedRecord;\n        let childItem = tObj.childMapping;\n        if (!droppedRecord.hasChildRecords) {\n            droppedRecord.hasChildRecords = true;\n            droppedRecord.hasFilteredChildRecords = true;\n            if (isNullOrUndefined(droppedRecord.childRecords)) {\n                droppedRecord.childRecords = [];\n                if (!tObj.parentIdMapping && isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                    droppedRecord.taskData[childItem] = [];\n                }\n            }\n        }\n        if (this.dropPosition === 'middleSegment') {\n            let parentItem = extend({}, droppedRecord);\n            delete parentItem.childRecords;\n            draggedRecord.parentItem = parentItem;\n            draggedRecord.parentUniqueID = droppedRecord.uniqueID;\n            droppedRecord.childRecords.splice(droppedRecord.childRecords.length, 0, draggedRecord);\n            if (!isNullOrUndefined(draggedRecord) && !tObj.parentIdMapping && !isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                droppedRecord.taskData[tObj.childMapping].splice(droppedRecord.childRecords.length, 0, draggedRecord.taskData);\n            }\n            if (!draggedRecord.hasChildRecords) {\n                draggedRecord.level = droppedRecord.level + 1;\n            }\n            else {\n                let level = 1;\n                draggedRecord.level = droppedRecord.level + 1;\n                this.updateChildRecordLevel(draggedRecord, level);\n            }\n            droppedRecord.expanded = true;\n            // if (tObj.isLocalData) {\n            //     tObj.parentData.push(droppedRecord);\n            // }\n        }\n    }\n    deleteDragRow() {\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            this.treeGridData = this.parent.grid.dataSource.dataSource.json;\n            this.treeData = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            this.treeGridData = this.parent.grid.dataSource;\n            this.treeData = this.parent.dataSource;\n        }\n        let deletedRow;\n        deletedRow = getParentData(this.parent, this.draggedRecord.uniqueID);\n        this.removeRecords(deletedRow);\n    }\n    updateChildRecord(record, count, expanded) {\n        let currentRecord;\n        let tObj = this.parent;\n        let length = 0;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (let i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            tObj.flatData.splice(count, 0, currentRecord);\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(count, 0, currentRecord.taskData);\n            }\n            if (currentRecord.hasChildRecords) {\n                count = this.updateChildRecord(currentRecord, count);\n            }\n        }\n        return count;\n    }\n    updateChildRecordLevel(record, level) {\n        let length = 0;\n        let currentRecord;\n        level++;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (let i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            let parentData;\n            if (record.parentItem) {\n                parentData = getParentData(this.parent, record.parentItem.uniqueID);\n            }\n            currentRecord.level = record.parentItem ? parentData.level + level : record.level + 1;\n            if (currentRecord.hasChildRecords) {\n                level--;\n                level = this.updateChildRecordLevel(currentRecord, level);\n            }\n        }\n        return level;\n    }\n    removeRecords(record) {\n        let tObj = this.parent;\n        let dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        let deletedRow = record;\n        let recordIndex;\n        let rowIndex;\n        let isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n        let flatParentData = this.getChildrecordsByParentID(deletedRow.parentUniqueID)[0];\n        if (deletedRow) {\n            if (deletedRow.parentItem) {\n                let childRecords = flatParentData ? flatParentData.childRecords : [];\n                let childIndex = 0;\n                if (childRecords && childRecords.length > 0) {\n                    childIndex = childRecords.indexOf(deletedRow);\n                    flatParentData.childRecords.splice(childIndex, 1);\n                    if (!this.parent.parentIdMapping) {\n                        editAction({ value: deletedRow, action: 'delete' }, this.parent, isSelfReference, deletedRow.index, deletedRow.index);\n                    }\n                }\n            }\n            if (tObj.parentIdMapping) {\n                if (deletedRow.hasChildRecords && deletedRow.childRecords.length > 0) {\n                    this.removeChildItem(deletedRow);\n                }\n                let idx;\n                let idz;\n                let treeGridData = dataSource;\n                for (let i = 0; i < treeGridData.length; i++) {\n                    if (treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idx = i;\n                    }\n                }\n                for (let i = 0; i < this.treeGridData.length; i++) {\n                    if (this.treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idz = i;\n                    }\n                }\n                if (idx !== -1 || idz !== -1) {\n                    dataSource.splice(idx, 1);\n                    this.treeGridData.splice(idz, 1);\n                }\n            }\n            let recordIndex = this.treeGridData.indexOf(deletedRow);\n            if (!tObj.parentIdMapping) {\n                let parentIndex = this.parent.parentData.indexOf(deletedRow);\n                if (parentIndex !== -1) {\n                    tObj.parentData.splice(parentIndex, 1);\n                    dataSource.splice(parentIndex, 1);\n                }\n            }\n            if (recordIndex === -1 && !tObj.parentIdMapping) {\n                let primaryKeyField = tObj.getPrimaryKeyFieldNames()[0];\n                for (let j = 0; j < this.treeGridData.length; j++) {\n                    if (this.treeGridData[j][primaryKeyField] === deletedRow[primaryKeyField]) {\n                        recordIndex = j;\n                    }\n                }\n            }\n            if (!tObj.parentIdMapping) {\n                let deletedRecordCount = this.getChildCount(deletedRow, 0);\n                this.treeGridData.splice(recordIndex, deletedRecordCount + 1);\n            }\n            if (deletedRow.parentItem && flatParentData && flatParentData.childRecords && !flatParentData.childRecords.length) {\n                flatParentData.expanded = false;\n                flatParentData.hasChildRecords = false;\n                flatParentData.hasFilteredChildRecords = false;\n            }\n        }\n    }\n    removeChildItem(record) {\n        let tObj = this.parent;\n        let currentRecord;\n        let idx;\n        let idz;\n        let dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        for (let i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            let treeGridData;\n            if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n                treeGridData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                treeGridData = this.parent.dataSource;\n            }\n            for (let i = 0; i < treeGridData.length; i++) {\n                if (treeGridData[i][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idx = i;\n                }\n            }\n            for (let i = 0; i < this.treeGridData.length; i++) {\n                if (this.treeGridData[i][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idz = i;\n                    break;\n                }\n            }\n            if (idx !== -1 || idz !== -1) {\n                dataSource.splice(idx, 1);\n                this.treeGridData.splice(idz, 1);\n            }\n            if (currentRecord.hasChildRecords) {\n                this.removeChildItem(currentRecord);\n            }\n        }\n    }\n    getChildCount(record, count) {\n        let currentRecord;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        for (let i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            if (currentRecord.hasChildRecords) {\n                count = this.getChildCount(currentRecord, count);\n            }\n        }\n        return count;\n    }\n    ensuredropPosition(draggedRecords, currentRecord) {\n        let tObj = this.parent;\n        let rowDragMoudule = this;\n        draggedRecords.filter((e) => {\n            if (e.hasChildRecords && !isNullOrUndefined(e.childRecords)) {\n                let valid = e.childRecords.indexOf(currentRecord);\n                if (valid === -1) {\n                    rowDragMoudule.ensuredropPosition(e.childRecords, currentRecord);\n                }\n                else {\n                    rowDragMoudule.dropPosition = 'Invalid';\n                    rowDragMoudule.addErrorElem();\n                    rowDragMoudule.canDrop = false;\n                    return;\n                }\n            }\n        });\n    }\n    destroy() {\n        this.removeEventListener();\n    }\n    /**\n     * @hidden\n     */\n    removeEventListener() {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowdraging, this.Rowdraging);\n        this.parent.off(events.rowDropped, this.rowDropped);\n        this.parent.off(events.rowsAdd, this.rowsAdded);\n        this.parent.off(events.rowsRemove, this.rowsRemoved);\n    }\n    /**\n     * hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    getModuleName() {\n        return 'rowDragAndDrop';\n    }\n}\n","/**\n * Base export\n */\nexport * from './treegrid';\nexport * from './constant';\nexport * from './data';\nexport * from '../actions/reorder';\nexport * from '../actions/resize';\nexport * from '../actions/rowdragdrop';\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the row drop settings of the TreeGrid.\n */\nexport class RowDropSettings extends ChildProperty {\n}\n__decorate([\n    Property()\n], RowDropSettings.prototype, \"targetID\", void 0);\n","/**\n * Models export\n */\nexport * from './column';\nexport * from './edit-settings';\nexport * from './filter-settings';\nexport * from './page-settings';\nexport * from './search-settings';\nexport * from './selection-settings';\nexport * from './summary';\nexport * from './sort-settings';\nexport * from './rowdrop-settings';\n","import { VirtualRowModelGenerator } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\n/**\n * RowModelGenerator is used to generate grid data rows.\n * @hidden\n */\nexport class TreeVirtualRowModelGenerator extends VirtualRowModelGenerator {\n    constructor(parent) {\n        super(parent);\n        this.addEventListener();\n    }\n    addEventListener() {\n        this.parent.on(events.dataListener, this.getDatas, this);\n    }\n    getDatas(args) {\n        this.visualData = args.data;\n    }\n    generateRows(data, notifyArgs) {\n        if (this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') {\n            return super.generateRows(data, notifyArgs);\n        }\n        else {\n            if (!isNullOrUndefined(notifyArgs.requestType) && notifyArgs.requestType.toString() === 'collapseAll') {\n                notifyArgs.requestType = 'refresh';\n            }\n            let rows = super.generateRows(data, notifyArgs);\n            for (let r = 0; r < rows.length; r++) {\n                rows[r].index = (this.visualData).indexOf(rows[r].data);\n            }\n            return rows;\n        }\n    }\n    checkAndResetCache(action) {\n        let clear = ['paging', 'refresh', 'sorting', 'filtering', 'searching', 'reorder',\n            'save', 'delete'].some((value) => action === value);\n        if (this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') {\n            let model = 'model';\n            let currentPage = this[model].currentPage;\n            if (clear) {\n                this.cache = {};\n                this.data = {};\n                this.groups = {};\n            }\n            else if (action === 'virtualscroll' && this.cache[currentPage] &&\n                this.cache[currentPage].length > (this.parent.contentModule).getBlockSize()) {\n                delete this.cache[currentPage];\n            }\n        }\n        else {\n            if (clear || action === 'virtualscroll') {\n                this.cache = {};\n                this.data = {};\n                this.groups = {};\n            }\n        }\n        return clear;\n    }\n}\n","/**\n * Renderer export\n */\nexport * from './render';\nexport * from './virtual-row-model-generator';\n","import { getObject, Filter as GridFilter, Grid } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { getParentData } from '../utils';\n/**\n * TreeGrid Filter module will handle filtering action\n * @hidden\n */\nexport class Filter {\n    /**\n     * Constructor for Filter module\n     */\n    constructor(parent) {\n        Grid.Inject(GridFilter);\n        this.parent = parent;\n        this.isHierarchyFilter = false;\n        this.filteredResult = [];\n        this.flatFilteredData = [];\n        this.filteredParentRecs = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    getModuleName() {\n        return 'filter';\n    }\n    /**\n     * To destroy the Filter module\n     * @return {void}\n     * @hidden\n     */\n    destroy() {\n        this.removeEventListener();\n    }\n    /**\n     * @hidden\n     */\n    addEventListener() {\n        this.parent.on('updateFilterRecs', this.updatedFilteredRecord, this);\n        this.parent.on('clearFilters', this.clearFilterLevel, this);\n    }\n    /**\n     * @hidden\n     */\n    removeEventListener() {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateFilterRecs', this.updatedFilteredRecord);\n        this.parent.off('clearFilters', this.clearFilterLevel);\n    }\n    /**\n     * Function to update filtered records\n     *  @hidden\n     */\n    updatedFilteredRecord(dataDetails) {\n        setValue('uniqueIDFilterCollection', {}, this.parent);\n        this.flatFilteredData = dataDetails.data;\n        this.filteredParentRecs = [];\n        this.filteredResult = [];\n        this.isHierarchyFilter = false;\n        for (let f = 0; f < this.flatFilteredData.length; f++) {\n            let rec = this.flatFilteredData[f];\n            this.addParentRecord(rec);\n            let hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n                : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'None') &&\n                (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== ''))) {\n                this.isHierarchyFilter = true;\n            }\n            let ischild = getObject('childRecords', rec);\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                setValue('hasFilteredChildRecords', this.checkChildExsist(rec), rec);\n            }\n            let parent = getObject('parentItem', rec);\n            if (!isNullOrUndefined(parent)) {\n                let parRecord = getParentData(this.parent, rec.parentItem.uniqueID, true);\n                //let parRecord: Object = this.flatFilteredData.filter((e: ITreeData) => {\n                //          return e.uniqueID === rec.parentItem.uniqueID; })[0];\n                setValue('hasFilteredChildRecords', true, parRecord);\n                if (parRecord && parRecord.parentItem) {\n                    this.updateParentFilteredRecord(parRecord);\n                }\n            }\n        }\n        if (this.flatFilteredData.length > 0 && this.isHierarchyFilter) {\n            this.updateFilterLevel();\n        }\n        this.parent.notify('updateAction', { result: this.filteredResult });\n    }\n    updateParentFilteredRecord(record) {\n        let parRecord = getParentData(this.parent, record.parentItem.uniqueID, true);\n        let uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n        if (parRecord && uniqueIDValue.hasOwnProperty(parRecord.uniqueID)) {\n            setValue('hasFilteredChildRecords', true, parRecord);\n        }\n        if (parRecord && parRecord.parentItem) {\n            this.updateParentFilteredRecord(parRecord);\n        }\n    }\n    ;\n    addParentRecord(record) {\n        let parent = getParentData(this.parent, record.parentUniqueID);\n        //let parent: Object = this.parent.flatData.filter((e: ITreeData) => {return e.uniqueID === record.parentUniqueID; })[0];\n        let hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n            : this.parent.searchSettings.hierarchyMode;\n        if (hierarchyMode === 'None' && (this.parent.grid.filterSettings.columns.length !== 0\n            || this.parent.grid.searchSettings.key !== '')) {\n            if (isNullOrUndefined(parent)) {\n                if (this.flatFilteredData.indexOf(record) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                        record.hasFilteredChildRecords = true;\n                    }\n                    return;\n                }\n            }\n            else {\n                this.addParentRecord(parent);\n                if (this.flatFilteredData.indexOf(parent) !== -1 || this.filteredResult.indexOf(parent) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n                else {\n                    if (this.filteredResult.indexOf(record) === -1 && this.flatFilteredData.indexOf(record) !== -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n            }\n        }\n        else {\n            if (!isNullOrUndefined(parent)) {\n                let hierarchyMode = this.parent.grid.searchSettings.key === '' ?\n                    this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n                if (hierarchyMode === 'Child' && (this.parent.grid.filterSettings.columns.length !== 0\n                    || this.parent.grid.searchSettings.key !== '')) {\n                    if (this.flatFilteredData.indexOf(parent) !== -1) {\n                        this.addParentRecord(parent);\n                    }\n                }\n                else {\n                    this.addParentRecord(parent);\n                }\n            }\n            if (this.filteredResult.indexOf(record) === -1) {\n                this.filteredResult.push(record);\n                setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n            }\n        }\n    }\n    checkChildExsist(records) {\n        let childRec = getObject('childRecords', records);\n        let isExist = false;\n        for (let count = 0; count < childRec.length; count++) {\n            let ischild = childRec[count].childRecords;\n            let hierarchyMode = this.parent.grid.searchSettings.key === '' ?\n                this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'Both') && (this.parent.grid.filterSettings.columns.length !== 0\n                || this.parent.grid.searchSettings.key !== ''))) {\n                let uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n                if (!uniqueIDValue.hasOwnProperty(childRec[count].uniqueID)) {\n                    this.filteredResult.push(childRec[count]);\n                    setValue('uniqueIDFilterCollection.' + childRec[count].uniqueID, childRec[count], this.parent);\n                    isExist = true;\n                }\n            }\n            if ((hierarchyMode === 'None')\n                && (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== '')) {\n                if (this.flatFilteredData.indexOf(childRec[count]) !== -1) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                isExist = this.checkChildExsist(childRec[count]);\n            }\n            if ((hierarchyMode === 'Child' || hierarchyMode === 'Both') && childRec.length) {\n                isExist = true;\n            }\n        }\n        return isExist;\n    }\n    updateFilterLevel() {\n        let record = this.filteredResult;\n        let len = this.filteredResult.length;\n        for (let c = 0; c < len; c++) {\n            let parent = getParentData(this.parent, record[c].parentUniqueID);\n            let isPrst = record.indexOf(parent) !== -1;\n            if (isPrst) {\n                let parent = getParentData(this.parent, record[c].parentUniqueID, true);\n                record[c].filterLevel = parent.filterLevel + 1;\n            }\n            else {\n                record[c].filterLevel = 0;\n                this.filteredParentRecs.push(record[c]);\n            }\n        }\n    }\n    clearFilterLevel(data) {\n        let count = 0;\n        let flatData = data.flatData;\n        let len = flatData.length;\n        let currentRecord;\n        for (count; count < len; count++) {\n            currentRecord = flatData[count];\n            let fLevel = currentRecord.filterLevel;\n            if (fLevel || fLevel === 0 || !isNullOrUndefined(currentRecord.hasFilteredChildRecords)) {\n                currentRecord.hasFilteredChildRecords = null;\n                currentRecord.filterLevel = null;\n            }\n        }\n        this.filteredResult = [];\n        this.parent.notify('updateResults', { result: flatData, count: flatData.length });\n    }\n}\n","import { getObject, Grid, ExcelExport as GridExcel } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid Excel Export module\n * @hidden\n */\nexport class ExcelExport {\n    /**\n     * Constructor for Excel Export module\n     */\n    constructor(parent) {\n        Grid.Inject(GridExcel);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    getModuleName() {\n        return 'ExcelExport';\n    }\n    /**\n     * @hidden\n     */\n    addEventListener() {\n        this.parent.on('updateResults', this.updateExcelResultModel, this);\n        this.parent.on('excelCellInfo', this.excelQueryCellInfo, this);\n    }\n    /**\n     * To destroy the Excel Export\n     * @return {void}\n     * @hidden\n     */\n    destroy() {\n        this.removeEventListener();\n    }\n    /**\n     * @hidden\n     */\n    removeEventListener() {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateResults', this.updateExcelResultModel);\n        this.parent.off('excelCellInfo', this.excelQueryCellInfo);\n    }\n    updateExcelResultModel(returnResult) {\n        this.dataResults = returnResult;\n    }\n    Map(excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob, isCsv) {\n        let dataSource = this.parent.dataSource;\n        let property = Object();\n        setValue('isCsv', isCsv, property);\n        setValue('cancel', false, property);\n        return new Promise((resolve, reject) => {\n            let dm = this.isLocal() ? new DataManager(dataSource) : this.parent.dataSource;\n            let query = new Query();\n            if (!this.isLocal()) {\n                query = this.generateQuery(query);\n                setValue('query', query, property);\n            }\n            this.parent.trigger(event.beforeExcelExport, extend(property, excelExportProperties));\n            if (getObject('cancel', property)) {\n                return null;\n            }\n            dm.executeQuery(query).then((e) => {\n                let customData = null;\n                if (!isNullOrUndefined(excelExportProperties) && !isNullOrUndefined(excelExportProperties.dataSource)) {\n                    customData = excelExportProperties.dataSource;\n                }\n                excelExportProperties = this.manipulateExportProperties(excelExportProperties, dataSource, e);\n                return this.parent.grid.excelExportModule.Map(this.parent.grid, excelExportProperties, isMultipleExport, workbook, isCsv, isBlob).then((book) => {\n                    if (customData != null) {\n                        excelExportProperties.dataSource = customData;\n                    }\n                    else {\n                        delete excelExportProperties.dataSource;\n                    }\n                    resolve(book);\n                });\n            });\n        });\n    }\n    generateQuery(query, property) {\n        if (!isNullOrUndefined(property) && property.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            property.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    }\n    manipulateExportProperties(property, dtSrc, queryResult) {\n        //count not required for this query\n        let args = Object();\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(property) && !isNullOrUndefined(property.exportType)) {\n            setValue('exportType', property.exportType, args);\n        }\n        if (!this.isLocal() || !isNullOrUndefined(this.parent.parentIdMapping)) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getObject('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!this.isLocal()) {\n            this.parent.flatData = [];\n        }\n        if (property && property.dataSource && this.isLocal()) {\n            let flatsData = this.parent.flatData;\n            let dataSrc = property.dataSource instanceof DataManager ? property.dataSource.dataSource.json : property.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatsData;\n        }\n        property = isNullOrUndefined(property) ? Object() : property;\n        property.dataSource = new DataManager({ json: dtSrc });\n        return property;\n    }\n    /**\n     * TreeGrid Excel Export cell modifier\n     * @hidden\n     */\n    excelQueryCellInfo(args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            let style = {};\n            let data = args.data;\n            let ispadfilter = isNullOrUndefined(data.filterLevel);\n            let pad = ispadfilter ? data.level : data.filterLevel;\n            style.indent = pad;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('excelQueryCellInfo', args);\n    }\n    isLocal() {\n        return !isRemoteData(this.parent) && isOffline(this.parent);\n    }\n}\n","import { getObject, PdfExport as GridPdf, Grid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid PDF Export module\n * @hidden\n */\nexport class PdfExport {\n    /**\n     * Constructor for PDF export module\n     */\n    constructor(parent) {\n        Grid.Inject(GridPdf);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    getModuleName() {\n        return 'PdfExport';\n    }\n    /**\n     * @hidden\n     */\n    addEventListener() {\n        this.parent.on('pdfCellInfo', this.pdfQueryCellInfo, this);\n        this.parent.on('updateResults', this.updatePdfResultModel, this);\n    }\n    /**\n     * @hidden\n     */\n    removeEventListener() {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('pdfCellInfo', this.pdfQueryCellInfo);\n        this.parent.off('updateResults', this.updatePdfResultModel);\n    }\n    /**\n     * To destroy the PDF Export\n     * @return {void}\n     * @hidden\n     */\n    destroy() {\n        this.removeEventListener();\n    }\n    updatePdfResultModel(returnResult) {\n        this.dataResults = returnResult;\n    }\n    Map(pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        let dtSrc = this.parent.dataSource;\n        let prop = Object();\n        let isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('cancel', false, prop);\n        return new Promise((resolve, reject) => {\n            let dm = isLocal ? new DataManager(dtSrc) : this.parent.dataSource;\n            let query = new Query();\n            if (!isLocal) {\n                query = this.generateQuery(query);\n                setValue('query', query, prop);\n            }\n            this.parent.trigger(event.beforePdfExport, extend(prop, pdfExportProperties));\n            if (getObject('cancel', prop)) {\n                return null;\n            }\n            dm.executeQuery(query).then((e) => {\n                let customsData = null;\n                if (!isNullOrUndefined(pdfExportProperties) && !isNullOrUndefined(pdfExportProperties.dataSource)) {\n                    customsData = pdfExportProperties.dataSource;\n                }\n                pdfExportProperties = this.manipulatePdfProperties(pdfExportProperties, dtSrc, e);\n                return this.parent.grid.pdfExportModule.Map(this.parent.grid, pdfExportProperties, isMultipleExport, pdfDoc, isBlob).then((document) => {\n                    if (customsData != null) {\n                        pdfExportProperties.dataSource = customsData;\n                    }\n                    else {\n                        delete pdfExportProperties.dataSource;\n                    }\n                    resolve(document);\n                });\n            });\n        });\n    }\n    generateQuery(query, prop) {\n        if (!isNullOrUndefined(prop) && prop.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            prop.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    }\n    manipulatePdfProperties(prop, dtSrc, queryResult) {\n        let args = {};\n        //count not required for this query  \n        let isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.exportType)) {\n            setValue('exportType', prop.exportType, args);\n        }\n        if (!isLocal || !isNullOrUndefined(this.parent.parentIdMapping)) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getValue('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!isLocal) {\n            this.parent.flatData = [];\n        }\n        if (prop && prop.dataSource && isLocal) {\n            let flatDatas = this.parent.flatData;\n            let dataSrc = prop.dataSource instanceof DataManager ? prop.dataSource.dataSource.json : prop.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatDatas;\n        }\n        prop = isNullOrUndefined(prop) ? {} : prop;\n        prop.dataSource = new DataManager({ json: dtSrc });\n        return prop;\n    }\n    /**\n     * TreeGrid PDF Export cell modifier\n     * @hidden\n     */\n    pdfQueryCellInfo(args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            let style = {};\n            let data = getObject('data', args);\n            let ispadfilter = isNullOrUndefined(data.filterLevel);\n            let pad = ispadfilter ? data.level : data.filterLevel;\n            style.paragraphIndent = pad * 3;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('pdfQueryCellInfo', args);\n    }\n}\n","import { Grid } from '@syncfusion/ej2-grids';\nimport { Page as GridPage } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { DataManager, Query, Predicate } from '@syncfusion/ej2-data';\nimport { getValue, isNullOrUndefined, isBlazor } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * The `Page` module is used to render pager and handle paging action.\n * @hidden\n */\nexport class Page {\n    constructor(parent) {\n        Grid.Inject(GridPage);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    addEventListener() {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandPagedchilds, this);\n        this.parent.on(events.pagingActions, this.pageAction, this);\n    }\n    /**\n     * @hidden\n     */\n    removeEventListener() {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandPagedchilds);\n        this.parent.off(events.pagingActions, this.pageAction);\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    getModuleName() {\n        return 'pager';\n    }\n    /**\n     * Refreshes the page count, pager information, and external message.\n     * @return {void}\n     */\n    refresh() {\n        this.parent.grid.pagerModule.refresh();\n    }\n    /**\n     * To destroy the pager\n     * @return {void}\n     * @hidden\n     */\n    destroy() {\n        this.removeEventListener();\n    }\n    /**\n     * Navigates to the target page according to the given number.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    goToPage(pageNo) {\n        this.parent.grid.pagerModule.goToPage(pageNo);\n    }\n    /**\n     * Defines the text of the external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    updateExternalMessage(message) {\n        this.parent.grid.pagerModule.updateExternalMessage(message);\n    }\n    /**\n     * @hidden\n     */\n    collapseExpandPagedchilds(rowDetails) {\n        rowDetails.record.expanded = rowDetails.action === 'collapse' ? false : true;\n        if (isBlazor()) {\n            this.parent.flatData.filter((e) => {\n                return e.uniqueID === rowDetails.record.uniqueID;\n            })[0].expanded = rowDetails.action === 'collapse' ? false : true;\n        }\n        let ret = {\n            result: this.parent.flatData,\n            row: rowDetails.row,\n            action: rowDetails.action,\n            record: rowDetails.record,\n            count: this.parent.flatData.length\n        };\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret);\n    }\n    pageRoot(pagedResults, temp, result) {\n        let newResults = isNullOrUndefined(result) ? [] : result;\n        for (let t = 0; t < temp.length; t++) {\n            newResults.push(temp[t]);\n            let res = [];\n            if (temp[t].hasChildRecords) {\n                res = pagedResults.filter((e) => {\n                    return temp[t].uniqueID === e.parentUniqueID;\n                });\n                newResults = this.pageRoot(pagedResults, res, newResults);\n            }\n        }\n        return newResults;\n    }\n    pageAction(pageingDetails) {\n        let dm = new DataManager(pageingDetails.result);\n        if (this.parent.pageSettings.pageSizeMode === 'Root') {\n            let temp = [];\n            let propname = (this.parent.grid.filterSettings.columns.length > 0) &&\n                (this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'None') ?\n                'filterLevel' : 'level';\n            let query = new Query().where(propname, 'equal', 0);\n            temp = dm.executeLocal(query);\n            pageingDetails.count = temp.length;\n            let size = this.parent.grid.pageSettings.pageSize;\n            let current = this.parent.grid.pageSettings.currentPage;\n            let skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            temp = dm.executeLocal(query);\n            let newResults = this.pageRoot(pageingDetails.result, temp);\n            pageingDetails.result = newResults;\n        }\n        else {\n            let dm = new DataManager(pageingDetails.result);\n            let expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n            let parents = dm.executeLocal(new Query().where(expanded));\n            let visualData;\n            if (isFilterChildHierarchy(this.parent)) {\n                visualData = parents;\n            }\n            else {\n                visualData = parents.filter((e) => {\n                    return getExpandStatus(this.parent, e, parents);\n                });\n            }\n            pageingDetails.count = visualData.length;\n            let query = new Query();\n            let size = this.parent.grid.pageSettings.pageSize;\n            let current = this.parent.grid.pageSettings.currentPage;\n            if (visualData.length < (current * size)) {\n                current = (Math.floor(visualData.length / size)) + ((visualData.length % size) ? 1 : 0);\n                current = current ? current : 1;\n                this.parent.grid.setProperties({ pageSettings: { currentPage: current } }, true);\n            }\n            let skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm.dataSource.json = visualData;\n            pageingDetails.result = dm.executeLocal(query);\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    }\n}\n","import { Grid, Toolbar as tool } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Toolbar Module for TreeGrid\n * @hidden\n */\nexport class Toolbar {\n    constructor(parent) {\n        Grid.Inject(tool);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    getModuleName() {\n        return 'toolbar';\n    }\n    /**\n     * @hidden\n     */\n    addEventListener() {\n        this.parent.on(events.rowSelected, this.refreshToolbar, this);\n        this.parent.on(events.toolbarClick, this.toolbarClickHandler, this);\n    }\n    /**\n     * @hidden\n     */\n    removeEventListener() {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowSelected, this.refreshToolbar);\n        this.parent.off(events.toolbarClick, this.toolbarClickHandler);\n    }\n    refreshToolbar(args) {\n        let tObj = this.parent;\n        let isParent;\n        if (args.row.rowIndex === 0 || tObj.getSelectedRecords().length > 1) {\n            this.enableItems([tObj.element.id + '_gridcontrol_indent', tObj.element.id + '_gridcontrol_outdent'], false);\n        }\n        else {\n            if (!isNullOrUndefined(tObj.getCurrentViewRecords()[args.row.rowIndex])) {\n                if (!isNullOrUndefined(tObj.getCurrentViewRecords()[args.row.rowIndex]) &&\n                    (tObj.getCurrentViewRecords()[args.row.rowIndex].level >\n                        tObj.getCurrentViewRecords()[args.row.rowIndex - 1].level)) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], false);\n                }\n                else {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level ===\n                    tObj.getCurrentViewRecords()[args.row.rowIndex - 1].level) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level === 0) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_outdent'], false);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level !== 0) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n                }\n            }\n        }\n        if (args.row.rowIndex === 0 && !isNullOrUndefined(args.data.parentItem)) {\n            this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n        }\n    }\n    toolbarClickHandler(args) {\n        let tObj = this.parent;\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.grid.editSettings.mode === 'Batch' &&\n            args.item.id === this.parent.grid.element.id + '_update') {\n            args.cancel = true;\n            this.parent.grid.editModule.saveCell();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_expandall') {\n            this.parent.expandAll();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_collapseall') {\n            this.parent.collapseAll();\n        }\n        if (args.item.id === tObj.grid.element.id + '_indent' && tObj.getSelectedRecords().length) {\n            let record = tObj.getCurrentViewRecords()[tObj.getSelectedRowIndexes()[0] - 1];\n            let dropIndex;\n            if (record.level > tObj.getSelectedRecords()[0].level) {\n                for (let i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                    if (tObj.getCurrentViewRecords()[i].taskData === record.parentItem.taskData) {\n                        dropIndex = i;\n                    }\n                }\n            }\n            else {\n                dropIndex = tObj.getSelectedRowIndexes()[0] - 1;\n            }\n            tObj.reorderRows([tObj.getSelectedRowIndexes()[0]], dropIndex, 'child');\n        }\n        if (args.item.id === tObj.grid.element.id + '_outdent' && tObj.getSelectedRecords().length) {\n            let index = tObj.getSelectedRowIndexes()[0];\n            let dropIndex;\n            let parentItem = tObj.getSelectedRecords()[0].parentItem;\n            for (let i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                if (tObj.getCurrentViewRecords()[i].taskData === parentItem.taskData) {\n                    dropIndex = i;\n                }\n            }\n            tObj.reorderRows([index], dropIndex, 'below');\n        }\n    }\n    /**\n     * Gets the toolbar of the TreeGrid.\n     * @return {Element}\n     * @hidden\n     */\n    getToolbar() {\n        return this.parent.grid.toolbarModule.getToolbar();\n    }\n    /**\n     * Enables or disables ToolBar items.\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @return {void}\n     * @hidden\n     */\n    enableItems(items, isEnable) {\n        this.parent.grid.toolbarModule.enableItems(items, isEnable);\n    }\n    /**\n     * Destroys the ToolBar.\n     * @method destroy\n     * @return {void}\n     */\n    destroy() {\n        this.removeEventListener();\n    }\n}\n","import { Query, DataManager } from '@syncfusion/ej2-data';\nimport { getObject, calculateAggregate, Aggregate as GridAggregate, Grid, appendChildren } from '@syncfusion/ej2-grids';\nimport { findParentRecords } from '../utils';\nimport { isNullOrUndefined, setValue, createElement, extend } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Aggregate module\n * @hidden\n */\nexport class Aggregate {\n    /**\n     * Constructor for Aggregate module\n     */\n    constructor(parent) {\n        Grid.Inject(GridAggregate);\n        this.parent = parent;\n        this.flatChildRecords = [];\n        this.summaryQuery = [];\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    getModuleName() {\n        return 'summary';\n    }\n    removeEventListener() {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n    }\n    /**\n     * Function to calculate summary values\n     *  @hidden\n     */\n    calculateSummaryValue(summaryQuery, filteredData, isSort) {\n        this.summaryQuery = summaryQuery;\n        let parentRecord;\n        let parentDataLength = Object.keys(filteredData).length;\n        let parentData;\n        parentData = [];\n        for (let p = 0, len = parentDataLength; p < len; p++) {\n            let summaryRow = getObject('isSummaryRow', filteredData[p]);\n            if (!summaryRow) {\n                parentData.push(filteredData[p]);\n            }\n        }\n        let parentRecords = findParentRecords(parentData);\n        let flatRecords;\n        flatRecords = parentData.slice();\n        let columnLength = Object.keys(this.parent.columns).length;\n        let summaryLength = Object.keys(this.parent.aggregates).length;\n        let dataLength = Object.keys(parentRecords).length;\n        let childRecordsLength;\n        for (let i = 0, len = dataLength; i < len; i++) {\n            parentRecord = parentRecords[i];\n            childRecordsLength = this.getChildRecordsLength(parentRecord, flatRecords);\n            if (childRecordsLength) {\n                for (let summaryRowIndex = 1, len = summaryLength; summaryRowIndex <= len; summaryRowIndex++) {\n                    let item;\n                    item = {};\n                    for (let columnIndex = 0, len = columnLength; columnIndex < len; columnIndex++) {\n                        let field = isNullOrUndefined(getObject('field', this.parent.columns[columnIndex])) ?\n                            this.parent.columns[columnIndex] : getObject('field', this.parent.columns[columnIndex]);\n                        item[field] = null;\n                    }\n                    if (this.parent.aggregates[summaryRowIndex - 1].showChildSummary) {\n                        item = this.createSummaryItem(item, this.parent.aggregates[summaryRowIndex - 1]);\n                        let idx;\n                        flatRecords.map((e, i) => { if (e.uniqueID === parentRecord.uniqueID) {\n                            idx = i;\n                            return;\n                        } });\n                        let currentIndex = idx + childRecordsLength + summaryRowIndex;\n                        let summaryParent = extend({}, parentRecord);\n                        delete summaryParent.childRecords;\n                        delete summaryParent[this.parent.childMapping];\n                        setValue('parentItem', summaryParent, item);\n                        let level = getObject('level', summaryParent);\n                        setValue('level', level + 1, item);\n                        let index = getObject('index', summaryParent);\n                        setValue('isSummaryRow', true, item);\n                        setValue('parentUniqueID', summaryParent.uniqueID, item);\n                        if (isSort) {\n                            let childRecords = getObject('childRecords', parentRecord);\n                            if (childRecords.length) {\n                                childRecords.push(item);\n                            }\n                        }\n                        flatRecords.splice(currentIndex, 0, item);\n                    }\n                    else {\n                        continue;\n                    }\n                }\n                this.flatChildRecords = [];\n            }\n        }\n        return flatRecords;\n    }\n    getChildRecordsLength(parentData, flatData) {\n        let recordLength = Object.keys(flatData).length;\n        let record;\n        for (let i = 0, len = recordLength; i < len; i++) {\n            record = flatData[i];\n            let parent = isNullOrUndefined(record.parentItem) ? null :\n                flatData.filter((e) => { return e.uniqueID === record.parentItem.uniqueID; })[0];\n            if (parentData === parent) {\n                this.flatChildRecords.push(record);\n                let hasChild = getObject('hasChildRecords', record);\n                if (hasChild) {\n                    this.getChildRecordsLength(record, flatData);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return this.flatChildRecords.length;\n    }\n    createSummaryItem(itemData, summary) {\n        let summaryColumnLength = Object.keys(summary.columns).length;\n        for (let i = 0, len = summaryColumnLength; i < len; i++) {\n            let displayColumn = isNullOrUndefined(summary.columns[i].columnName) ? summary.columns[i].field :\n                summary.columns[i].columnName;\n            let keys = Object.keys(itemData);\n            for (let key of keys) {\n                if (key === displayColumn) {\n                    itemData[key] = this.getSummaryValues(summary.columns[i], this.flatChildRecords);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return itemData;\n    }\n    getSummaryValues(summaryColumn, summaryData) {\n        let qry = new Query();\n        let single;\n        single = {};\n        let helper = {};\n        let type = !isNullOrUndefined(summaryColumn.field) ?\n            this.parent.getColumnByField(summaryColumn.field).type : undefined;\n        summaryColumn.setPropertiesSilent({ format: this.getFormatFromType(summaryColumn.format, type) });\n        summaryColumn.setFormatter(this.parent.grid.locale);\n        let formatFn = summaryColumn.getFormatter() || (() => (a) => a)();\n        summaryColumn.setTemplate(helper);\n        let tempObj = summaryColumn.getTemplate(2);\n        qry.queries = this.summaryQuery;\n        qry.requiresCount();\n        let sumData = new DataManager(summaryData).executeLocal(qry);\n        let types = summaryColumn.type;\n        let summaryKey;\n        types = [summaryColumn.type];\n        for (let i = 0; i < types.length; i++) {\n            summaryKey = types[i];\n            let key = summaryColumn.field + ' - ' + types[i].toLowerCase();\n            let val = types[i] !== 'Custom' ? getObject('aggregates', sumData) :\n                calculateAggregate(types[i], sumData, summaryColumn, this.parent);\n            let disp = summaryColumn.columnName;\n            let value = types[i] !== 'Custom' ? val[key] : val;\n            single[disp] = single[disp] || {};\n            single[disp][key] = value;\n            single[disp][types[i]] = !isNullOrUndefined(val) ? formatFn(value) : ' ';\n        }\n        helper.format = summaryColumn.getFormatter();\n        let cellElement = createElement('td', {\n            className: 'e-summary'\n        });\n        appendChildren(cellElement, tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property));\n        let value = single[summaryColumn.columnName][summaryKey];\n        let summaryValue;\n        if (cellElement.innerHTML.indexOf(value) === -1) {\n            summaryValue = cellElement.innerHTML + value;\n            return summaryValue;\n        }\n        else {\n            return cellElement.innerHTML;\n        }\n    }\n    getFormatFromType(summaryformat, type) {\n        if (isNullOrUndefined(type) || typeof summaryformat !== 'string') {\n            return summaryformat;\n        }\n        let obj;\n        switch (type) {\n            case 'number':\n                obj = { format: summaryformat };\n                break;\n            case 'datetime':\n                obj = { type: 'dateTime', skeleton: summaryformat };\n                break;\n            case 'date':\n                obj = { type: type, skeleton: summaryformat };\n                break;\n        }\n        return obj;\n    }\n    /**\n     * To destroy the Aggregate module\n     * @return {void}\n     * @hidden\n     */\n    destroy() {\n        this.removeEventListener();\n    }\n}\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { Sort as GridSort, Grid, getActualProperties } from '@syncfusion/ej2-grids';\nimport { getParentData } from '../utils';\n/**\n * Internal dataoperations for TreeGrid\n * @hidden\n */\nexport class Sort {\n    constructor(grid) {\n        Grid.Inject(GridSort);\n        this.parent = grid;\n        this.taskIds = [];\n        this.flatSortedData = [];\n        this.storedIndex = -1;\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    getModuleName() {\n        return 'sort';\n    }\n    /**\n     * @hidden\n     */\n    addEventListener() {\n        this.parent.on('updateModel', this.updateModel, this);\n        this.parent.on('createSort', this.createdSortedRecords, this);\n    }\n    /**\n     * @hidden\n     */\n    removeEventListener() {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateModel', this.updateModel);\n        this.parent.off('createSort', this.createdSortedRecords);\n    }\n    createdSortedRecords(sortParams) {\n        let data = sortParams.modifiedData;\n        let srtQry = sortParams.srtQry;\n        this.iterateSort(data, srtQry);\n        this.storedIndex = -1;\n        sortParams.modifiedData = this.flatSortedData;\n        this.flatSortedData = [];\n    }\n    iterateSort(data, srtQry) {\n        for (let d = 0; d < data.length; d++) {\n            if (this.parent.grid.filterSettings.columns.length > 0 || this.parent.grid.searchSettings.key !== '') {\n                if (!isNullOrUndefined(getParentData(this.parent, data[d].uniqueID, true))) {\n                    this.storedIndex++;\n                    this.flatSortedData[this.storedIndex] = data[d];\n                }\n            }\n            else {\n                this.storedIndex++;\n                this.flatSortedData[this.storedIndex] = data[d];\n            }\n            if (data[d].hasChildRecords) {\n                let childSort = (new DataManager(data[d].childRecords).executeLocal(srtQry));\n                this.iterateSort(childSort, srtQry);\n            }\n        }\n    }\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    sortColumn(columnName, direction, isMultiSort) {\n        this.parent.grid.sortColumn(columnName, direction, isMultiSort);\n    }\n    removeSortColumn(field) {\n        this.parent.grid.removeSortColumn(field);\n    }\n    /**\n     * The function used to update sortSettings of TreeGrid.\n     * @return {void}\n     * @hidden\n     */\n    updateModel() {\n        this.parent.setProperties({ sortSettings: getActualProperties(this.parent.grid.sortSettings) }, true);\n    }\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    clearSorting() {\n        this.parent.grid.clearSorting();\n        this.updateModel();\n    }\n    /**\n     * Destroys the Sorting of TreeGrid.\n     * @method destroy\n     * @return {void}\n     */\n    destroy() {\n        this.removeEventListener();\n    }\n}\n","import { Grid, ColumnMenu as GridColumnMenu } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnMenu module\n * @hidden\n */\nexport class ColumnMenu {\n    /**\n     * Constructor for render module\n     */\n    constructor(parent) {\n        Grid.Inject(GridColumnMenu);\n        this.parent = parent;\n    }\n    getColumnMenu() {\n        return this.parent.grid.columnMenuModule.getColumnMenu();\n    }\n    destroy() {\n        //this.parent.grid.columnMenuModule.destroy();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    getModuleName() {\n        return 'columnMenu';\n    }\n}\n","import { Grid, ContextMenu as cmenu } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * ContextMenu Module for TreeGrid\n * @hidden\n */\nexport class ContextMenu {\n    constructor(parent) {\n        Grid.Inject(cmenu);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    addEventListener() {\n        this.parent.on('contextMenuOpen', this.contextMenuOpen, this);\n        this.parent.on('contextMenuClick', this.contextMenuClick, this);\n    }\n    /**\n     * @hidden\n     */\n    removeEventListener() {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('contextMenuOpen', this.contextMenuOpen);\n        this.parent.off('contextMenuClick', this.contextMenuClick);\n    }\n    contextMenuOpen(args) {\n        let addRow = args.element.querySelector('#' + this.parent.element.id + '_gridcontrol_cmenu_AddRow');\n        let editRecord = args.element.querySelector('#' + this.parent.element.id + '_gridcontrol_cmenu_Edit');\n        if (addRow) {\n            if (this.parent.grid.editSettings.allowAdding === false) {\n                addRow.style.display = 'none';\n            }\n            else {\n                addRow.style.display = 'block';\n            }\n        }\n        if ((this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch')\n            && !(isNullOrUndefined(editRecord)) && !(editRecord.classList.contains('e-menu-hide'))) {\n            editRecord.style.display = 'none';\n        }\n    }\n    contextMenuClick(args) {\n        if (args.item.id === 'Above' || args.item.id === 'Below') {\n            this.parent.notify('savePreviousRowPosition', args);\n            this.parent.setProperties({ editSettings: { newRowPosition: args.item.id } }, true);\n            this.parent.addRecord();\n        }\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    getModuleName() {\n        return 'contextMenu';\n    }\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    destroy() {\n        this.removeEventListener();\n    }\n    /**\n     * Gets the context menu element from the TreeGrid.\n     * @return {Element}\n     */\n    getContextMenu() {\n        return this.parent.grid.contextMenuModule.getContextMenu();\n    }\n}\n","import { isNullOrUndefined, extend, setValue, getValue } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, extendArray } from '../utils';\nimport { getUid } from '@syncfusion/ej2-grids';\nimport { updateParentRow, editAction } from './crud-actions';\n/**\n * `BatchEdit` module is used to handle batch editing actions.\n * @hidden\n */\nexport class BatchEdit {\n    constructor(parent) {\n        this.batchChildCount = 0;\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.batchAddedRecords = [];\n        this.batchDeletedRecords = [];\n        this.batchAddRowRecord = [];\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.batchRecords = [];\n        this.currentViewRecords = [];\n        this.isAdd = false;\n        this.addEventListener();\n    }\n    addEventListener() {\n        this.parent.on(events.cellSaved, this.cellSaved, this);\n        this.parent.on(events.batchAdd, this.batchAdd, this);\n        this.parent.on(events.beforeBatchAdd, this.beforeBatchAdd, this);\n        this.parent.on(events.batchSave, this.batchSave, this);\n        this.parent.on(events.beforeBatchDelete, this.beforeBatchDelete, this);\n        this.parent.on(events.beforeBatchSave, this.beforeBatchSave, this);\n        this.parent.on('batchPageAction', this.batchPageAction, this);\n        this.parent.on('batchCancelAction', this.batchCancelAction, this);\n    }\n    /**\n     * @hidden\n     */\n    removeEventListener() {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.cellSaved, this.cellSaved);\n        this.parent.off(events.batchAdd, this.batchAdd);\n        this.parent.off(events.batchSave, this.batchSave);\n        this.parent.off(events.beforeBatchAdd, this.beforeBatchAdd);\n        this.parent.off(events.beforeBatchDelete, this.beforeBatchDelete);\n        this.parent.off(events.beforeBatchSave, this.beforeBatchSave);\n        this.parent.off('batchPageAction', this.batchPageAction);\n        this.parent.off('batchCancelAction', this.batchCancelAction);\n    }\n    /**\n     * To destroy the editModule\n     * @return {void}\n     * @hidden\n     */\n    destroy() {\n        this.removeEventListener();\n    }\n    /**\n     * @hidden\n     */\n    getBatchRecords() {\n        return this.batchRecords;\n    }\n    /**\n     * @hidden\n     */\n    getAddRowIndex() {\n        return this.addRowIndex;\n    }\n    /**\n     * @hidden\n     */\n    getSelectedIndex() {\n        return this.selectedIndex;\n    }\n    /**\n     * @hidden\n     */\n    getBatchChildCount() {\n        return this.batchChildCount;\n    }\n    batchPageAction() {\n        let data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        let primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        let index;\n        if (!isNullOrUndefined(this.batchAddedRecords) && this.batchAddedRecords.length) {\n            for (let i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map((e) => { return e[primaryKey]; }).indexOf(this.batchAddedRecords[i][primaryKey]);\n                data.splice(index, 1);\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.batchDeletedRecords = this.currentViewRecords = [];\n    }\n    cellSaved(args) {\n        if (args.cell.cellIndex === this.parent.treeColumnIndex) {\n            this.parent.renderModule.cellRender({\n                data: args.rowData,\n                cell: args.cell,\n                column: this.parent.grid.getColumnByIndex(args.cell.cellIndex)\n            });\n        }\n        if (this.isAdd && this.parent.editSettings.mode === 'Batch' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n            let data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            let added;\n            let level = 'level';\n            let expanded = 'expanded';\n            let primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            let currentDataIndex;\n            let parentRecord;\n            let indexvalue;\n            let index = 'index';\n            let parentItem = 'parentItem';\n            let uniqueID = 'uniqueID';\n            parentRecord = this.selectedIndex > -1 ? this.batchRecords[this.addRowIndex][parentItem] : null;\n            let idMapping;\n            let parentUniqueID;\n            let parentIdMapping;\n            if (this.newBatchRowAdded) {\n                if (this.batchRecords.length) {\n                    idMapping = this.batchRecords[this.addRowIndex][this.parent.idMapping];\n                    parentIdMapping = this.batchRecords[this.addRowIndex][this.parent.parentIdMapping];\n                    if (this.batchRecords[this.addRowIndex][parentItem]) {\n                        parentUniqueID = this.batchRecords[this.addRowIndex][parentItem][uniqueID];\n                    }\n                }\n                this.batchAddedRecords = extendArray(this.batchAddedRecords);\n                this.batchAddRowRecord = extendArray(this.batchAddRowRecord);\n                this.batchAddRowRecord.push(this.batchRecords[this.addRowIndex]);\n                added = this.parent.grid.getRowsObject()[0].changes;\n                added.uniqueID = getUid(this.parent.element.id + '_data_');\n                setValue('uniqueIDCollection.' + added.uniqueID, added, this.parent);\n                if (!added.hasOwnProperty('level')) {\n                    this.batchIndex = this.selectedIndex === -1 ? 0 : this.batchIndex;\n                    if (this.parent.editSettings.newRowPosition === 'Child') {\n                        added.primaryParent = parentRecord;\n                        if (this.selectedIndex > -1) {\n                            added.parentItem = extend({}, this.batchRecords[this.addRowIndex]);\n                            added.parentUniqueID = added.parentItem.uniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                            added.level = added.parentItem.level + 1;\n                            added.index = this.batchIndex;\n                            let childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            let record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map((e) => { return e[primaryKey]; }).indexOf(record[primaryKey]);\n                            if (this.isSelfReference) {\n                                added[this.parent.parentIdMapping] = idMapping;\n                            }\n                            updateParentRow(primaryKey, added.parentItem, 'add', this.parent, this.isSelfReference, added);\n                        }\n                    }\n                    else if (this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below') {\n                        added.level = this.batchRecords[this.addRowIndex][level];\n                        if (added.level && this.selectedIndex > -1) {\n                            added.parentItem = parentRecord;\n                            added.parentUniqueID = parentUniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                        }\n                        added.index = this.parent.editSettings.newRowPosition === 'Below' ? this.batchIndex : this.batchIndex - 1;\n                        if (this.parent.editSettings.newRowPosition === 'Below' && this.selectedIndex > -1) {\n                            let childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            let record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map((e) => { return e[primaryKey]; }).indexOf(record[primaryKey]);\n                        }\n                        if (this.parent.editSettings.newRowPosition === 'Above' && this.selectedIndex > -1) {\n                            let record = this.batchRecords[this.addRowIndex];\n                            currentDataIndex = data.map((e) => { return e[primaryKey]; }).indexOf(record[primaryKey]);\n                        }\n                        if (this.isSelfReference) {\n                            added[this.parent.parentIdMapping] = parentIdMapping;\n                        }\n                    }\n                    added.index = added.index === -1 ? 0 : added.index;\n                    added.hasChildRecords = false;\n                    added.childRecords = [];\n                    this.batchRecords.splice(added.index, 0, added);\n                    this.currentViewRecords.splice(added.index, 0, added);\n                    if (currentDataIndex) {\n                        indexvalue = currentDataIndex;\n                    }\n                    else {\n                        indexvalue = added.index;\n                    }\n                    if (this.parent.editSettings.newRowPosition !== 'Above') {\n                        indexvalue = added.index === 0 ? indexvalue : indexvalue + 1;\n                    }\n                    data.splice(indexvalue, 0, added);\n                    this.batchAddedRecords.push(added);\n                }\n                this.parent.grid.getRowsObject()[0].data = added;\n                this.newBatchRowAdded = false;\n            }\n        }\n    }\n    beforeBatchAdd(e) {\n        this.selectedIndex = this.parent.grid.selectedRowIndex;\n        this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n        this.addRowRecord = this.parent.getSelectedRecords()[0];\n    }\n    batchAdd(e) {\n        if (this.parent.editSettings.newRowPosition !== 'Bottom') {\n            this.isAdd = true;\n            this.newBatchRowAdded = true;\n            let actualIndex = 0;\n            if (!this.batchRecords.length) {\n                this.batchAddedRecords = [];\n                this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n                this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top') {\n                let records = this.parent.grid.getCurrentViewRecords();\n                if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                    records = this.batchRecords;\n                }\n                this.updateChildCount(records);\n                this.parent.notify(events.beginAdd, {});\n                this.batchChildCount = 0;\n            }\n            this.updateRowIndex();\n            // update focus module, need to refix this once grid source modified.\n            let focusModule = getValue('focusModule', this.parent.grid);\n            let table = this.parent.getContentTable();\n            if (this.parent.getBatchChanges()[this.deletedRecords].length && this.parent.editSettings.newRowPosition === 'Above') {\n                actualIndex = e.row.rowIndex;\n                focusModule.getContent().matrix.matrix = this.matrix;\n            }\n            else {\n                actualIndex = table.getElementsByClassName('e-batchrow')[0].rowIndex;\n                if (this.parent.frozenRows || this.parent.frozenColumns) {\n                    actualIndex = this.batchIndex;\n                }\n            }\n            focusModule.getContent().matrix.current = [actualIndex, focusModule.getContent().matrix.current[1]];\n        }\n    }\n    beforeBatchDelete(e) {\n        if (!this.batchRecords.length) {\n            this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        }\n        let focusModule = getValue('focusModule', this.parent.grid);\n        this.matrix = focusModule.getContent().matrix.matrix;\n        this.parent = this.parent;\n        let row = [];\n        let records;\n        let data;\n        let primarykey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        data = this.parent.grid.getSelectedRecords()[this.parent.grid.getSelectedRecords().length - 1];\n        let childs = findChildrenRecords(data);\n        if (childs.length) {\n            for (let i = 0; i < childs.length; i++) {\n                let index = this.parent.grid.getRowIndexByPrimaryKey(childs[i][primarykey]);\n                row.push(this.parent.grid.getRows()[index]);\n            }\n        }\n        if (!isNullOrUndefined(data.parentItem)) {\n            let parentItem = getParentData(this.parent, data.parentItem.uniqueID);\n            if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                let childIndex = parentItem.childRecords.indexOf(data);\n                parentItem.childRecords.splice(childIndex, 1);\n            }\n            this.batchDeletedRecords = extendArray(this.batchDeletedRecords);\n            this.batchDeletedRecords.push(data);\n        }\n        childs.push(data);\n        records = childs;\n        for (let i = 0; i < records.length; i++) {\n            let indexvalue = this.batchRecords.map((e) => { return e[primarykey]; }).indexOf(records[i][primarykey]);\n            if (indexvalue !== -1) {\n                this.batchRecords.splice(indexvalue, 1);\n            }\n        }\n        for (let i = 0; i < row.length; i++) {\n            if (!isNullOrUndefined(row[i])) {\n                this.parent.grid.selectionModule.selectedRecords.push(row[i]);\n            }\n        }\n    }\n    updateRowIndex() {\n        let rows = this.parent.grid.getDataRows();\n        for (let i = 0; i < rows.length; i++) {\n            rows[i].setAttribute('aria-rowindex', i.toString());\n        }\n    }\n    updateChildCount(records) {\n        let primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        let addedRecords = 'addedRecords';\n        let deletedRecords = 'deletedRecords';\n        let parentItem = this.parent.editSettings.newRowPosition === 'Child' ? 'primaryParent' : 'parentItem';\n        for (let i = 1; i < this.parent.getBatchChanges()[addedRecords].length; i++) {\n            if (!isNullOrUndefined(this.parent.getBatchChanges()[addedRecords][i][parentItem])) {\n                if (this.parent.getBatchChanges()[addedRecords][i][parentItem][primaryKey] === records[this.addRowIndex][primaryKey]) {\n                    this.batchChildCount = this.batchChildCount + 1;\n                }\n            }\n        }\n    }\n    beforeBatchSave(e) {\n        let changeRecords = 'changedRecords';\n        let deleterecords = 'deletedRecords';\n        let changedRecords = e.batchChanges[changeRecords];\n        if (e.batchChanges[changeRecords].length) {\n            let columnName;\n            for (let i = 0; i < changedRecords.length; i++) {\n                editAction({ value: changedRecords[i], action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName);\n            }\n        }\n        if (e.batchChanges[deleterecords].length) {\n            let deletedRecords = e.batchChanges[deleterecords];\n            let record = deletedRecords;\n            for (let i = 0; i < record.length; i++) {\n                this.deleteUniqueID(record[i].uniqueID);\n                let childs = findChildrenRecords(record[i]);\n                for (let c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                e.batchChanges[deleterecords] = [...e.batchChanges[deleterecords], ...childs];\n            }\n        }\n        this.isAdd = false;\n    }\n    deleteUniqueID(value) {\n        let idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        let id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    }\n    batchCancelAction() {\n        let targetElement = 'targetElement';\n        let index;\n        let parentItem = 'parentItem';\n        let indexvalue = 'index';\n        let currentViewRecords = this.parent.grid.getCurrentViewRecords();\n        let childRecords = 'childRecords';\n        let data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        let primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        if (!isNullOrUndefined(this.parent[targetElement])) {\n            let row = this.parent[targetElement].closest('tr');\n            this.parent.collapseRow(row);\n            this.parent[targetElement] = null;\n        }\n        if (!isNullOrUndefined(this.batchAddedRecords)) {\n            for (let i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map((e) => { return e[primaryKey]; }).indexOf(this.batchAddedRecords[i][primaryKey]);\n                data.splice(index, 1);\n                if (this.parent.editSettings.newRowPosition === 'Child') {\n                    index = currentViewRecords.map((e) => { return e[primaryKey]; })\n                        .indexOf(this.batchAddedRecords[i][parentItem][primaryKey]);\n                    let children = currentViewRecords[index][childRecords];\n                    for (let j = 0; j < children.length; j++) {\n                        if (children[j][primaryKey] === this.batchAddedRecords[i][primaryKey]) {\n                            currentViewRecords[index][childRecords].splice(j, 1);\n                        }\n                    }\n                }\n            }\n        }\n        if (!isNullOrUndefined(this.batchDeletedRecords)) {\n            for (let i = 0; i < this.batchDeletedRecords.length; i++) {\n                if (!isNullOrUndefined(this.batchDeletedRecords[i][parentItem])) {\n                    index = currentViewRecords.map((e) => { return e[primaryKey]; })\n                        .indexOf(this.batchDeletedRecords[i][parentItem][primaryKey]);\n                    let positionIndex = this.batchDeletedRecords[i][indexvalue] === 0 ? this.batchDeletedRecords[i][indexvalue] :\n                        this.batchDeletedRecords[i][indexvalue] - 1;\n                    currentViewRecords[index][childRecords].splice(positionIndex, 0, this.batchDeletedRecords[i]);\n                }\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.currentViewRecords = [];\n        this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchIndex = 0;\n        this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchDeletedRecords = [];\n        this.parent.refresh();\n    }\n    batchSave(args) {\n        if (this.parent.editSettings.mode === 'Batch') {\n            let i;\n            let batchChanges = this.parent.getBatchChanges();\n            let deletedRecords = 'deletedRecords';\n            let addedRecords = 'addedRecords';\n            let index = 'index';\n            let uniqueID = 'uniqueID';\n            let data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            let currentViewRecords = this.parent.grid.getCurrentViewRecords();\n            let primarykey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            let level = 'level';\n            let addRecords = batchChanges[addedRecords];\n            let parentItem = 'parentItem';\n            let selectedIndex;\n            let addRowIndex;\n            let columnName;\n            let addRowRecord;\n            let childRecords = 'childRecords';\n            if (addRecords.length > 1 && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                addRecords.reverse();\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Bottom') {\n                data.splice(data.length - addRecords.length, addRecords.length);\n                if (!this.parent.allowPaging) {\n                    if (currentViewRecords.length > addRecords.length) {\n                        currentViewRecords.splice(currentViewRecords.length - addRecords.length, addRecords.length);\n                    }\n                }\n                else {\n                    let totalRecords = extendArray(data);\n                    let startIndex = totalRecords.map((e) => { return e[primarykey]; })\n                        .indexOf(currentViewRecords[0][primarykey]);\n                    let endIndex = startIndex + this.parent.grid.pageSettings.pageSize;\n                    currentViewRecords = totalRecords.splice(startIndex, endIndex);\n                }\n            }\n            for (i = 0; i < addRecords.length; i++) {\n                let taskData = extend({}, addRecords[i]);\n                delete taskData.parentItem;\n                delete taskData.uniqueID;\n                delete taskData.index;\n                delete taskData.level;\n                delete taskData.hasChildRecords;\n                delete taskData.childRecords;\n                delete taskData.parentUniqueID;\n                if (!isNullOrUndefined(taskData.primaryParent)) {\n                    delete taskData.primaryParent;\n                }\n                addRecords[i].taskData = taskData;\n                addRowRecord = this.batchAddRowRecord[i];\n                if (isNullOrUndefined(addRowRecord)) {\n                    addRowRecord = this.batchAddRowRecord[i - 1];\n                }\n                if (this.isSelfReference) {\n                    if (!isNullOrUndefined(addRecords[i].parentItem)) {\n                        updateParentRow(primarykey, addRecords[i].parentItem, 'add', this.parent, this.isSelfReference, addRecords[i]);\n                    }\n                }\n                if (!isNullOrUndefined(addRowRecord)) {\n                    addRowIndex = addRowRecord.index;\n                }\n                if (this.parent.editSettings.newRowPosition !== 'Top' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    if (isNullOrUndefined(addRecords[i].parentItem) && this.selectedIndex === -1) {\n                        selectedIndex = -1;\n                        addRowRecord = null;\n                    }\n                }\n                editAction({ value: addRecords[i], action: 'add' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                selectedIndex = null;\n                if (this.parent.editSettings.newRowPosition === 'Child' && !isNullOrUndefined(addRecords[i][parentItem])) {\n                    let indexValue = currentViewRecords.map((e) => { return e[primarykey]; })\n                        .indexOf(addRecords[i][parentItem][primarykey]);\n                    let children = currentViewRecords[indexValue][childRecords];\n                    for (let j = 0; j < children.length; j++) {\n                        if (children[j][primarykey] === addRecords[i][primarykey]) {\n                            currentViewRecords[indexValue][childRecords].splice(j, 1);\n                        }\n                    }\n                }\n            }\n            if (batchChanges[deletedRecords].length) {\n                for (i = 0; i < batchChanges[deletedRecords].length; i++) {\n                    editAction({ value: batchChanges[deletedRecords][i], action: 'delete' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                }\n            }\n            this.parent.parentData = [];\n            for (let i = 0; i < data.length; i++) {\n                data[i][index] = i;\n                setValue('uniqueIDCollection.' + data[i][uniqueID] + '.index', i, this.parent);\n                if (!data[i][level]) {\n                    this.parent.parentData.push(data[i]);\n                }\n            }\n        }\n        this.batchAddRowRecord = this.batchAddedRecords = this.batchRecords = this.batchDeletedRecords = this.currentViewRecords = [];\n    }\n}\n","import { Grid, Edit as GridEdit, getUid, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, extend, setValue, removeClass, addClass, getValue, isBlazor } from '@syncfusion/ej2-base';\nimport { updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { DataManager, RemoteSaveAdaptor } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, isRemoteData } from '../utils';\nimport { editAction, updateParentRow } from './crud-actions';\nimport { BatchEdit } from './batch-edit';\n/**\n * TreeGrid Edit Module\n * The `Edit` module is used to handle editing actions.\n */\nexport class Edit {\n    /**\n     * Constructor for Edit module\n     */\n    constructor(parent) {\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        Grid.Inject(GridEdit);\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.previousNewRowPosition = null;\n        this.internalProperties = {};\n        this.batchEditModule = new BatchEdit(this.parent);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    getModuleName() {\n        return 'edit';\n    }\n    /**\n     * @hidden\n     */\n    addEventListener() {\n        this.parent.on(events.crudAction, this.crudAction, this);\n        this.parent.on(events.beginEdit, this.beginEdit, this);\n        this.parent.on(events.beginAdd, this.beginAdd, this);\n        this.parent.on(events.recordDoubleClick, this.recordDoubleClick, this);\n        this.parent.on(events.cellSave, this.cellSave, this);\n        this.parent.on(events.batchCancel, this.batchCancel, this);\n        this.parent.grid.on(events.keyPressed, this.keyPressed, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n        this.parent.on(events.cellEdit, this.cellEdit, this);\n        this.parent.on('actionBegin', this.editActionEvents, this);\n        this.parent.on('actionComplete', this.editActionEvents, this);\n        this.parent.grid.on(events.doubleTap, this.recordDoubleClick, this);\n        this.parent.grid.on('dblclick', this.gridDblClick, this);\n        this.parent.on('savePreviousRowPosition', this.savePreviousRowPosition, this);\n        // this.parent.on(events.beforeDataBound, this.beforeDataBound, this);\n        this.parent.grid.on(events.beforeStartEdit, this.beforeStartEdit, this);\n        this.parent.grid.on(events.beforeBatchCancel, this.beforeBatchCancel, this);\n    }\n    gridDblClick(e) {\n        this.doubleClickTarget = e.target;\n    }\n    beforeStartEdit(args) {\n        this.parent.trigger(events.actionBegin, args);\n    }\n    beforeBatchCancel(args) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            this.parent.trigger(events.actionComplete, args);\n        }\n    }\n    /**\n     * @hidden\n     */\n    removeEventListener() {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.crudAction, this.crudAction);\n        this.parent.off(events.beginEdit, this.beginEdit);\n        this.parent.off(events.beginAdd, this.beginAdd);\n        this.parent.off(events.recordDoubleClick, this.recordDoubleClick);\n        this.parent.off(events.batchCancel, this.batchCancel);\n        this.parent.grid.off(events.keyPressed, this.keyPressed);\n        this.parent.grid.off('content-ready', this.contentready);\n        this.parent.off(events.cellEdit, this.cellEdit);\n        this.parent.off('actionBegin', this.editActionEvents);\n        this.parent.off('actionComplete', this.editActionEvents);\n        this.parent.grid.off(events.doubleTap, this.recordDoubleClick);\n        this.parent.off('savePreviousRowPosition', this.savePreviousRowPosition);\n        this.parent.grid.off(events.beforeStartEdit, this.beforeStartEdit);\n        this.parent.grid.off(events.beforeBatchCancel, this.beforeBatchCancel);\n        this.parent.grid.off('dblclick', this.gridDblClick);\n        //this.parent.grid.off('click', this.gridSingleClick);\n    }\n    /**\n     * To destroy the editModule\n     * @return {void}\n     * @hidden\n     */\n    destroy() {\n        this.removeEventListener();\n    }\n    /**\n     * @hidden\n     */\n    applyFormValidation(cols) {\n        this.parent.grid.editModule.applyFormValidation(cols);\n    }\n    editActionEvents(args) {\n        let eventArgs = getObject('editAction', args);\n        let eventName = getObject('name', eventArgs);\n        let treeObj = this.parent;\n        let adaptor = treeObj.dataSource.adaptor;\n        if ((isRemoteData(treeObj) || adaptor instanceof RemoteSaveAdaptor) &&\n            (eventArgs.requestType === 'save' && eventArgs.action === 'add') &&\n            (treeObj.editSettings.newRowPosition === 'Child' || treeObj.editSettings.newRowPosition === 'Below'\n                || treeObj.editSettings.newRowPosition === 'Above')) {\n            if (eventName === 'actionBegin') {\n                let rowIndex = isNullOrUndefined(eventArgs.row) || !Object.keys(eventArgs.row).length ? this.selectedIndex :\n                    eventArgs.row.rowIndex - 1;\n                let keyData = (!isNullOrUndefined(rowIndex) && rowIndex !== -1) ?\n                    treeObj.getCurrentViewRecords()[rowIndex][treeObj.getPrimaryKeyFieldNames()[0]] : -1;\n                treeObj.grid.query.addParams('relationalKey', keyData);\n            }\n            else if (eventName === 'actionComplete') {\n                let paramsLength = treeObj.grid.query.params.length;\n                for (let i = 0; i < paramsLength; i++) {\n                    if (treeObj.grid.query.params[i].key === 'relationalKey') {\n                        treeObj.grid.query.params.splice(i);\n                    }\n                }\n            }\n        }\n        if (this.parent.editSettings.mode === 'Batch' && eventArgs.requestType === 'paging') {\n            this.parent.notify('batchPageAction', {});\n        }\n    }\n    recordDoubleClick(args) {\n        let target = args.target;\n        if (isNullOrUndefined(target.closest('td.e-rowcell'))) {\n            return;\n        }\n        let column = this.parent.grid.getColumnByIndex(+target.closest('td.e-rowcell').getAttribute('aria-colindex'));\n        if (this.parent.editSettings.mode === 'Cell' && !this.isOnBatch && column && !column.isPrimaryKey &&\n            column.allowEditing && !(target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && this.parent.editSettings.allowEditOnDblClick) {\n            this.isOnBatch = true;\n            this.parent.grid.setProperties({ selectedRowIndex: args.rowIndex }, true);\n            this.updateGridEditMode('Batch');\n        }\n    }\n    updateGridEditMode(mode) {\n        this.parent.grid.setProperties({ editSettings: { mode: mode } }, true);\n        let updateMethod = getObject('updateEditObj', this.parent.grid.editModule);\n        updateMethod.apply(this.parent.grid.editModule);\n        this.parent.grid.isEdit = false;\n    }\n    keyPressed(args) {\n        if (this.isOnBatch || (this.parent.editSettings.mode === 'Cell' && isBlazor() && this.parent.isServerRendered)) {\n            this.keyPress = args.action;\n        }\n        if (args.action === 'f2') {\n            this.recordDoubleClick(args);\n        }\n    }\n    deleteUniqueID(value) {\n        let idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        let id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    }\n    cellEdit(args) {\n        let promise = 'promise';\n        let prom = args[promise];\n        delete args[promise];\n        if (this.keyPress !== 'enter') {\n            this.parent.trigger(events.cellEdit, args, (celleditArgs) => {\n                if (!celleditArgs.cancel && this.parent.editSettings.mode === 'Cell') {\n                    this.enableToolbarItems('edit');\n                }\n                else if (celleditArgs.cancel && this.parent.editSettings.mode === 'Cell') {\n                    this.isOnBatch = false;\n                    this.updateGridEditMode('Normal');\n                }\n                if (!isNullOrUndefined(prom)) {\n                    prom.resolve(celleditArgs);\n                }\n            });\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell') {\n            if (this.keyPress === 'tab' || this.keyPress === 'shiftTab') {\n                this.keyPress = null;\n            }\n            else if (this.keyPress === 'enter') {\n                args.cancel = true;\n                this.keyPress = null;\n            }\n        }\n        // if (this.isAdd && this.parent.editSettings.mode === 'Batch' && !args.cell.parentElement.classList.contains('e-insertedrow')) {\n        //   this.isAdd = false;\n        // }\n    }\n    enableToolbarItems(request) {\n        if (!isNullOrUndefined(this.parent.grid.toolbarModule)) {\n            let toolbarID = this.parent.element.id + '_gridcontrol_';\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'add', toolbarID + 'edit', toolbarID + 'delete'], request === 'save');\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'update', toolbarID + 'cancel'], request === 'edit');\n        }\n    }\n    batchCancel(e) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            let cellDetails = getValue('editModule.cellDetails', this.parent.grid.editModule);\n            let selectRowIndex = cellDetails.rowIndex;\n            this.parent.renderModule.cellRender({\n                data: cellDetails.rowData,\n                cell: this.parent.getRows()[selectRowIndex].cells[this.parent.treeColumnIndex],\n                column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n            });\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        if (this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify('batchCancelAction', {});\n        }\n    }\n    cellSave(args) {\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.element.querySelector('form')) {\n            args.cancel = true;\n            let editModule = 'editModule';\n            setValue('isEdit', false, this.parent.grid);\n            setValue('isEditCollapse', true, this.parent);\n            args.rowData[args.columnName] = args.value;\n            let row;\n            if (isNullOrUndefined(args.cell)) {\n                row = this.parent.grid.editModule[editModule].form.parentElement.parentNode;\n            }\n            else {\n                row = args.cell.parentNode;\n            }\n            let rowIndex;\n            let primaryKeys = this.parent.getPrimaryKeyFieldNames();\n            if (isNullOrUndefined(row)) {\n                this.parent.grid.getCurrentViewRecords().filter((e, i) => {\n                    if (e[primaryKeys[0]] === args.rowData[primaryKeys[0]]) {\n                        rowIndex = i;\n                        return;\n                    }\n                });\n            }\n            else {\n                rowIndex = this.parent.getRows().indexOf(row);\n            }\n            let arg = {};\n            extend(arg, args);\n            arg.cancel = false;\n            arg.type = 'save';\n            row = this.parent.grid.getRows()[row.rowIndex];\n            this.parent.trigger(events.actionBegin, arg);\n            if (!arg.cancel) {\n                this.blazorTemplates(args);\n                this.updateCell(args, rowIndex);\n                if (this.parent.grid.aggregateModule) {\n                    this.parent.grid.aggregateModule.refresh(args.rowData);\n                }\n                this.parent.grid.editModule.formObj.destroy();\n                if (this.keyPress !== 'tab' && this.keyPress !== 'shiftTab') {\n                    this.updateGridEditMode('Normal');\n                    this.isOnBatch = false;\n                }\n                this.enableToolbarItems('save');\n                removeClass([row], ['e-editedrow', 'e-batchrow']);\n                removeClass(row.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n                this.parent.grid.focusModule.restoreFocus();\n                editAction({ value: args.rowData, action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, args.columnName);\n                let saveArgs = {\n                    type: 'save', column: this.parent.getColumnByField(args.columnName), data: args.rowData,\n                    previousData: args.previousValue, row: row, target: args.cell\n                };\n                this.parent.trigger(events.actionComplete, saveArgs);\n            }\n            else {\n                this.parent.grid.isEdit = true;\n            }\n        }\n    }\n    blazorTemplates(args) {\n        if (isBlazor() && this.parent.isServerRendered) {\n            let cols = this.parent.grid.getColumns();\n            let colModel = 'columnModel';\n            let columnModel = this.parent.grid[colModel];\n            let str = 'isStringTemplate';\n            for (let i = 0; i < cols.length; i++) {\n                if (columnModel[i].template) {\n                    let templateID = this.parent.grid.element.id + cols[i].uid;\n                    columnModel[i].getColumnTemplate()(extend({ 'index': [i] }, args.rowData), this.parent.grid, 'template', templateID, this.parent.grid[str], null);\n                }\n                if (cols[i].editTemplate) {\n                    updateBlazorTemplate(this.parent.grid.element.id + cols[i].uid + 'editTemplate', 'EditTemplate', cols[i]);\n                }\n                if (cols[i].template) {\n                    updateBlazorTemplate(this.parent.grid.element.id + cols[i].uid, 'Template', cols[i], false);\n                }\n            }\n        }\n    }\n    updateCell(args, rowIndex) {\n        this.parent.grid.editModule.updateRow(rowIndex, args.rowData);\n        this.parent.grid.getRowsObject()[rowIndex].data = args.rowData;\n    }\n    crudAction(details, columnName) {\n        editAction(details, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName, this.addRowRecord);\n        this.parent.parentData = [];\n        let data = this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource;\n        for (let i = 0; i < data.length; i++) {\n            data[i].index = i;\n            let key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            if (details.value[key] === data[i][key]) {\n                if (details.action === 'add') {\n                    data[i].level = this.internalProperties.level;\n                    data[i].taskData = this.internalProperties.taskData;\n                    data[i].uniqueID = this.internalProperties.uniqueID;\n                    if (!isNullOrUndefined(this.internalProperties.parentItem)) {\n                        data[i].parentItem = this.internalProperties.parentItem;\n                        data[i].parentUniqueID = this.internalProperties.parentUniqueID;\n                    }\n                    data[i].childRecords = this.internalProperties.childRecords;\n                }\n            }\n            setValue('uniqueIDCollection.' + data[i].uniqueID + '.index', i, this.parent);\n            if (!data[i].level) {\n                this.parent.parentData.push(data[i]);\n            }\n        }\n        if (details.action === 'add' && this.previousNewRowPosition != null) {\n            this.parent.setProperties({ editSettings: { newRowPosition: this.previousNewRowPosition } }, true);\n            this.previousNewRowPosition = null;\n        }\n    }\n    updateIndex(data, rows, records) {\n        for (let j = 0; j < this.parent.getDataRows().length; j++) {\n            let data1 = records[j];\n            let index = getValue('uniqueIDCollection.' + data1.uniqueID + '.index', this.parent);\n            data1.index = index;\n            if (!isNullOrUndefined(data1.parentItem)) {\n                let parentIndex = getValue('uniqueIDCollection.' + data1.parentItem.uniqueID + '.index', this.parent);\n                data1.parentItem.index = parentIndex;\n            }\n        }\n        let count = -1;\n        for (let k = 0; k < this.parent.getRows().length; k++) {\n            if (!rows[k].classList.contains('e-detailrow')) {\n                count++;\n            }\n            let data2 = records[count];\n            let index = data2.index;\n            let level = data2.level;\n            let row = rows[k];\n            if (!isNullOrUndefined(data2.parentItem)) {\n                index = getValue('uniqueIDCollection.' + data2.parentItem.uniqueID + '.index', this.parent);\n            }\n            let treecell = row.cells[this.parent.treeColumnIndex];\n            for (let l = 0; l < treecell.classList.length; l++) {\n                let value = treecell.classList[l];\n                let remove = /e-gridrowindex/i;\n                let removed = /e-griddetailrowindex/i;\n                let result = value.match(remove);\n                let results = value.match(removed);\n                if (result != null) {\n                    removeClass([treecell], value);\n                }\n                if (results != null) {\n                    removeClass([treecell], value);\n                }\n            }\n            if (!rows[k].classList.contains('e-detailrow')) {\n                addClass([treecell], 'e-gridrowindex' + index + 'level' + level);\n            }\n            else {\n                addClass([treecell], 'e-griddetailrowindex' + index + 'level' + level);\n            }\n        }\n    }\n    beginAdd(args) {\n        let position;\n        let index = this.addRowIndex;\n        let records = this.parent.grid.getCurrentViewRecords();\n        if (this.parent.editSettings.mode === 'Batch') {\n            index = this.batchEditModule.getAddRowIndex();\n            this.selectedIndex = this.batchEditModule.getSelectedIndex();\n            if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                records = this.batchEditModule.getBatchRecords();\n            }\n        }\n        let rows = this.parent.grid.getDataRows();\n        let movableRows;\n        if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n            movableRows = this.parent.getMovableDataRows();\n        }\n        if (this.parent.editSettings.mode !== 'Dialog') {\n            if (this.parent.editSettings.newRowPosition === 'Above') {\n                position = 'before';\n            }\n            else if ((this.parent.editSettings.newRowPosition === 'Below' ||\n                this.parent.editSettings.newRowPosition === 'Child')\n                && this.selectedIndex > -1) {\n                position = 'after';\n                if (records[index].expanded) {\n                    if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                        || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                        index += findChildrenRecords(records[index]).length;\n                        if (this.parent.editSettings.newRowPosition !== 'Child') {\n                            let batchChildCount = this.batchEditModule.getBatchChildCount();\n                            index = index + batchChildCount;\n                        }\n                    }\n                    else {\n                        index += findChildrenRecords(records[index]).length;\n                    }\n                }\n            }\n            if (this.selectedIndex > -1 && (index || (this.parent.editSettings.newRowPosition === 'Child'\n                || this.parent.editSettings.newRowPosition === 'Below'))) {\n                if (index >= rows.length) {\n                    index = rows.length - 2;\n                }\n                let focussedElement = document.activeElement;\n                rows[index + 1][position](rows[0]);\n                setValue('batchIndex', index + 1, this.batchEditModule);\n                if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                    movableRows[index + 1][position](movableRows[0]);\n                    setValue('batchIndex', index + 1, this.batchEditModule);\n                }\n                if (this.parent.editSettings.mode === 'Row' || this.parent.editSettings.mode === 'Cell') {\n                    let errors = this.parent.grid.getContentTable().querySelectorAll('.e-griderror');\n                    for (let i = 0; i < errors.length; i++) {\n                        errors[i].remove();\n                    }\n                    setValue('errorRules', [], this.parent.grid.editModule.formObj);\n                }\n                focussedElement.focus();\n            }\n        }\n    }\n    // private beforeDataBound(args: BeforeDataBoundArgs): void {\n    //   if (this.parent.grid.isEdit && this.parent.dataSource instanceof DataManager &&\n    //         this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor) {\n    //     let action: string = getValue('action', args);\n    //     let data: Object = getValue('data', args);\n    //     if (action === 'edit' && !isNullOrUndefined(this.editedData)) {\n    //       data = extend(this.editedData, data);\n    //       this.editedData = null;\n    //     }\n    //     if (!isNullOrUndefined(this.addedData)) {\n    //       let addedData: Object = args.result[args.result.length - 1];\n    //       addedData = extend(this.addedData, addedData);\n    //       this.addedData = null;\n    //       args.result.splice(this.addedIndex, 0, addedData);\n    //       args.result.splice(args.result.length, 1);\n    //     }\n    //   }\n    // }\n    beginEdit(args) {\n        if (args.requestType === 'refresh' && this.isOnBatch) {\n            args.cancel = true;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell' && args.requestType === 'beginEdit') {\n            args.cancel = true;\n            return;\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-frame'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (args.requestType === 'delete') {\n            let data = args.data;\n            for (let i = 0; i < data.length; i++) {\n                this.deleteUniqueID(data[i].uniqueID);\n                let childs = findChildrenRecords(data[i]);\n                for (let c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                args.data = [...data, ...childs];\n            }\n        }\n        if (args.requestType === 'add') {\n            this.selectedIndex = this.parent.grid.selectedRowIndex;\n            this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n            this.addRowRecord = this.parent.getSelectedRecords()[0];\n        }\n        args = this.beginAddEdit(args);\n        // if (args.requestType === 'save' &&\n        //    ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor))) {\n        //      if (args.action === 'edit') {\n        //           this.editedData = args.data;\n        //      } else if (args.action === 'add') {\n        //           this.addedData = value;\n        //      }\n        // }\n    }\n    savePreviousRowPosition(args) {\n        if (this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n    }\n    beginAddEdit(args) {\n        let value = args.data;\n        if (args.action === 'add') {\n            let key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            let position = null;\n            value.taskData = isNullOrUndefined(value.taskData) ? extend({}, args.data) : value.taskData;\n            // let currentData: ITreeData[] = this.batchRecords.length ? this.batchRecords :\n            //            <ITreeData[]>this.parent.grid.getCurrentViewRecords();\n            let currentData = this.parent.grid.getCurrentViewRecords();\n            let index = this.addRowIndex;\n            value.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + value.uniqueID, value, this.parent);\n            let level;\n            let dataIndex;\n            let idMapping;\n            let parentUniqueID;\n            let parentItem;\n            let parentIdMapping;\n            if (currentData.length) {\n                level = currentData[this.addRowIndex].level;\n                dataIndex = currentData[this.addRowIndex].index;\n                idMapping = currentData[this.addRowIndex][this.parent.idMapping];\n                parentIdMapping = currentData[this.addRowIndex][this.parent.parentIdMapping];\n                if (currentData[this.addRowIndex].parentItem) {\n                    parentUniqueID = currentData[this.addRowIndex].parentItem.uniqueID;\n                }\n                parentItem = currentData[this.addRowIndex].parentItem;\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top' && currentData.length) {\n                if (this.parent.editSettings.newRowPosition === 'Above') {\n                    position = 'before';\n                    index = currentData[this.addRowIndex].index;\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Below') {\n                    position = 'after';\n                    let childRecordCount = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    let currentDataIndex = currentData[this.addRowIndex].index;\n                    index = (childRecordCount > 0) ? (currentDataIndex + childRecordCount) : (currentDataIndex);\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Child') {\n                    position = 'after';\n                    if (this.selectedIndex > -1) {\n                        value.parentItem = extend({}, currentData[this.addRowIndex]);\n                        value.parentUniqueID = value.parentItem.uniqueID;\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    let childRecordCount1 = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    let currentDataIndex1 = currentData[this.addRowIndex].index;\n                    index = (childRecordCount1 > 0) ? (currentDataIndex1 + childRecordCount1) : (currentDataIndex1);\n                    value.level = level + 1;\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = idMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below') {\n                    if (this.selectedIndex > -1 && level) {\n                        value.parentUniqueID = parentUniqueID;\n                        value.parentItem = extend({}, parentItem);\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    value.level = level;\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = parentIdMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (position != null && this.selectedIndex > -1) {\n                    args.index = position === 'before' ? index : index + 1;\n                }\n                if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    let dataSource = (this.parent.grid.dataSource instanceof DataManager ?\n                        this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n                    args.index = dataSource.length;\n                }\n            }\n            if (isNullOrUndefined(value.level)) {\n                value.level = level;\n            }\n            // this.addedIndex = args.index;\n            value.hasChildRecords = false;\n            value.childRecords = [];\n            value.index = 0;\n        }\n        if (args.action === 'add') {\n            this.internalProperties = { level: value.level, parentItem: value.parentItem, uniqueID: value.uniqueID,\n                taskData: value.taskData, parentUniqueID: isNullOrUndefined(value.parentItem) ? undefined : value.parentItem.uniqueID,\n                childRecords: value.childRecords };\n        }\n        if (args.requestType === 'delete') {\n            let deletedValues = args.data;\n            for (let i = 0; i < deletedValues.length; i++) {\n                if (deletedValues[i].parentItem) {\n                    let parentItem = getParentData(this.parent, deletedValues[i].parentItem.uniqueID);\n                    if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                        let childIndex = parentItem.childRecords.indexOf(deletedValues[i]);\n                        parentItem.childRecords.splice(childIndex, 1);\n                    }\n                }\n            }\n        }\n        return args;\n    }\n    /**\n     * If the data,index and position given, Adds the record to treegrid rows otherwise it will create edit form.\n     * @return {void}\n     */\n    addRecord(data, index, position) {\n        this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        if (data) {\n            if (index > -1) {\n                this.selectedIndex = index;\n                this.addRowIndex = index;\n            }\n            else {\n                this.selectedIndex = this.parent.selectedRowIndex;\n                this.addRowIndex = this.parent.selectedRowIndex;\n            }\n            if (position) {\n                this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n            }\n            this.parent.grid.editModule.addRecord(data, index);\n        }\n        else {\n            this.parent.grid.editModule.addRecord(data, index);\n        }\n    }\n    /**\n     * Checks the status of validation at the time of editing. If validation is passed, it returns true.\n     * @return {boolean}\n     */\n    editFormValidate() {\n        return this.parent.grid.editModule.editFormValidate();\n    }\n    /**\n     * @hidden\n     */\n    destroyForm() {\n        this.parent.grid.editModule.destroyForm();\n    }\n    contentready(e) {\n        if (!isNullOrUndefined(e.args.requestType)\n            && (e.args.requestType.toString() === 'delete' || e.args.requestType.toString() === 'save'\n                || (this.parent.editSettings.mode === 'Batch' && e.args.requestType.toString() === 'batchsave'))) {\n            this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                this.updateIndex(this.parent.grid.dataSource, this.parent.getMovableDataRows(), this.parent.getCurrentViewRecords());\n            }\n        }\n    }\n    /**\n     * If the row index and field is given, edits the particular cell in a row.\n     * @return {void}\n     */\n    editCell(rowIndex, field) {\n        if (this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch') {\n            if (this.parent.editSettings.mode !== 'Batch') {\n                this.isOnBatch = true;\n                this.updateGridEditMode('Batch');\n            }\n            this.parent.grid.editModule.editCell(rowIndex, field);\n        }\n    }\n}\n","import { Grid, CommandColumn as Command } from '@syncfusion/ej2-grids';\n/**\n * Command Column Module for TreeGrid\n * @hidden\n */\nexport class CommandColumn {\n    constructor(parent) {\n        Grid.Inject(Command);\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    getModuleName() {\n        return 'commandColumn';\n    }\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    destroy() {\n        //this.removeEventListener();\n    }\n}\n","import { Grid, getObject } from '@syncfusion/ej2-grids';\nimport { DetailRow as detailrow } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, addClass, isBlazor } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isRemoteData } from '../utils';\n/**\n * TreeGrid Detail Row module\n * @hidden\n */\nexport class DetailRow {\n    constructor(parent) {\n        Grid.Inject(detailrow);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    getModuleName() {\n        return 'detailRow';\n    }\n    addEventListener() {\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.on('detaildataBound', this.detaildataBound, this);\n        this.parent.grid.on('detail-indentcell-info', this.setIndentVisibility, this);\n        this.parent.on('childRowExpand', this.childRowExpand, this);\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('actioncomplete', this.actioncomplete, this);\n    }\n    /**\n     * @hidden\n     */\n    removeEventListener() {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.off('detaildataBound', this.detaildataBound);\n        this.parent.off('childRowExpand', this.childRowExpand);\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('actioncomplete', this.actioncomplete);\n        this.parent.grid.off('detail-indentcell-info', this.setIndentVisibility);\n    }\n    setIndentVisibility(args) {\n        let visible = 'visible';\n        args[visible] = false;\n    }\n    dataBoundArg() {\n        let detailele = this.parent.getRows().filter((e) => {\n            return !e.classList.contains('e-detailrow');\n        });\n        for (let i = 0; i < detailele.length; i++) {\n            let elements = detailele[i].getElementsByClassName('e-detailrowcollapse');\n            let detailData = this.parent.grid.getRowObjectFromUID(detailele[i].getAttribute('data-Uid'));\n            let parentItem = getObject('parentItem', this.parent.grid.getCurrentViewRecords()[i]);\n            if (isNullOrUndefined(parentItem) || !isNullOrUndefined(parentItem) &&\n                getExpandStatus(this.parent, detailData.data, this.parent.grid.getCurrentViewRecords())) {\n                this.parent.grid.detailRowModule.expand(elements[0]);\n            }\n        }\n    }\n    childRowExpand(args) {\n        let detailRowElement = args.row.getElementsByClassName('e-detailrowcollapse');\n        if (!isNullOrUndefined(detailRowElement[0])) {\n            this.parent.grid.detailRowModule.expand(detailRowElement[0]);\n        }\n    }\n    rowExpandCollapse(args) {\n        if (isRemoteData(this.parent)) {\n            return;\n        }\n        for (let i = 0; i < args.detailrows.length; i++) {\n            args.detailrows[i].style.display = args.action;\n        }\n    }\n    detaildataBound(args) {\n        if (!isBlazor() || !this.parent.isServerRendered) {\n            let data = args.data;\n            let row = args.detailElement.parentElement.previousSibling;\n            let index = !isNullOrUndefined(data.parentItem) ? data.parentItem.index : data.index;\n            let expandClass = 'e-gridrowindex' + index + 'level' + data.level;\n            let classlist = row.querySelector('.' + expandClass).classList;\n            let gridClas = [].slice.call(classlist).filter((gridclass) => (gridclass === expandClass));\n            let newNo = gridClas[0].length;\n            let slicedclas = gridClas.toString().slice(6, newNo);\n            let detailClass = 'e-griddetail' + slicedclas;\n            addClass([args.detailElement.parentElement], detailClass);\n        }\n    }\n    ;\n    actioncomplete(args) {\n        if (args.requestType === 'beginEdit' || args.requestType === 'add') {\n            let spann = (args.row.querySelectorAll('.e-editcell')[0].getAttribute('colSpan'));\n            let colum = parseInt(spann, 10) - 1;\n            let updtdcolum = colum.toString();\n            args.row.querySelectorAll('.e-editcell')[0].setAttribute('colSpan', updtdcolum);\n        }\n        let focusElement = this.parent.grid.contentModule.getRows();\n        for (let i = 0; i < focusElement.length; i++) {\n            focusElement[i].cells[0].visible = false;\n        }\n        let focusModule = getObject('focusModule', this.parent.grid);\n        let matrix = 'refreshMatrix';\n        focusModule[matrix](true)({ rows: this.parent.grid.contentModule.getRows() });\n    }\n    /**\n     * Destroys the DetailModule.\n     * @method destroy\n     * @return {void}\n     */\n    destroy() {\n        this.removeEventListener();\n    }\n}\n","import { VirtualContentRenderer } from '@syncfusion/ej2-grids';\nimport { InterSectionObserver } from '@syncfusion/ej2-grids';\nimport { TreeVirtualRowModelGenerator } from '../renderer/virtual-row-model-generator';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, EventHandler, getValue, setValue } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\n/**\n * Content renderer for TreeGrid\n */\nexport class VirtualTreeContentRenderer extends VirtualContentRenderer {\n    constructor(parent, locator) {\n        super(parent, locator);\n        this.isExpandCollapse = false;\n        this.translateY = 0;\n        this.maxiPage = 0;\n        /** @hidden */\n        this.startIndex = -1;\n        this.endIndex = -1;\n        this.preTranslate = 0;\n        this.isRemoteExpand = false;\n        this.addEventListener();\n    }\n    getModelGenerator() {\n        return new TreeVirtualRowModelGenerator(this.parent);\n    }\n    getRowByIndex(index) {\n        return this.parent.getDataRows().filter((e) => parseInt(e.getAttribute('aria-rowindex'), 0) === index)[0];\n    }\n    addEventListener() {\n        this.parent.on(events.virtualActionArgs, this.virtualOtherAction, this);\n        this.parent.on(events.indexModifier, this.indexModifier, this);\n    }\n    virtualOtherAction(args) {\n        if (args.setTop) {\n            this.translateY = 0;\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        else if (args.isExpandCollapse) {\n            this.isExpandCollapse = true;\n        }\n    }\n    indexModifier(args) {\n        args.startIndex = this.startIndex;\n        args.endIndex = this.endIndex;\n    }\n    eventListener(action) {\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '')) {\n            this.parent[action]('data-ready', this.onDataReady, this);\n            //this.parent[action]('refresh-virtual-block', this.refreshContentRows, this);\n            this.fn = () => {\n                this.observers.observes((scrollArgs) => this.scrollListeners(scrollArgs));\n                this.parent.off('content-ready', this.fn);\n            };\n            this.parent.on('content-ready', this.fn, this);\n        }\n        else {\n            super.eventListener('on');\n        }\n    }\n    onDataReady(e) {\n        super.onDataReady(e);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '')) {\n            if (!isNullOrUndefined(e.count)) {\n                this.totalRecords = e.count;\n                getValue('virtualEle', this).setVirtualHeight(this.parent.getRowHeight() * e.count, '100%');\n                let outBuffer = 4; // this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n            }\n            if (!isNullOrUndefined(e.requestType) && e.requestType.toString() === 'collapseAll') {\n                this.contents.scrollTop = 0;\n            }\n        }\n    }\n    renderTable() {\n        super.renderTable();\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '')) {\n            getValue('observer', this).options.debounceEvent = false;\n            this.observers = new TreeInterSectionObserver(this.parent, getValue('observer', this).element, getValue('observer', this).options);\n            this.contents = this.getPanel().firstChild;\n        }\n    }\n    getTranslateY(sTop, cHeight, info, isOnenter) {\n        if (this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') {\n            if (this.isRemoteExpand) {\n                this.isRemoteExpand = false;\n                return this.preTranslate;\n            }\n            else {\n                this.preTranslate = super.getTranslateY(sTop, cHeight, info, isOnenter);\n                return super.getTranslateY(sTop, cHeight, info, isOnenter);\n            }\n        }\n        else {\n            return super.getTranslateY(sTop, cHeight, info, isOnenter);\n        }\n    }\n    scrollListeners(scrollArgs) {\n        let info = scrollArgs.sentinel;\n        let outBuffer = 10; //this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n        let content = this.parent.getContent().querySelector('.e-content');\n        let scrollHeight = outBuffer * this.parent.getRowHeight();\n        let upScroll = (scrollArgs.offset.top - this.translateY) < 0;\n        let downScroll = (scrollArgs.offset.top - this.translateY) > scrollHeight;\n        if (upScroll) {\n            let vHeight = +(this.parent.height.toString().indexOf('%') < 0 ? this.parent.height :\n                this.parent.element.getBoundingClientRect().height);\n            let index = (~~(content.scrollTop / this.parent.getRowHeight())\n                + Math.ceil(vHeight / this.parent.getRowHeight()))\n                - this.parent.getRows().length;\n            index = (index > 0) ? index : 0;\n            this.startIndex = index;\n            this.endIndex = index + this.parent.getRows().length;\n            if (this.endIndex > this.totalRecords) {\n                let lastInx = this.totalRecords - 1;\n                let remains = this.endIndex % lastInx;\n                this.endIndex = lastInx;\n                this.startIndex = this.startIndex - remains;\n            }\n            //var firsttdinx = parseInt(this.parent.getContent().querySelector('.e-content td').getAttribute('index'), 0);\n            let rowPt = Math.ceil(scrollArgs.offset.top / this.parent.getRowHeight());\n            rowPt = rowPt % this.parent.pageSettings.pageSize;\n            let firsttdinx = 0;\n            if (!isNullOrUndefined(this.parent.getRows()[rowPt])) {\n                let attr = this.parent.getContent().querySelectorAll('.e-content tr')[rowPt]\n                    .querySelector('td').getAttribute('index');\n                firsttdinx = +attr; // this.parent.getContent().querySelector('.e-content tr').getAttribute('aria-rowindex');\n            }\n            if (firsttdinx === 0) {\n                this.translateY = scrollArgs.offset.top;\n            }\n            else {\n                let height = this.parent.getRowHeight();\n                this.translateY = (scrollArgs.offset.top - (outBuffer * height) > 0) ?\n                    scrollArgs.offset.top - (outBuffer * height) + 10 : 0;\n            }\n        }\n        else if (downScroll) {\n            let nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n            let lastIndex = nextSetResIndex + this.parent.getRows().length;\n            if (lastIndex > this.totalRecords) {\n                lastIndex = nextSetResIndex +\n                    (this.totalRecords - nextSetResIndex);\n            }\n            this.startIndex = lastIndex - this.parent.getRows().length;\n            this.endIndex = lastIndex;\n            this.translateY = scrollArgs.offset.top;\n        }\n        if ((downScroll && (scrollArgs.offset.top < (this.parent.getRowHeight() * this.totalRecords)))\n            || (upScroll)) {\n            let viewInfo = getValue('getInfoFromView', this).apply(this, [scrollArgs.direction, info, scrollArgs.offset]);\n            this.parent.notify(viewInfo.event, { requestType: 'virtualscroll', focusElement: scrollArgs.focusElement });\n        }\n    }\n    appendContent(target, newChild, e) {\n        if (this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') {\n            if (getValue('isExpandCollapse', e)) {\n                this.isRemoteExpand = true;\n            }\n            super.appendContent(target, newChild, e);\n        }\n        else {\n            let info = e.virtualInfo.sentinelInfo && e.virtualInfo.sentinelInfo.axis === 'Y' &&\n                getValue('currentInfo', this).page && getValue('currentInfo', this).page !== e.virtualInfo.page ?\n                getValue('currentInfo', this) : e.virtualInfo;\n            let cBlock = (info.columnIndexes[0]) - 1;\n            let cOffset = this.getColumnOffset(cBlock);\n            //this.virtualEle.setWrapperWidth(width, ( Browser.isIE || Browser.info.name === 'edge') as boolean);\n            target = this.parent.createElement('tbody');\n            target.appendChild(newChild);\n            let replace = 'replaceWith';\n            this.getTable().querySelector('tbody')[replace](target);\n            if (!this.isExpandCollapse || this.translateY === 0) {\n                getValue('virtualEle', this).adjustTable(cOffset, this.translateY);\n            }\n            else {\n                this.isExpandCollapse = false;\n            }\n            setValue('prevInfo', info, this);\n        }\n    }\n    removeEventListener() {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('data-ready', this.onDataReady);\n        this.parent.off('content-ready', this.fn);\n        this.parent.off(events.virtualActionArgs, this.virtualOtherAction);\n        this.parent.off(events.indexModifier, this.indexModifier);\n    }\n}\nexport class TreeInterSectionObserver extends InterSectionObserver {\n    constructor() {\n        super(...arguments);\n        this.isWheeling = false;\n        this.newPos = 0;\n        this.lastPos = 0;\n        this.timer = 0;\n    }\n    observes(callback) {\n        setValue('containerRect', getValue('options', this).container.getBoundingClientRect(), this);\n        EventHandler.add(getValue('options', this).container, 'scroll', this.virtualScrollHandlers(callback), this);\n    }\n    clear() {\n        this.lastPos = null;\n    }\n    virtualScrollHandlers(callback) {\n        let prevTop = 0;\n        let prevLeft = 0;\n        return (e) => {\n            let scrollTop = e.target.scrollTop;\n            let scrollLeft = e.target.scrollLeft;\n            let direction = prevTop < scrollTop ? 'down' : 'up';\n            direction = prevLeft === scrollLeft ? direction : prevLeft < scrollLeft ? 'right' : 'left';\n            prevTop = scrollTop;\n            prevLeft = scrollLeft;\n            let current = getValue('sentinelInfo', this)[direction];\n            let delta = 0;\n            this.newPos = scrollTop;\n            if (this.lastPos != null) { // && newPos < maxScroll \n                delta = this.newPos - this.lastPos;\n            }\n            this.lastPos = this.newPos;\n            if (this.timer) {\n                clearTimeout(this.timer);\n            }\n            this.timer = setTimeout(this.clear, 0);\n            /*if (this.options.axes.indexOf(current.axis) === -1) {\n                return;\n            }*/\n            /*if(delta > 45 || delta < -45){\n              this.isWheeling = true;\n            }*/\n            if ((delta > 100 || delta < -100) && (e && e.preventDefault)) {\n                e.returnValue = false;\n                e.preventDefault();\n            }\n            callback({ direction: direction, isWheel: this.isWheeling,\n                sentinel: current, offset: { top: scrollTop, left: scrollLeft },\n                focusElement: document.activeElement });\n        };\n    }\n}\n","import { Grid, VirtualScroll as GridVirtualScroll } from '@syncfusion/ej2-grids';\nimport { RenderType } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { getExpandStatus } from '../utils';\nimport { VirtualTreeContentRenderer } from '../renderer/virtual-tree-content-render';\n/**\n * TreeGrid Virtual Scroll module will handle Virtualization\n * @hidden\n */\nexport class VirtualScroll {\n    /**\n     * Constructor for VirtualScroll module\n     */\n    constructor(parent) {\n        this.prevstartIndex = -1;\n        this.prevendIndex = -1;\n        this.parent = parent;\n        let name = 'name';\n        let injectedModules = 'injectedModules';\n        let modules = Grid.prototype[injectedModules];\n        for (let i = 0; i < modules.length; i++) {\n            if (modules[i] === GridVirtualScroll) {\n                modules.splice(i, 1);\n                break;\n            }\n        }\n        Grid.Inject(TreeVirtual);\n        this.addEventListener();\n    }\n    returnVisualData(args) {\n        args.data = this.visualData;\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    getModuleName() {\n        return 'virtualScroll';\n    }\n    /**\n     * @hidden\n     */\n    addEventListener() {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds, this);\n        this.parent.on(events.pagingActions, this.virtualPageAction, this);\n    }\n    /**\n     * @hidden\n     */\n    removeEventListener() {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds);\n        this.parent.off(events.pagingActions, this.virtualPageAction);\n    }\n    collapseExpandVirtualchilds(row) {\n        this.parent.grid.notify(events.virtualActionArgs, { isExpandCollapse: true });\n        this.expandCollapseRec = row.record;\n        row.record.expanded = row.action === 'collapse' ? false : true;\n        let ret = {\n            result: this.parent.flatData,\n            row: row.row,\n            action: row.action,\n            record: row.record,\n            count: this.parent.flatData.length\n        };\n        let requestType = getValue('isCollapseAll', this.parent) ? 'collapseAll' : 'refresh';\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret, { requestType: requestType });\n    }\n    virtualPageAction(pageingDetails) {\n        let dm = new DataManager(pageingDetails.result);\n        let expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        let parents = dm.executeLocal(new Query().where(expanded));\n        let visualData = parents.filter((e) => {\n            return getExpandStatus(this.parent, e, parents);\n        });\n        this.visualData = visualData;\n        this.parent.grid.notify(events.dataListener, { data: visualData });\n        let counts = { startIndex: -1, endIndex: -1 };\n        this.parent.grid.notify(events.indexModifier, counts);\n        let startIndex = counts.startIndex;\n        let endIndex = counts.endIndex;\n        pageingDetails.count = visualData.length;\n        if (startIndex === -1 && endIndex === -1) {\n            let query = new Query();\n            let size = this.parent.grid.pageSettings.pageSize;\n            let current = this.parent.grid.pageSettings.currentPage;\n            let skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm.dataSource.json = visualData;\n            pageingDetails.result = dm.executeLocal(query);\n        }\n        else {\n            let requestType = pageingDetails.actionArgs.requestType;\n            if (requestType === 'filtering') {\n                startIndex = 0;\n                endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n            }\n            //if ((this.prevendIndex !== -1 && this.prevstartIndex !== -1) && \n            //this.prevendIndex === endIndex && this.prevstartIndex === startIndex) {\n            if (!isNullOrUndefined(this.expandCollapseRec)) {\n                let resourceCount = this.parent.getRows();\n                let sIndex = visualData.indexOf(this.expandCollapseRec);\n                let tempdata = visualData.slice(sIndex, sIndex + resourceCount.length);\n                if (tempdata.length < resourceCount.length && sIndex >= 0) {\n                    sIndex = visualData.length - resourceCount.length;\n                    sIndex = sIndex > 0 ? sIndex : 0;\n                    startIndex = sIndex;\n                    endIndex = visualData.length;\n                }\n                else if (getValue('isCollapseAll', this.parent)) {\n                    startIndex = 0;\n                    endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                    this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n                }\n                this.expandCollapseRec = null;\n            }\n            //}\n            pageingDetails.result = visualData.slice(startIndex, endIndex);\n            this.prevstartIndex = startIndex;\n            this.prevendIndex = endIndex;\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    }\n    /**\n     * To destroy the virtualScroll module\n     * @return {void}\n     * @hidden\n     */\n    destroy() {\n        this.removeEventListener();\n    }\n}\nexport class TreeVirtual extends GridVirtualScroll {\n    constructor(parent, locator) {\n        super(parent, locator);\n        getValue('parent', this).off('initial-load', getValue('instantiateRenderer', this), this);\n        getValue('parent', this).on('initial-load', this.instantiateRenderers, this);\n    }\n    instantiateRenderers() {\n        getValue('parent', this).log(['limitation', 'virtual_height'], 'virtualization');\n        let renderer = getValue('locator', this).getService('rendererFactory');\n        getValue('addRenderer', renderer)\n            .apply(renderer, [RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this))]);\n        //renderer.addRenderer(RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this)));\n        this.ensurePageSize();\n    }\n    ensurePageSize() {\n        let parentGrid = getValue('parent', this);\n        let rowHeight = parentGrid.getRowHeight();\n        if (!isNullOrUndefined(parentGrid.height) && typeof (parentGrid.height) === 'string' && parentGrid.height.indexOf('%') !== -1) {\n            parentGrid.element.style.height = parentGrid.height;\n        }\n        let vHeight = parentGrid.height.toString().indexOf('%') < 0 ? parentGrid.height :\n            parentGrid.element.getBoundingClientRect().height;\n        let blockSize = ~~(vHeight / rowHeight);\n        let height = blockSize * 2;\n        let size = parentGrid.pageSettings.pageSize;\n        parentGrid.setProperties({ pageSettings: { pageSize: size < height ? height : size } }, true);\n    }\n}\n","import { parentsUntil } from '@syncfusion/ej2-grids';\nimport { Grid, Freeze as FreezeColumn } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Freeze module\n * @hidden\n */\nexport class Freeze {\n    /**\n     * Constructor for render module\n     */\n    constructor(parent) {\n        Grid.Inject(FreezeColumn);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    addEventListener() {\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.grid.on('dblclick', this.dblClickHandler, this);\n    }\n    removeEventListener() {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.grid.off('dblclick', this.dblClickHandler);\n    }\n    rowExpandCollapse(args) {\n        let movableRows = this.parent.getMovableDataRows();\n        let frozenrows = this.parent.getRows();\n        let rows;\n        if (!args.detailrows.length) {\n            rows = movableRows.filter((e) => e.querySelector('.e-gridrowindex' + args.record.index + 'level' + (args.record.level + 1)));\n        }\n        else {\n            rows = args.detailrows;\n        }\n        for (let i = 0; i < rows.length; i++) {\n            let rData = this.parent.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n            rows[i].style.display = args.action;\n            let queryselector = args.action === 'none' ? '.e-treecolumn-container .e-treegridcollapse'\n                : '.e-treecolumn-container .e-treegridexpand';\n            if (frozenrows[rows[i].rowIndex].querySelector(queryselector)) {\n                let cRow = [];\n                for (let i = 0; i < movableRows.length; i++) {\n                    if (movableRows[i].querySelector('.e-gridrowindex' + rData.index + 'level' + (rData.level + 1))) {\n                        cRow.push(movableRows[i]);\n                    }\n                }\n                if (cRow.length) {\n                    this.rowExpandCollapse({ detailrows: cRow, action: args.action });\n                }\n            }\n        }\n    }\n    dblClickHandler(e) {\n        if (parentsUntil(e.target, 'e-rowcell') &&\n            this.parent.grid.editSettings.allowEditOnDblClick && this.parent.editSettings.mode !== 'Cell') {\n            this.parent.grid.editModule.startEdit(parentsUntil(e.target, 'e-row'));\n        }\n    }\n    dataBoundArg(args) {\n        let checkboxColumn = this.parent.getColumns().filter((e) => {\n            return e.showCheckbox;\n        });\n        if (checkboxColumn.length && this.parent.freezeModule && this.parent.initialRender) {\n            addClass([this.parent.element.getElementsByClassName('e-grid')[0]], 'e-checkselection');\n        }\n    }\n    destroy() {\n        this.removeEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    getModuleName() {\n        return 'freeze';\n    }\n}\n","/**\n * actions export\n */\nexport * from './filter';\nexport * from './excel-export';\nexport * from './pdf-export';\nexport * from './page';\nexport * from './toolbar';\nexport * from './summary';\nexport * from './sort';\nexport * from './reorder';\nexport * from './resize';\nexport * from './clipboard';\nexport * from './column-menu';\nexport * from './context-menu';\nexport * from './edit';\nexport * from './command-column';\nexport * from './selection';\nexport * from './detail-row';\nexport * from './virtual-scroll';\nexport * from './freeze-column';\n","/**\n * TreeGrid component exported items\n */\nexport * from './base';\nexport * from './models';\nexport * from './renderer';\nexport * from './utils';\nexport * from './enum';\nexport * from './actions';\n","/**\n * Export TreeGrid component\n */\nexport * from './treegrid/index';\n"],"names":["__decorate","this","Predicate","GridClipboard","events.beforeCopy","events.checkboxChange","Print","GridPrint","events.printGridInit","events.queryCellInfo","events.rowDataBound","events.beforeDataBound","collapsed","events.remoteExpand","events.actionComplete","events.expanded","events.pagingActions","events.crudAction","events.batchSave","TreeGridSelection","events.load","events.rowSelected","events.rowDeselected","events.resizeStop","events.beforePaste","events.dataBound","beginEdit","events.toolbarClick","events.beginEdit","cellEdit","cellSave","events.dataStateChange","events.cellSave","events.cellSaved","events.cellEdit","events.batchAdd","events.beforeBatchSave","events.beforeBatchAdd","events.batchDelete","events.beforeBatchDelete","events.batchCancel","actionComplete","events.actionBegin","events.beginAdd","events.recordDoubleClick","events.detailDataBound","events.contextMenuClick","events.contextMenuOpen","events.rowDragStartHelper","events.rowDragStart","events.rowdraging","events.rowDrag","events.rowDropped","merge","events.expanding","events.collapsing","events.collapsed","events.localPagedExpandCollapse","Reorder","GridReorder","Resize","GridResize","RowDD","GridDragDrop","events.rowsAdd","events.rowsRemove","events.rowDrop","expanded","RowDropSettings","events.dataListener","Filter","GridFilter","ExcelExport","GridExcel","event.beforeExcelExport","PdfExport","GridPdf","event.beforePdfExport","Page","GridPage","Toolbar","tool","Aggregate","GridAggregate","Sort","GridSort","ColumnMenu","GridColumnMenu","ContextMenu","cmenu","Edit","GridEdit","events.keyPressed","events.doubleTap","events.beforeStartEdit","events.beforeBatchCancel","CommandColumn","Command","DetailRow","detailrow","events.virtualActionArgs","events.indexModifier","VirtualScroll","GridVirtualScroll","Freeze","FreezeColumn"],"mappings":"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"}