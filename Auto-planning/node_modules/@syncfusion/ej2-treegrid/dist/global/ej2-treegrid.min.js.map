{"version":3,"file":"ej2-treegrid.min.js","sources":["../../src/treegrid/utils.js","../../src/treegrid/actions/crud-actions.js","../../src/treegrid/models/column.js","../../src/treegrid/models/filter-settings.js","../../src/treegrid/models/textwrap-settings.js","../../src/treegrid/actions/clipboard.js","../../src/treegrid/base/constant.js","../../src/treegrid/actions/selection.js","../../src/treegrid/actions/print.js","../../src/treegrid/models/search-settings.js","../../src/treegrid/models/selection-settings.js","../../src/treegrid/renderer/render.js","../../src/treegrid/base/data.js","../../src/treegrid/enum.js","../../src/treegrid/models/page-settings.js","../../src/treegrid/models/summary.js","../../src/treegrid/models/edit-settings.js","../../src/treegrid/models/sort-settings.js","../../src/treegrid/base/treegrid.js","../../src/treegrid/actions/reorder.js","../../src/treegrid/actions/resize.js","../../src/treegrid/actions/rowdragdrop.js","../../src/treegrid/models/rowdrop-settings.js","../../src/treegrid/renderer/virtual-row-model-generator.js","../../src/treegrid/actions/filter.js","../../src/treegrid/actions/excel-export.js","../../src/treegrid/actions/pdf-export.js","../../src/treegrid/actions/page.js","../../src/treegrid/actions/toolbar.js","../../src/treegrid/actions/summary.js","../../src/treegrid/actions/sort.js","../../src/treegrid/actions/column-menu.js","../../src/treegrid/actions/context-menu.js","../../src/treegrid/actions/batch-edit.js","../../src/treegrid/actions/edit.js","../../src/treegrid/actions/command-column.js","../../src/treegrid/actions/detail-row.js","../../src/treegrid/renderer/virtual-tree-content-render.js","../../src/treegrid/actions/virtual-scroll.js","../../src/treegrid/actions/freeze-column.js","../../src/global.js"],"sourcesContent":["import { getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, ODataAdaptor, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { WebApiAdaptor, WebMethodAdaptor, CacheAdaptor } from '@syncfusion/ej2-data';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nexport function isRemoteData(parent) {\n    if (parent.dataSource instanceof DataManager) {\n        var adaptor = parent.dataSource.adaptor;\n        return (adaptor instanceof ODataAdaptor ||\n            (adaptor instanceof WebApiAdaptor) || (adaptor instanceof WebMethodAdaptor) ||\n            (adaptor instanceof CacheAdaptor) || adaptor instanceof UrlAdaptor);\n    }\n    return false;\n}\nexport function isCountRequired(parent) {\n    if (parent.dataSource && 'result' in parent.dataSource) {\n        return true;\n    }\n    return false;\n}\nexport function isCheckboxcolumn(parent) {\n    for (var i = 0; i < parent.columns.length; i++) {\n        if (parent.columns[i].showCheckbox) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function isFilterChildHierarchy(parent) {\n    if ((!isNullOrUndefined(parent.grid.searchSettings.key) && parent.grid.searchSettings.key !== '' &&\n        (parent.searchSettings.hierarchyMode === 'Child' || parent.searchSettings.hierarchyMode === 'None')) ||\n        (parent.allowFiltering && parent.grid.filterSettings.columns.length &&\n            (parent.filterSettings.hierarchyMode === 'Child' || parent.filterSettings.hierarchyMode === 'None'))) {\n        return true;\n    }\n    return false;\n}\n/**\n * @hidden\n */\nexport function findParentRecords(records) {\n    var datas;\n    datas = [];\n    var recordsLength = Object.keys(records).length;\n    for (var i = 0, len = recordsLength; i < len; i++) {\n        var hasChild = getObject('hasChildRecords', records[i]);\n        if (hasChild) {\n            datas.push(records[i]);\n        }\n    }\n    return datas;\n}\n/**\n * @hidden\n */\nexport function getExpandStatus(parent, record, parents) {\n    var parentRecord = isNullOrUndefined(record.parentItem) ? null :\n        getParentData(parent, record.parentItem.uniqueID);\n    var childParent;\n    if (parentRecord != null) {\n        if (parent.initialRender && !isNullOrUndefined(parentRecord[parent.expandStateMapping])\n            && !parentRecord[parent.expandStateMapping]) {\n            parentRecord.expanded = false;\n            return false;\n        }\n        else if (parentRecord.expanded === false) {\n            return false;\n        }\n        else if (parentRecord.parentItem) {\n            childParent = getParentData(parent, parentRecord.parentItem.uniqueID);\n            if (childParent && parent.initialRender && !isNullOrUndefined(childParent[parent.expandStateMapping])\n                && !childParent[parent.expandStateMapping]) {\n                childParent.expanded = false;\n                return false;\n            }\n            if (childParent && childParent.expanded === false) {\n                return false;\n            }\n            else if (childParent) {\n                return getExpandStatus(parent, childParent, parents);\n            }\n            return true;\n        }\n        else {\n            return true;\n        }\n    }\n    else {\n        return true;\n    }\n}\n/**\n * @hidden\n */\nexport function findChildrenRecords(records) {\n    var datas = [];\n    if (isNullOrUndefined(records) || (!records.hasChildRecords && !isNullOrUndefined(records.childRecords)\n        && !records.childRecords.length)) {\n        return [];\n    }\n    if (!isNullOrUndefined(records.childRecords)) {\n        var childRecords = records.childRecords;\n        for (var i = 0, len = Object.keys(childRecords).length; i < len; i++) {\n            datas.push(childRecords[i]);\n            if (childRecords[i].hasChildRecords || (!isNullOrUndefined(childRecords[i].childRecords) &&\n                childRecords[i].childRecords.length)) {\n                datas = datas.concat(findChildrenRecords(childRecords[i]));\n            }\n        }\n    }\n    return datas;\n}\nexport function isOffline(parent) {\n    if (isRemoteData(parent)) {\n        var dm = parent.dataSource;\n        return !isNullOrUndefined(dm.ready);\n    }\n    return true;\n}\nexport function extendArray(array) {\n    var objArr = [];\n    var obj;\n    var keys;\n    for (var i = 0; i < array.length; i++) {\n        keys = Object.keys(array[i]);\n        obj = {};\n        for (var j = 0; j < keys.length; j++) {\n            obj[keys[j]] = array[i][keys[j]];\n        }\n        objArr.push(obj);\n    }\n    return objArr;\n}\nexport function getPlainData(value) {\n    delete value.hasChildRecords;\n    delete value.childRecords;\n    delete value.index;\n    delete value.parentItem;\n    delete value.level;\n    return value;\n}\nexport function getParentData(parent, value, requireFilter) {\n    if (requireFilter) {\n        var idFilter = 'uniqueIDFilterCollection';\n        return parent[idFilter][value];\n    }\n    else {\n        var id = 'uniqueIDCollection';\n        return parent[id][value];\n    }\n}\n","import { isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { extendArray, getPlainData, getParentData } from '../utils';\nexport function editAction(details, control, isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord) {\n    var value = details.value;\n    var action = details.action;\n    var changedRecords = 'changedRecords';\n    var i;\n    var j;\n    var addedRecords = 'addedRecords';\n    var batchChanges;\n    var key = control.grid.getPrimaryKeyFieldNames()[0];\n    var treeData = control.dataSource instanceof DataManager ?\n        control.dataSource.dataSource.json : control.dataSource;\n    var modifiedData = [];\n    var originalData = value;\n    var isSkip = false;\n    if (control.editSettings.mode === 'Batch') {\n        batchChanges = control.grid.editModule.getBatchChanges();\n    }\n    if (action === 'add' || (action === 'batchsave' && (control.editSettings.mode === 'Batch'\n        && batchChanges[addedRecords].length))) {\n        var addAct = addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord);\n        value = addAct.value;\n        isSkip = addAct.isSkip;\n    }\n    if (value instanceof Array) {\n        modifiedData = extendArray(value);\n    }\n    else {\n        modifiedData.push(extend({}, value));\n    }\n    if (!isSkip && (action !== 'add' ||\n        (control.editSettings.newRowPosition !== 'Top' && control.editSettings.newRowPosition !== 'Bottom'))) {\n        for (var k = 0; k < modifiedData.length; k++) {\n            if (typeof (modifiedData[k][key]) === 'object') {\n                modifiedData[k] = modifiedData[k][key];\n            }\n            var keys = Object.keys(modifiedData[k].taskData);\n            i = treeData.length;\n            var _loop_1 = function () {\n                if (treeData[i][key] === modifiedData[k][key]) {\n                    if (action === 'delete') {\n                        var currentData_1 = treeData[i];\n                        treeData.splice(i, 1);\n                        if (isSelfReference) {\n                            if (!isNullOrUndefined(currentData_1[control.parentIdMapping])) {\n                                var parentData = control.flatData.filter(function (e) {\n                                    return e[control.idMapping] === currentData_1[control.parentIdMapping];\n                                })[0];\n                                var childRecords = parentData ? parentData[control.childMapping] : [];\n                                for (var p = childRecords.length - 1; p >= 0; p--) {\n                                    if (childRecords[p][control.idMapping] === currentData_1[control.idMapping]) {\n                                        childRecords.splice(p, 1);\n                                        if (!childRecords.length) {\n                                            parentData.hasChildRecords = false;\n                                            updateParentRow(key, parentData, action, control, isSelfReference);\n                                        }\n                                        break;\n                                    }\n                                }\n                            }\n                            return \"break\";\n                        }\n                    }\n                    else {\n                        if (action === 'edit') {\n                            for (j = 0; j < keys.length; j++) {\n                                if (treeData[i].hasOwnProperty(keys[j]) && ((control.editSettings.mode !== 'Cell'\n                                    || (!isNullOrUndefined(batchChanges) && batchChanges[changedRecords].length === 0))\n                                    || keys[j] === columnName)) {\n                                    var editedData = getParentData(control, modifiedData[k].uniqueID);\n                                    editedData.taskData[keys[j]] = treeData[i][keys[j]] = modifiedData[k][keys[j]];\n                                }\n                            }\n                        }\n                        else if (action === 'add' || action === 'batchsave') {\n                            var index = void 0;\n                            if (control.editSettings.newRowPosition === 'Child') {\n                                if (isSelfReference) {\n                                    originalData.taskData[control.parentIdMapping] = treeData[i][control.idMapping];\n                                    treeData.splice(i + 1, 0, originalData.taskData);\n                                }\n                                else {\n                                    if (!treeData[i].hasOwnProperty(control.childMapping)) {\n                                        treeData[i][control.childMapping] = [];\n                                    }\n                                    treeData[i][control.childMapping].push(originalData.taskData);\n                                    updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                                }\n                            }\n                            else if (control.editSettings.newRowPosition === 'Below') {\n                                treeData.splice(i + 1, 0, originalData.taskData);\n                                updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                            }\n                            else if (!addRowIndex) {\n                                index = 0;\n                                treeData.splice(index, 0, originalData.taskData);\n                            }\n                            else if (control.editSettings.newRowPosition === 'Above') {\n                                treeData.splice(i, 0, originalData.taskData);\n                                updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                            }\n                        }\n                        return \"break\";\n                    }\n                }\n                else if (!isNullOrUndefined(treeData[i][control.childMapping])) {\n                    if (removeChildRecords(treeData[i][control.childMapping], modifiedData[k], action, key, control, isSelfReference, originalData, columnName)) {\n                        updateParentRow(key, treeData[i], action, control, isSelfReference);\n                    }\n                }\n            };\n            while (i-- && i >= 0) {\n                var state_1 = _loop_1();\n                if (state_1 === \"break\")\n                    break;\n            }\n        }\n    }\n}\nexport function addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord) {\n    var value;\n    var isSkip = false;\n    var currentViewRecords = control.grid.getCurrentViewRecords();\n    value = extend({}, details.value);\n    value = getPlainData(value);\n    switch (control.editSettings.newRowPosition) {\n        case 'Top':\n            treeData.unshift(value);\n            isSkip = true;\n            break;\n        case 'Bottom':\n            treeData.push(value);\n            isSkip = true;\n            break;\n        case 'Above':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                value = extend({}, currentViewRecords[addRowIndex + 1]);\n                value = getPlainData(value);\n            }\n            break;\n        case 'Below':\n        case 'Child':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n                var currentdata = currentViewRecords[addRowIndex];\n                if (!isNullOrUndefined(currentdata) && currentdata[primaryKeys] === details.value[primaryKeys] || selectedIndex !== -1) {\n                    value = extend({}, currentdata);\n                }\n                else {\n                    value = extend({}, details.value);\n                }\n                value = getPlainData(value);\n            }\n            if (selectedIndex === -1) {\n                treeData.unshift(value);\n                isSkip = true;\n            }\n    }\n    return { value: value, isSkip: isSkip };\n}\nexport function removeChildRecords(childRecords, modifiedData, action, key, control, isSelfReference, originalData, columnName) {\n    var isChildAll = false;\n    var j = childRecords.length;\n    while (j-- && j >= 0) {\n        if (childRecords[j][key] === modifiedData[key] ||\n            (isSelfReference && childRecords[j][control.parentIdMapping] === modifiedData[control.idMapping])) {\n            if (action === 'edit') {\n                var keys = Object.keys(modifiedData);\n                var editedData = getParentData(control, modifiedData.uniqueID);\n                for (var i = 0; i < keys.length; i++) {\n                    if (childRecords[j].hasOwnProperty(keys[i]) && (control.editSettings.mode !== 'Cell' || keys[i] === columnName)) {\n                        editedData[keys[i]] = editedData.taskData[keys[i]] = childRecords[j][keys[i]] = modifiedData[keys[i]];\n                    }\n                }\n                break;\n            }\n            else if (action === 'add' || action === 'batchsave') {\n                if (control.editSettings.newRowPosition === 'Child') {\n                    if (isSelfReference) {\n                        originalData[control.parentIdMapping] = childRecords[j][control.idMapping];\n                        childRecords.splice(j + 1, 0, originalData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                    else {\n                        if (!childRecords[j].hasOwnProperty(control.childMapping)) {\n                            childRecords[j][control.childMapping] = [];\n                        }\n                        childRecords[j][control.childMapping].push(originalData.taskData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Above') {\n                    childRecords.splice(j, 0, originalData.taskData);\n                    updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                }\n                else if (control.editSettings.newRowPosition === 'Below') {\n                    childRecords.splice(j + 1, 0, originalData.taskData);\n                    updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                }\n            }\n            else {\n                var parentItem = childRecords[j].parentItem;\n                childRecords.splice(j, 1);\n                if (!childRecords.length) {\n                    isChildAll = true;\n                }\n            }\n        }\n        else if (!isNullOrUndefined(childRecords[j][control.childMapping])) {\n            if (removeChildRecords(childRecords[j][control.childMapping], modifiedData, action, key, control, isSelfReference, originalData, columnName)) {\n                updateParentRow(key, childRecords[j], action, control, isSelfReference);\n            }\n        }\n    }\n    return isChildAll;\n}\nexport function updateParentRow(key, record, action, control, isSelfReference, child) {\n    if ((control.editSettings.newRowPosition === 'Above' || control.editSettings.newRowPosition === 'Below')\n        && ((action === 'add' || action === 'batchsave')) && !isNullOrUndefined(child.parentItem)) {\n        var parentData = getParentData(control, child.parentItem.uniqueID);\n        parentData.childRecords.push(child);\n    }\n    else {\n        var currentRecords = control.grid.getCurrentViewRecords();\n        var index_1;\n        currentRecords.map(function (e, i) { if (e[key] === record[key]) {\n            index_1 = i;\n            return;\n        } });\n        record = currentRecords[index_1];\n        record.hasChildRecords = false;\n        if (action === 'add' || action === 'batchsave') {\n            record.expanded = true;\n            record.hasChildRecords = true;\n            if (control.sortSettings.columns.length && isNullOrUndefined(child)) {\n                child = currentRecords.filter(function (e) {\n                    if (e.parentUniqueID === record.uniqueID) {\n                        return e;\n                    }\n                    else {\n                        return null;\n                    }\n                });\n            }\n            var childRecords = child ? child instanceof Array ? child[0] : child : currentRecords[index_1 + 1];\n            if (control.editSettings.newRowPosition !== 'Below') {\n                if (!record.hasOwnProperty('childRecords')) {\n                    record.childRecords = [];\n                }\n                else {\n                    if (!isNullOrUndefined(child) && record[key] !== child[key]) {\n                        record.childRecords.push(child);\n                    }\n                }\n                if (record.childRecords.indexOf(childRecords) === -1 && record[key] !== child[key]) {\n                    record.childRecords.unshift(childRecords);\n                }\n                if (isSelfReference) {\n                    if (!record.hasOwnProperty(control.childMapping)) {\n                        record[control.childMapping] = [];\n                    }\n                    if (record[control.childMapping].indexOf(childRecords) === -1 && record[key] !== child[key]) {\n                        record[control.childMapping].unshift(childRecords);\n                    }\n                }\n            }\n        }\n        var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n        var data = control.grid.dataSource instanceof DataManager ?\n            control.grid.dataSource.dataSource.json : control.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            if (data[i][primaryKeys] === record[primaryKeys]) {\n                data[i] = record;\n                break;\n            }\n        }\n        control.grid.setRowData(key, record);\n        var row = control.getRowByIndex(index_1);\n        if (control.editSettings.mode === 'Batch') {\n            row = control.getRows()[control.grid.getRowIndexByPrimaryKey(record[key])];\n        }\n        var movableRow = void 0;\n        if (control.frozenRows || control.getFrozenColumns()) {\n            movableRow = control.getMovableRowByIndex(index_1);\n        }\n        control.renderModule.cellRender({\n            data: record, cell: row.cells[control.treeColumnIndex] ? row.cells[control.treeColumnIndex]\n                : movableRow.cells[control.treeColumnIndex - control.frozenColumns],\n            column: control.grid.getColumns()[control.treeColumnIndex],\n            requestType: action\n        });\n    }\n}\n","import { merge } from '@syncfusion/ej2-base';\n/**\n * Represents TreeGrid `Column` model class.\n */\nvar Column = /** @class */ (function () {\n    function Column(options) {\n        /**\n         * If `allowEditing` set to false, then it disables editing of a particular column.\n         * By default all columns are editable.\n         * @default true\n         */\n        this.allowEditing = true;\n        /**\n         * Defines the `IEditCell` object to customize default edit cell.\n         * @default {}\n         */\n        this.edit = {};\n        /**\n         * If `disableHtmlEncode` is set to true, it encodes the HTML of the header and content cells.\n         * @default true\n         */\n        this.disableHtmlEncode = true;\n        /**\n         * If `allowReordering` set to false, then it disables reorder of a particular column.\n         * By default all columns can be reorder.\n         * @default true\n         */\n        this.allowReordering = true;\n        /**\n         * If `showColumnMenu` set to false, then it disable the column menu of a particular column.\n         * By default column menu will show for all columns\n         * @default true\n         */\n        this.showColumnMenu = true;\n        /**\n         * If `allowFiltering` set to false, then it disables filtering option and filter bar element of a particular column.\n         * By default all columns are filterable.\n         * @default true\n         */\n        this.allowFiltering = true;\n        /**\n         * If `allowSorting` set to false, then it disables sorting option of a particular column.\n         * By default all columns are sortable.\n         * @default true\n         */\n        this.allowSorting = true;\n        /**\n         * If `allowResizing` is set to false, it disables resize option of a particular column.\n         * By default all the columns can be resized.\n         * @default true\n         */\n        this.allowResizing = true;\n        /**\n         *  It is used to customize the default filter options for a specific columns.\n         * * type -  Specifies the filter type as menu.\n         * * ui - to render custom component for specific column it has following functions.\n         * * ui.create – It is used for creating custom components.\n         * * ui.read -  It is used for read the value from the component.\n         * * ui.write - It is used to apply component model as dynamically.\n         *\n         *  @default null\n         */\n        this.filter = {};\n        merge(this, options);\n    }\n    return Column;\n}());\nexport { Column };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Collection, Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Represents the predicate for the filter column.\n */\nvar Predicate = /** @class */ (function (_super) {\n    __extends(Predicate, _super);\n    function Predicate() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"value\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"matchCase\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"predicate\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualFilterValue\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualOperator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ejpredicate\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"uid\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"isForeignKey\", void 0);\n    return Predicate;\n}(ChildProperty));\nexport { Predicate };\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar FilterSettings = /** @class */ (function (_super) {\n    __extends(FilterSettings, _super);\n    function FilterSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Predicate)\n    ], FilterSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property('FilterBar')\n    ], FilterSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n    __decorate([\n        Property(1500)\n    ], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property('Parent')\n    ], FilterSettings.prototype, \"hierarchyMode\", void 0);\n    return FilterSettings;\n}(ChildProperty));\nexport { FilterSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the textwrap behavior of the TreeGrid.\n */\nvar TextWrapSettings = /** @class */ (function (_super) {\n    __extends(TextWrapSettings, _super);\n    function TextWrapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Both')\n    ], TextWrapSettings.prototype, \"wrapMode\", void 0);\n    return TextWrapSettings;\n}(ChildProperty));\nexport { TextWrapSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { Clipboard as GridClipboard } from '@syncfusion/ej2-grids';\n/**\n * The `Clipboard` module is used to handle clipboard copy action.\n */\nvar TreeClipboard = /** @class */ (function (_super) {\n    __extends(TreeClipboard, _super);\n    function TreeClipboard(parent) {\n        var _this = _super.call(this, parent.grid) || this;\n        _this.treeCopyContent = '';\n        _this.copiedUniqueIdCollection = [];\n        _this.treeGridParent = parent;\n        return _this;\n    }\n    TreeClipboard.prototype.setCopyData = function (withHeader) {\n        var copyContent = 'copyContent';\n        var getCopyData = 'getCopyData';\n        var isSelect = 'isSelect';\n        var uniqueID = 'uniqueID';\n        var currentRecords = this.treeGridParent.getCurrentViewRecords();\n        if (window.getSelection().toString() === '') {\n            this.clipBoardTextArea.value = this[copyContent] = '';\n            var rows = this.treeGridParent.grid.getRows();\n            if (this.treeGridParent.selectionSettings.mode !== 'Cell') {\n                var selectedIndexes = this.treeGridParent.getSelectedRowIndexes().sort(function (a, b) {\n                    return a - b;\n                });\n                for (var i = 0; i < selectedIndexes.length; i++) {\n                    if (i > 0) {\n                        this.treeCopyContent += '\\n';\n                    }\n                    if (!rows[selectedIndexes[i]].classList.contains('e-summaryrow')) {\n                        var cells = [].slice.call(rows[selectedIndexes[i]].querySelectorAll('.e-rowcell'));\n                        var uniqueid = this.treeGridParent.getSelectedRecords()[i][uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            if (this.treeGridParent.copyHierarchyMode === 'Parent' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.parentContentData(currentRecords, selectedIndexes[i], rows, withHeader, i);\n                            }\n                            this[getCopyData](cells, false, '\\t', withHeader);\n                            this.treeCopyContent += this[copyContent];\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[copyContent] = '';\n                            if (this.treeGridParent.copyHierarchyMode === 'Child' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.childContentData(currentRecords, selectedIndexes[i], rows, withHeader);\n                            }\n                        }\n                    }\n                }\n                if (withHeader) {\n                    var headerTextArray = [];\n                    for (var i = 0; i < this.treeGridParent.getVisibleColumns().length; i++) {\n                        headerTextArray[i] = this.treeGridParent.getVisibleColumns()[i].headerText;\n                    }\n                    this[getCopyData](headerTextArray, false, '\\t', withHeader);\n                    this.treeCopyContent = this[copyContent] + '\\n' + this.treeCopyContent;\n                }\n                var args = {\n                    data: this.treeCopyContent,\n                    cancel: false,\n                };\n                this.treeGridParent.trigger(events.beforeCopy, args);\n                if (args.cancel) {\n                    return;\n                }\n                this.clipBoardTextArea.value = this[copyContent] = args.data;\n                if (!Browser.userAgent.match(/ipad|ipod|iphone/i)) {\n                    this.clipBoardTextArea.select();\n                }\n                else {\n                    this.clipBoardTextArea.setSelectionRange(0, this.clipBoardTextArea.value.length);\n                }\n                this[isSelect] = true;\n                this.copiedUniqueIdCollection = [];\n                this.treeCopyContent = '';\n            }\n            else {\n                _super.prototype.setCopyData.call(this, withHeader);\n            }\n        }\n    };\n    TreeClipboard.prototype.parentContentData = function (currentRecords, selectedIndex, rows, withHeader, index) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var parentItem = 'parentItem';\n        var uniqueID = 'uniqueID';\n        var level = 'level';\n        if (!isNullOrUndefined(currentRecords[selectedIndex][parentItem])) {\n            var treeLevel = currentRecords[selectedIndex][parentItem][level];\n            for (var i = 0; i < treeLevel + 1; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(currentRecords[selectedIndex][parentItem]) &&\n                        currentRecords[j][uniqueID] === currentRecords[selectedIndex][parentItem][uniqueID]) {\n                        selectedIndex = j;\n                        var cells = [].slice.call(rows[selectedIndex].querySelectorAll('.e-rowcell'));\n                        var uniqueid = currentRecords[j][uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            this[getCopyData](cells, false, '\\t', withHeader);\n                            if (index > 0) {\n                                this.treeCopyContent = this.treeCopyContent + this[copyContent] + '\\n';\n                            }\n                            else {\n                                this.treeCopyContent = this[copyContent] + '\\n' + this.treeCopyContent;\n                            }\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[copyContent] = '';\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    TreeClipboard.prototype.copy = function (withHeader) {\n        _super.prototype.copy.call(this, withHeader);\n    };\n    TreeClipboard.prototype.paste = function (data, rowIndex, colIndex) {\n        _super.prototype.paste.call(this, data, rowIndex, colIndex);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    TreeClipboard.prototype.getModuleName = function () {\n        return 'clipboard';\n    };\n    ;\n    /**\n     * To destroy the clipboard\n     * @return {void}\n     * @hidden\n     */\n    TreeClipboard.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n    };\n    TreeClipboard.prototype.childContentData = function (currentRecords, selectedIndex, rows, withHeader) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var childRecords = 'childRecords';\n        var hasChildRecords = 'hasChildRecords';\n        var uniqueID = 'uniqueID';\n        if (currentRecords[selectedIndex][hasChildRecords]) {\n            var childData = currentRecords[selectedIndex][childRecords];\n            for (var i = 0; i < childData.length; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(childData[i][uniqueID]) && currentRecords[j][uniqueID] === childData[i][uniqueID]) {\n                        if ((!isNullOrUndefined(rows[j])) && !rows[j].classList.contains('e-summaryrow')) {\n                            var cells = [].slice.call(rows[j].querySelectorAll('.e-rowcell'));\n                            var uniqueid = currentRecords[j][uniqueID];\n                            if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                                this[getCopyData](cells, false, '\\t', withHeader);\n                                this.treeCopyContent += ('\\n' + this[copyContent]);\n                                this[copyContent] = '';\n                                this.copiedUniqueIdCollection.push(uniqueid);\n                                this.childContentData(currentRecords, j, rows, withHeader);\n                            }\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    return TreeClipboard;\n}(GridClipboard));\nexport { TreeClipboard };\n","/**\n *  @hidden\n */\nexport var load = 'load';\n/** @hidden */\nexport var rowDataBound = 'rowDataBound';\n/** @hidden */\nexport var dataBound = 'dataBound';\n/** @hidden */\nexport var queryCellInfo = 'queryCellInfo';\n/** @hidden */\nexport var beforeDataBound = 'beforeDataBound';\n/** @hidden */\nexport var actionBegin = 'actionBegin';\n/** @hidden */\nexport var dataStateChange = 'dataStateChange';\n/** @hidden */\nexport var actionComplete = 'actionComplete';\n/** @hidden */\nexport var rowSelecting = 'rowSelecting';\n/** @hidden */\nexport var rowSelected = 'rowSelected';\n/** @hidden */\nexport var checkboxChange = 'checkboxChange';\n/** @hidden */\nexport var rowDeselected = 'rowDeselected';\n/** @hidden */\nexport var toolbarClick = 'toolbarClick';\n/** @hidden */\nexport var beforeExcelExport = 'beforeExcelExport';\n/** @hidden */\nexport var beforePdfExport = 'beforePdfExport';\n/** @hidden */\nexport var resizeStop = 'resizeStop';\n/** @hidden */\nexport var expanded = 'expanded';\n/** @hidden */\nexport var expanding = 'expanding';\n/** @hidden */\nexport var collapsed = 'collapsed';\n/** @hidden */\nexport var collapsing = 'collapsing';\n/** @hidden */\nexport var remoteExpand = 'remoteExpand';\n/** @hidden */\nexport var localPagedExpandCollapse = 'localPagedExpandCollapse';\n/** @hidden */\nexport var pagingActions = 'pagingActions';\n/** @hidden */\nexport var printGridInit = 'printGrid-Init';\n/** @hidden */\nexport var contextMenuOpen = 'contextMenuOpen';\n/** @hidden */\nexport var contextMenuClick = 'contextMenuClick';\n/** @hidden */\nexport var beforeCopy = 'beforeCopy';\n/** @hidden */\nexport var beforePaste = 'beforePaste';\n/** @hidden */\nexport var savePreviousRowPosition = 'savePreviousRowPosition';\n/** @hidden */\nexport var crudAction = 'crudAction';\n/** @hidden */\nexport var beginEdit = 'beginEdit';\n/** @hidden */\nexport var beginAdd = 'beginAdd';\n/** @hidden */\nexport var recordDoubleClick = 'recordDoubleClick';\n/** @hidden */\nexport var cellSave = 'cellSave';\n/** @hidden */\nexport var cellSaved = 'cellSaved';\n/** @hidden */\nexport var cellEdit = 'cellEdit';\n/** @hidden */\nexport var batchDelete = 'batchDelete';\n/** @hidden */\nexport var batchCancel = 'batchCancel';\n/** @hidden */\nexport var batchAdd = 'batchAdd';\n/** @hidden */\nexport var beforeBatchDelete = 'beforeBatchDelete';\n/** @hidden */\nexport var beforeBatchAdd = 'beforeBatchAdd';\n/** @hidden */\nexport var beforeBatchSave = 'beforeBatchSave';\n/** @hidden */\nexport var batchSave = 'batchSave';\n/** @hidden */\nexport var keyPressed = 'key-pressed';\n/** @hidden */\nexport var updateData = 'update-data';\n/** @hidden */\nexport var doubleTap = 'double-tap';\n/** @hidden */\nexport var virtualColumnIndex = 'virtualColumnIndex';\n/** @hidden */\nexport var virtualActionArgs = 'virtual-action-args';\n/** @hidden */\nexport var dataListener = 'data-listener';\n/** @hidden */\nexport var indexModifier = 'index-modifier';\n/** @hidden */\nexport var beforeStartEdit = 'edit-form';\n/** @hidden */\nexport var beforeBatchCancel = 'before-batch-cancel';\n/** @hidden */\nexport var batchEditFormRendered = 'batcheditform-rendered';\n/** @hidden */\nexport var detailDataBound = 'detailDataBound';\n/** @hidden */\nexport var rowDrag = 'rowDrag';\n/** @hidden */\nexport var rowDragStartHelper = 'rowDragStartHelper';\n/** @hidden */\nexport var rowDrop = 'rowDrop';\n/** @hidden */\nexport var rowDragStart = 'rowDragStart';\n/** @hidden */\nexport var rowsAdd = 'rows-add';\n/** @hidden */\nexport var rowsRemove = 'rows-remove';\n/** @hidden */\nexport var rowdraging = 'row-draging';\n/** @hidden */\nexport var rowDropped = 'row-dropped';\n","import { isNullOrUndefined, removeClass, isBlazor } from '@syncfusion/ej2-base';\nimport { createCheckBox } from '@syncfusion/ej2-buttons';\nimport { parentsUntil, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { getParentData, isRemoteData, isCheckboxcolumn } from '../utils';\n/**\n * TreeGrid Selection module\n * @hidden\n */\nvar Selection = /** @class */ (function () {\n    /**\n     * Constructor for Selection module\n     */\n    function Selection(parent) {\n        this.parent = parent;\n        this.selectedItems = [];\n        this.selectedIndexes = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Selection.prototype.getModuleName = function () {\n        return 'selection';\n    };\n    Selection.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.headerCheckbox, this);\n        this.parent.on('columnCheckbox', this.columnCheckbox, this);\n        this.parent.on('updateGridActions', this.updateGridActions, this);\n        this.parent.grid.on('colgroup-refresh', this.headerCheckbox, this);\n        this.parent.on('checkboxSelection', this.checkboxSelection, this);\n    };\n    Selection.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.headerCheckbox);\n        this.parent.off('columnCheckbox', this.columnCheckbox);\n        this.parent.grid.off('colgroup-refresh', this.headerCheckbox);\n        this.parent.off('checkboxSelection', this.checkboxSelection);\n        this.parent.off('updateGridActions', this.updateGridActions);\n    };\n    /**\n     * To destroy the Selection\n     * @return {void}\n     * @hidden\n     */\n    Selection.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Selection.prototype.checkboxSelection = function (args) {\n        var target = getObject('target', args);\n        var checkWrap = parentsUntil(target, 'e-checkbox-wrapper');\n        var checkBox;\n        if (checkWrap && checkWrap.querySelectorAll('.e-treecheckselect').length > 0) {\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            var rowIndex = void 0;\n            rowIndex = [];\n            rowIndex.push(target.closest('tr').rowIndex);\n            this.selectCheckboxes(rowIndex);\n            this.triggerChkChangeEvent(checkBox, checkBox.nextElementSibling.classList.contains('e-check'), target.closest('tr'));\n        }\n        else if (checkWrap && checkWrap.querySelectorAll('.e-treeselectall').length > 0 && this.parent.autoCheckHierarchy) {\n            var checkBoxvalue = !checkWrap.querySelector('.e-frame').classList.contains('e-check')\n                && !checkWrap.querySelector('.e-frame').classList.contains('e-stop');\n            this.headerSelection(checkBoxvalue);\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            this.triggerChkChangeEvent(checkBox, checkBoxvalue, target.closest('tr'));\n        }\n    };\n    Selection.prototype.triggerChkChangeEvent = function (checkBox, checkState, rowElement) {\n        var data = this.parent.getCurrentViewRecords()[rowElement.rowIndex];\n        var args = { checked: checkState, target: checkBox, rowElement: rowElement,\n            rowData: checkBox.classList.contains('e-treeselectall')\n                ? this.parent.getCheckedRecords() : data };\n        this.parent.trigger(events.checkboxChange, args);\n    };\n    Selection.prototype.getCheckboxcolumnIndex = function () {\n        var mappingUid;\n        var columnIndex;\n        var columns = (this.parent.columns);\n        for (var col = 0; col < columns.length; col++) {\n            if (columns[col].showCheckbox) {\n                mappingUid = this.parent.columns[col].uid;\n            }\n        }\n        var headerCelllength = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv').length;\n        for (var j = 0; j < headerCelllength; j++) {\n            var headercell = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[j];\n            if (headercell.getAttribute('e-mappinguid') === mappingUid) {\n                columnIndex = j;\n            }\n        }\n        return columnIndex;\n    };\n    Selection.prototype.headerCheckbox = function () {\n        this.columnIndex = this.getCheckboxcolumnIndex();\n        if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length === 0) {\n            var headerElement = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[this.columnIndex];\n            var checkWrap = void 0;\n            var value = false;\n            var rowChkBox = this.parent.createElement('input', { className: 'e-treeselectall', attrs: { 'type': 'checkbox' } });\n            checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n            checkWrap.classList.add('e-hierarchycheckbox');\n            checkWrap.querySelector('.e-frame').style.width = '18px';\n            checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n            if (!isNullOrUndefined(headerElement)) {\n                headerElement.insertBefore(checkWrap, headerElement.firstChild);\n            }\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n        else if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length > 0) {\n            var checkWrap = this.parent.getHeaderContent().querySelectorAll('.e-checkbox-wrapper')[0];\n            var checkBoxvalue = checkWrap.querySelector('.e-frame').classList.contains('e-check');\n            if (this.parent.autoCheckHierarchy && checkBoxvalue) {\n                this.headerSelection(checkBoxvalue);\n            }\n        }\n    };\n    Selection.prototype.renderColumnCheckbox = function (args) {\n        var checkWrap;\n        var rowChkBox = this.parent.createElement('input', { className: 'e-treecheckselect', attrs: { 'type': 'checkbox' } });\n        var data = args.data;\n        args.cell.classList.add('e-treegridcheckbox');\n        args.cell.setAttribute('aria-label', 'checkbox');\n        var value = (isNullOrUndefined(data.checkboxState) || data.checkboxState === 'uncheck') ? false : true;\n        checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n        checkWrap.classList.add('e-hierarchycheckbox');\n        checkWrap.querySelector('.e-frame').style.width = '18px';\n        if (data.checkboxState === 'indeterminate') {\n            var checkbox = checkWrap.querySelectorAll('.e-frame')[0];\n            removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            checkWrap.querySelector('.e-frame').classList.add('e-stop');\n        }\n        checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n        return checkWrap;\n    };\n    Selection.prototype.columnCheckbox = function (container) {\n        var checkWrap = this.renderColumnCheckbox(container);\n        var containerELe = container.cell.querySelector('.e-treecolumn-container');\n        if (!isNullOrUndefined(containerELe)) {\n            containerELe.insertBefore(checkWrap, containerELe.querySelectorAll('.e-treecell')[0]);\n        }\n        else {\n            var spanEle = this.parent.createElement('span', { className: 'e-treecheckbox' });\n            var data = container.cell.innerHTML;\n            container.cell.innerHTML = '';\n            spanEle.innerHTML = data;\n            var divEle = this.parent.createElement('div', { className: 'e-treecheckbox-container' });\n            divEle.appendChild(checkWrap);\n            divEle.appendChild(spanEle);\n            container.cell.appendChild(divEle);\n        }\n    };\n    Selection.prototype.selectCheckboxes = function (rowIndexes) {\n        var adaptorName = 'adaptorName';\n        for (var i = 0; i < rowIndexes.length; i++) {\n            var record = this.parent.getCurrentViewRecords()[rowIndexes[i]];\n            var flatRecord = getParentData(this.parent, record.uniqueID);\n            record = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n                record : flatRecord;\n            var checkboxState = (record.checkboxState === 'uncheck') ? 'check' : 'uncheck';\n            record.checkboxState = checkboxState;\n            var keys = Object.keys(record);\n            for (var j = 0; j < keys.length; j++) {\n                if (flatRecord.hasOwnProperty(keys[j])) {\n                    flatRecord[keys[j]] = record[keys[j]];\n                }\n            }\n            this.traverSelection(record, checkboxState, false);\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.traverSelection = function (record, checkboxState, ischildItem) {\n        var length = 0;\n        this.updateSelectedItems(record, checkboxState);\n        if (!ischildItem && record.parentItem && this.parent.autoCheckHierarchy) {\n            this.updateParentSelection(record.parentItem);\n        }\n        if (record.childRecords && this.parent.autoCheckHierarchy) {\n            var childRecords = record.childRecords;\n            if (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n                childRecords = this.getFilteredChildRecords(childRecords);\n            }\n            length = childRecords.length;\n            for (var count = 0; count < length; count++) {\n                if (!childRecords[count].isSummaryRow) {\n                    if (childRecords[count].hasChildRecords) {\n                        this.traverSelection(childRecords[count], checkboxState, true);\n                    }\n                    else {\n                        this.updateSelectedItems(childRecords[count], checkboxState);\n                    }\n                }\n            }\n        }\n    };\n    Selection.prototype.getFilteredChildRecords = function (childRecords) {\n        var _this = this;\n        var filteredChildRecords = childRecords.filter(function (e) {\n            return _this.parent.filterModule.filteredResult.indexOf(e) > -1;\n        });\n        return filteredChildRecords;\n    };\n    Selection.prototype.updateParentSelection = function (parentRecord) {\n        var adaptorName = 'adaptorName';\n        var length = 0;\n        var childRecords = [];\n        var record = getParentData(this.parent, parentRecord.uniqueID);\n        if (record && record.childRecords) {\n            childRecords = record.childRecords;\n        }\n        if (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n            childRecords = this.getFilteredChildRecords(childRecords);\n        }\n        length = childRecords && childRecords.length;\n        var indeter = 0;\n        var checkChildRecords = 0;\n        if (!isNullOrUndefined(record)) {\n            var _loop_1 = function (i) {\n                var childRecord = this_1.parent.getCurrentViewRecords().filter(function (e) {\n                    return e.uniqueID === childRecords[i].uniqueID;\n                });\n                var currentRecord = getParentData(this_1.parent, childRecords[i].uniqueID);\n                var checkBoxRecord = (isBlazor() && this_1.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n                    childRecord[0] : currentRecord;\n                if (!isNullOrUndefined(checkBoxRecord)) {\n                    if (checkBoxRecord.checkboxState === 'indeterminate') {\n                        indeter++;\n                    }\n                    else if (checkBoxRecord.checkboxState === 'check') {\n                        checkChildRecords++;\n                    }\n                }\n            };\n            var this_1 = this;\n            for (var i = 0; i < childRecords.length; i++) {\n                _loop_1(i);\n            }\n            if (indeter > 0 || (checkChildRecords > 0 && checkChildRecords !== length)) {\n                record.checkboxState = 'indeterminate';\n            }\n            else if (checkChildRecords === 0 && indeter === 0) {\n                record.checkboxState = 'uncheck';\n            }\n            else {\n                record.checkboxState = 'check';\n            }\n            this.updateSelectedItems(record, record.checkboxState);\n            if (record.parentItem) {\n                this.updateParentSelection(record.parentItem);\n            }\n        }\n    };\n    Selection.prototype.headerSelection = function (checkAll) {\n        var _this = this;\n        var adaptorName = 'adaptorName';\n        var index = -1;\n        var length = 0;\n        var data = (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0) ? this.parent.filterModule.filteredResult :\n            this.parent.flatData;\n        data = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') || isRemoteData(this.parent) ?\n            this.parent.getCurrentViewRecords() : data;\n        if (!isNullOrUndefined(checkAll)) {\n            for (var i = 0; i < data.length; i++) {\n                if (checkAll) {\n                    if (data[i].checkboxState === 'check') {\n                        continue;\n                    }\n                    data[i].checkboxState = 'check';\n                    this.updateSelectedItems(data[i], data[i].checkboxState);\n                }\n                else {\n                    index = this.selectedItems.indexOf(data[i]);\n                    if (index > -1) {\n                        data[i].checkboxState = 'uncheck';\n                        this.updateSelectedItems(data[i], data[i].checkboxState);\n                        if (this.parent.autoCheckHierarchy) {\n                            this.updateParentSelection(data[i]);\n                        }\n                    }\n                }\n            }\n        }\n        if (checkAll === false && this.parent.enableVirtualization) {\n            this.selectedItems = [];\n            this.selectedIndexes = [];\n            data.filter(function (rec) {\n                rec.checkboxState = 'uncheck';\n                _this.updateSelectedItems(rec, rec.checkboxState);\n            });\n        }\n        length = this.selectedItems.length;\n        var checkbox = this.parent.getHeaderContent().querySelectorAll('.e-frame')[0];\n        if (length > 0 && data.length > 0) {\n            if (length !== data.length && !checkAll) {\n                removeClass([checkbox], ['e-check']);\n                checkbox.classList.add('e-stop');\n            }\n            else {\n                removeClass([checkbox], ['e-stop']);\n                checkbox.classList.add('e-check');\n            }\n        }\n        else {\n            removeClass([checkbox], ['e-check', 'e-stop']);\n        }\n    };\n    Selection.prototype.updateSelectedItems = function (currentRecord, checkState, filter) {\n        var record = this.parent.getCurrentViewRecords().filter(function (e) {\n            return e.uniqueID === currentRecord.uniqueID;\n        });\n        var checkedRecord;\n        var adaptorName = 'adaptorName';\n        var recordIndex = this.parent.getCurrentViewRecords().indexOf(record[0]);\n        var checkboxRecord = getParentData(this.parent, currentRecord.uniqueID);\n        var checkbox;\n        if (recordIndex > -1) {\n            var tr = this.parent.getRows()[recordIndex];\n            var movableTr = void 0;\n            if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                movableTr = this.parent.getMovableDataRows()[recordIndex];\n            }\n            checkbox = tr.querySelectorAll('.e-frame')[0] ? tr.querySelectorAll('.e-frame')[0]\n                : movableTr.querySelectorAll('.e-frame')[0];\n            if (!isNullOrUndefined(checkbox)) {\n                removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            }\n        }\n        checkedRecord = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n            record[0] : checkboxRecord;\n        if (isNullOrUndefined(checkedRecord)) {\n            checkedRecord = currentRecord;\n        }\n        checkedRecord.checkboxState = checkState;\n        if (checkState === 'check' && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            if (recordIndex !== -1 && this.selectedIndexes.indexOf(recordIndex) === -1) {\n                this.selectedIndexes.push(recordIndex);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (recordIndex !== -1 &&\n                (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0))) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length === 0)) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && isNullOrUndefined(this.parent.filterModule)) {\n                this.selectedItems.push(checkedRecord);\n            }\n        }\n        else if ((checkState === 'uncheck' || checkState === 'indeterminate') && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            var index = this.selectedItems.indexOf(checkedRecord);\n            if (index !== -1) {\n                this.selectedItems.splice(index, 1);\n            }\n            if (this.selectedIndexes.indexOf(recordIndex) !== -1) {\n                var checkedIndex = this.selectedIndexes.indexOf(recordIndex);\n                this.selectedIndexes.splice(checkedIndex, 1);\n            }\n        }\n        var checkBoxclass = checkState === 'indeterminate' ? 'e-stop' : 'e-' + checkState;\n        if (recordIndex > -1) {\n            if (!isNullOrUndefined(checkbox)) {\n                checkbox.classList.add(checkBoxclass);\n            }\n        }\n    };\n    Selection.prototype.updateGridActions = function (args) {\n        var _this = this;\n        var requestType = args.requestType;\n        var childData;\n        var childLength;\n        if (isCheckboxcolumn(this.parent)) {\n            if (this.parent.autoCheckHierarchy) {\n                if ((requestType === 'sorting' || requestType === 'paging')) {\n                    var rows = this.parent.grid.getRows();\n                    childData = this.parent.getCurrentViewRecords();\n                    childLength = childData.length;\n                    this.selectedIndexes = [];\n                    for (var i = 0; i < childLength; i++) {\n                        if (!rows[i].classList.contains('e-summaryrow')) {\n                            this.updateSelectedItems(childData[i], childData[i].checkboxState, true);\n                        }\n                    }\n                }\n                else if (requestType === 'delete' || args.action === 'add') {\n                    var updatedData = [];\n                    if (requestType === 'delete') {\n                        updatedData = args.data;\n                    }\n                    else {\n                        updatedData.push(args.data);\n                    }\n                    for (var i = 0; i < updatedData.length; i++) {\n                        if (requestType === 'delete') {\n                            var index = this.parent.flatData.indexOf(updatedData[i]);\n                            var checkedIndex = this.selectedIndexes.indexOf(index);\n                            this.selectedIndexes.splice(checkedIndex, 1);\n                            this.updateSelectedItems(updatedData[i], 'uncheck');\n                        }\n                        if (!isNullOrUndefined(updatedData[i].parentItem)) {\n                            this.updateParentSelection(updatedData[i].parentItem);\n                        }\n                    }\n                }\n                else if (args.requestType === 'add' && this.parent.autoCheckHierarchy) {\n                    args.data.checkboxState = 'uncheck';\n                }\n                else if (requestType === 'filtering' || requestType === 'searching' || requestType === 'refresh'\n                    && !isRemoteData(this.parent)) {\n                    this.selectedItems = [];\n                    this.selectedIndexes = [];\n                    childData = (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0) ?\n                        this.parent.getCurrentViewRecords() : this.parent.flatData;\n                    childData.forEach(function (record) {\n                        if (record.hasChildRecords) {\n                            _this.updateParentSelection(record);\n                        }\n                        else {\n                            _this.updateSelectedItems(record, record.checkboxState);\n                        }\n                    });\n                    this.headerSelection();\n                }\n            }\n        }\n    };\n    Selection.prototype.getCheckedrecords = function () {\n        return this.selectedItems;\n    };\n    Selection.prototype.getCheckedRowIndexes = function () {\n        return this.selectedIndexes;\n    };\n    return Selection;\n}());\nexport { Selection };\n","import * as events from '../base/constant';\nimport { Grid, getObject, Print as GridPrint } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Print module\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for Print module\n     */\n    function Print(parent) {\n        this.parent = parent;\n        Grid.Inject(GridPrint);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Print.prototype.getModuleName = function () {\n        return 'print';\n    };\n    /**\n     * @hidden\n     */\n    Print.prototype.addEventListener = function () {\n        this.parent.grid.on(events.printGridInit, this.printTreeGrid, this);\n    };\n    Print.prototype.removeEventListener = function () {\n        this.parent.grid.off(events.printGridInit, this.printTreeGrid);\n    };\n    Print.prototype.printTreeGrid = function (printGrid) {\n        var grid = getObject('printgrid', printGrid);\n        var gridElement = getObject('element', printGrid);\n        grid.addEventListener(events.queryCellInfo, this.parent.grid.queryCellInfo);\n        grid.addEventListener(events.rowDataBound, this.parent.grid.rowDataBound);\n        grid.addEventListener(events.beforeDataBound, this.parent.grid.beforeDataBound);\n        addClass([gridElement], 'e-treegrid');\n    };\n    Print.prototype.print = function () {\n        this.parent.grid.print();\n    };\n    /**\n     * To destroy the Print\n     * @return {void}\n     * @hidden\n     */\n    Print.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Print;\n}());\nexport { Print };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar SearchSettings = /** @class */ (function (_super) {\n    __extends(SearchSettings, _super);\n    function SearchSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"fields\", void 0);\n    __decorate([\n        Property(false)\n    ], SearchSettings.prototype, \"ignoreCase\", void 0);\n    __decorate([\n        Property('contains')\n    ], SearchSettings.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"hierarchyMode\", void 0);\n    return SearchSettings;\n}(ChildProperty));\nexport { SearchSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the selection behavior of the TreeGrid.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], SelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"persistSelection\", void 0);\n    __decorate([\n        Property('Default')\n    ], SelectionSettings.prototype, \"checkboxMode\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"checkboxOnly\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n","import { getObject, appendChildren } from '@syncfusion/ej2-grids';\nimport { addClass, createElement, isNullOrUndefined, getValue } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { isRemoteData, isOffline, getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * TreeGrid render module\n * @hidden\n */\nvar Render = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function Render(parent) {\n        this.parent = parent;\n        this.templateResult = null;\n        this.parent.grid.on('template-result', this.columnTemplateResult, this);\n    }\n    /**\n     * Updated row elements for TreeGrid\n     */\n    Render.prototype.RowModifier = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var data = args.data;\n        var parentData = data.parentItem;\n        var index;\n        if (!isNullOrUndefined(data.parentItem) && !isFilterChildHierarchy(this.parent) &&\n            (!(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root')) ||\n                (isRemoteData(this.parent) && !isOffline(this.parent)))) {\n            index = data.parentItem.index;\n            var collapsed = (this.parent.initialRender && (!(isNullOrUndefined(parentData[this.parent.expandStateMapping]) ||\n                parentData[this.parent.expandStateMapping]) || this.parent.enableCollapseAll)) ||\n                !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n            if (collapsed) {\n                args.row.style.display = 'none';\n            }\n        }\n        else {\n            index = +args.row.getAttribute('aria-rowindex');\n        }\n        if (isRemoteData(this.parent) && !isOffline(this.parent)) {\n            var proxy_1 = this.parent;\n            var parentrec = this.parent.getCurrentViewRecords().filter(function (rec) {\n                return getValue(proxy_1.idMapping, rec) === getValue(proxy_1.parentIdMapping, data);\n            });\n            if (parentrec.length > 0) {\n                var display = parentrec[0].expanded ? 'table-row' : 'none';\n                args.row.setAttribute('style', 'display: ' + display + ';');\n            }\n        }\n        //addClass([args.row], 'e-gridrowindex' + index + 'level' + (<ITreeData>args.data).level);\n        var summaryRow = getObject('isSummaryRow', args.data);\n        if (summaryRow) {\n            addClass([args.row], 'e-summaryrow');\n        }\n        if (args.row.querySelector('.e-treegridexpand')) {\n            args.row.setAttribute('aria-expanded', 'true');\n        }\n        else if (args.row.querySelector('.e-treegridcollapse')) {\n            args.row.setAttribute('aria-expanded', 'false');\n        }\n        if (this.parent.enableCollapseAll && this.parent.initialRender) {\n            if (!isNullOrUndefined(data.parentItem)) {\n                args.row.style.display = 'none';\n            }\n        }\n        this.parent.trigger(events.rowDataBound, args);\n    };\n    /**\n     * cell renderer for tree column index cell\n     */\n    Render.prototype.cellRender = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var grid = this.parent.grid;\n        var data = args.data;\n        var index;\n        var ispadfilter = isNullOrUndefined(data.filterLevel);\n        var pad = ispadfilter ? data.level : data.filterLevel;\n        var totalIconsWidth = 0;\n        var cellElement;\n        var column = this.parent.getColumnByField(args.column.field);\n        var summaryRow = data.isSummaryRow;\n        if (!isNullOrUndefined(data.parentItem)) {\n            index = data.parentItem.index;\n        }\n        else {\n            index = data.index;\n        }\n        if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex\n            && (args.requestType === 'add' || args.requestType === 'delete' || isNullOrUndefined(args.cell.querySelector('.e-treecell')))) {\n            var container = createElement('div', { className: 'e-treecolumn-container' });\n            var emptyExpandIcon = createElement('span', {\n                className: 'e-icons e-none',\n                styles: 'width: 10px; display: inline-block'\n            });\n            for (var n = 0; n < pad; n++) {\n                totalIconsWidth += 10;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            var iconRequired = !isNullOrUndefined(data.hasFilteredChildRecords)\n                ? data.hasFilteredChildRecords : data.hasChildRecords;\n            if (iconRequired && !isNullOrUndefined(data.childRecords)) {\n                iconRequired = !(data.childRecords.length === 0);\n            }\n            if (iconRequired) {\n                addClass([args.cell], 'e-treerowcell');\n                var expandIcon = createElement('span', { className: 'e-icons' });\n                var expand = void 0;\n                if (this.parent.initialRender) {\n                    expand = data.expanded &&\n                        (isNullOrUndefined(data[this.parent.expandStateMapping]) || data[this.parent.expandStateMapping]) &&\n                        !this.parent.enableCollapseAll;\n                }\n                else {\n                    expand = !(!data.expanded || !getExpandStatus(this.parent, data, this.parent.grid.getCurrentViewRecords()));\n                }\n                var collapsed = true;\n                if (!isNullOrUndefined(data.parentItem) && (!isNullOrUndefined(data[this.parent.expandStateMapping])\n                    && data[this.parent.expandStateMapping])\n                    && !(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root'))) {\n                    collapsed = !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n                }\n                addClass([expandIcon], (expand && collapsed) ? 'e-treegridexpand' : 'e-treegridcollapse');\n                totalIconsWidth += 18;\n                container.appendChild(expandIcon);\n                emptyExpandIcon.style.width = '7px';\n                totalIconsWidth += 7;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            else if (pad || !pad && !data.level) {\n                // icons width\n                totalIconsWidth += 20;\n                container.appendChild(emptyExpandIcon.cloneNode());\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            //should add below code when paging funcitonality implemented\n            // if (data.hasChildRecords) {\n            //     addClass([expandIcon], data.expanded ? 'e-treegridexpand' : 'e-treegridcollapse');\n            // }\n            cellElement = createElement('span', { className: 'e-treecell' });\n            if (this.parent.allowTextWrap) {\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            this.updateTreeCell(args, cellElement, container);\n            container.appendChild(cellElement);\n            args.cell.appendChild(container);\n        }\n        if (this.parent.frozenColumns > this.parent.treeColumnIndex &&\n            grid.getColumnIndexByUid(args.column.uid) === this.parent.frozenColumns + 1) {\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n        }\n        if (!isNullOrUndefined(column) && column.showCheckbox) {\n            this.parent.notify('columnCheckbox', args);\n            if (this.parent.allowTextWrap) {\n                var checkboxElement = args.cell.querySelectorAll('.e-frame')[0];\n                var width = parseInt(checkboxElement.style.width, 16);\n                totalIconsWidth += width;\n                totalIconsWidth += 10;\n                if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n                    cellElement = args.cell.querySelector('.e-treecell');\n                }\n                else {\n                    cellElement = args.cell.querySelector('.e-treecheckbox');\n                }\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n        }\n        if (summaryRow) {\n            addClass([args.cell], 'e-summarycell');\n            var summaryData = getObject(args.column.field, args.data);\n            args.cell.querySelector('.e-treecell') != null ?\n                args.cell.querySelector('.e-treecell').innerHTML = summaryData : args.cell.innerHTML = summaryData;\n        }\n        if (isNullOrUndefined(this.parent.rowTemplate)) {\n            this.parent.trigger(events.queryCellInfo, args);\n        }\n    };\n    Render.prototype.updateTreeCell = function (args, cellElement, container) {\n        var textContent = args.cell.querySelector('.e-treecell') != null ?\n            args.cell.querySelector('.e-treecell').innerHTML : args.cell.innerHTML;\n        if (typeof (args.column.template) === 'object' && this.templateResult) {\n            appendChildren(cellElement, this.templateResult);\n            this.templateResult = null;\n            args.cell.innerHTML = '';\n        }\n        else if (args.cell.classList.contains('e-templatecell')) {\n            var len = args.cell.children.length;\n            for (var i = 0; i < len; len = args.cell.children.length) {\n                cellElement.appendChild(args.cell.children[i]);\n            }\n        }\n        else {\n            cellElement.innerHTML = textContent;\n            args.cell.innerHTML = '';\n        }\n    };\n    Render.prototype.columnTemplateResult = function (args) {\n        this.templateResult = args.template;\n    };\n    Render.prototype.destroy = function () {\n        this.parent.grid.off('template-result', this.columnTemplateResult);\n    };\n    return Render;\n}());\nexport { Render };\n","import { extend, isNullOrUndefined, setValue, getValue, isBlazor, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { DataManager, Query, DataUtil } from '@syncfusion/ej2-data';\nimport { showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { getObject, getUid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, isCountRequired } from '../utils';\nimport * as events from './constant';\n/**\n * Internal dataoperations for tree grid\n * @hidden\n */\nvar DataManipulation = /** @class */ (function () {\n    function DataManipulation(grid) {\n        this.addedRecords = 'addedRecords';\n        this.parent = grid;\n        this.parentItems = [];\n        this.taskIds = [];\n        this.hierarchyData = [];\n        this.storedIndex = -1;\n        this.sortedData = [];\n        this.isSortAction = false;\n        this.addEventListener();\n        this.dataResults = {};\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n    }\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.addEventListener = function () {\n        this.parent.on('updateRemoteLevel', this.updateParentRemoteData, this);\n        this.parent.grid.on('sorting-begin', this.beginSorting, this);\n        this.parent.on('updateAction', this.updateData, this);\n        this.parent.on(events.remoteExpand, this.collectExpandingRecs, this);\n        this.parent.on('dataProcessor', this.dataProcessor, this);\n    };\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.remoteExpand, this.collectExpandingRecs);\n        this.parent.off('updateRemoteLevel', this.updateParentRemoteData);\n        this.parent.off('updateAction', this.updateData);\n        this.parent.off('dataProcessor', this.dataProcessor);\n        this.parent.grid.off('sorting-begin', this.beginSorting);\n    };\n    /**\n     * To destroy the dataModule\n     * @return {void}\n     * @hidden\n     */\n    DataManipulation.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /** @hidden */\n    DataManipulation.prototype.isRemote = function () {\n        if (!(this.parent.dataSource instanceof DataManager)) {\n            return false;\n        }\n        return true;\n        // let gridData:  DataManager = <DataManager>this.parent.dataSource;\n        // return gridData.dataSource.offline !== true && gridData.dataSource.url !== undefined;\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.convertToFlatData = function (data) {\n        var _this = this;\n        this.parent.flatData = (Object.keys(data).length === 0 && !(this.parent.dataSource instanceof DataManager) ?\n            this.parent.dataSource : []);\n        this.parent.parentData = [];\n        var adaptorName = 'adaptorName';\n        if ((isRemoteData(this.parent) && !isOffline(this.parent)) && data instanceof DataManager && !(data instanceof Array)) {\n            var dm = this.parent.dataSource;\n            if (this.parent.parentIdMapping) {\n                this.parent.query = isNullOrUndefined(this.parent.query) ?\n                    new Query() : this.parent.query;\n                if (this.parent.parentIdMapping) {\n                    if (this.parent.initialRender) {\n                        this.parent.query.where(this.parent.parentIdMapping, 'equal', null);\n                        this.parent.query.addParams('IdMapping', this.parent.idMapping);\n                    }\n                }\n                var clientRender = 'isClientRender';\n                if (!this.parent.hasChildMapping && !(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender])) {\n                    var qry = this.parent.query.clone();\n                    qry.queries = [];\n                    qry = qry.select([this.parent.parentIdMapping]);\n                    qry.isCountRequired = true;\n                    dm.executeQuery(qry).then(function (e) {\n                        _this.parentItems = DataUtil.distinct(e.result, _this.parent.parentIdMapping, false);\n                        var req = getObject('dataSource.requests', _this.parent).filter(function (e) {\n                            return e.httpRequest.statusText !== 'OK';\n                        }).length;\n                        if (req === 0) {\n                            setValue('grid.contentModule.isLoaded', true, _this.parent);\n                            if (!isNullOrUndefined(_this.zerothLevelData)) {\n                                setValue('cancel', false, _this.zerothLevelData);\n                                getValue('grid.renderModule', _this.parent).dataManagerSuccess(_this.zerothLevelData);\n                                _this.zerothLevelData = null;\n                            }\n                            _this.parent.grid.hideSpinner();\n                        }\n                    });\n                }\n            }\n        }\n        else if (data instanceof Array) {\n            this.hierarchyData = [];\n            this.taskIds = [];\n            for (var i = 0; i < Object.keys(data).length; i++) {\n                var tempData = data[i];\n                this.hierarchyData.push(extend({}, tempData));\n                if (!isNullOrUndefined(tempData[this.parent.idMapping])) {\n                    this.taskIds.push(tempData[this.parent.idMapping]);\n                }\n            }\n            if (this.isSelfReference) {\n                var selfData = [];\n                var mappingData = new DataManager(this.hierarchyData).executeLocal(new Query()\n                    .group(this.parent.parentIdMapping));\n                for (var i = 0; i < mappingData.length; i++) {\n                    var groupData = mappingData[i];\n                    var index = this.taskIds.indexOf(groupData.key);\n                    if (!isNullOrUndefined(groupData.key)) {\n                        if (index > -1) {\n                            var childData = (groupData.items);\n                            this.hierarchyData[index][this.parent.childMapping] = childData;\n                            continue;\n                        }\n                    }\n                    selfData.push.apply(selfData, groupData.items);\n                }\n                this.hierarchyData = this.selfReferenceUpdate(selfData);\n            }\n            if (!Object.keys(this.hierarchyData).length) {\n                this.parent.flatData = (!(this.parent.dataSource instanceof DataManager) ? this.parent.dataSource : []);\n            }\n            else {\n                this.createRecords(this.hierarchyData);\n            }\n            this.storedIndex = -1;\n        }\n        // else if (data instanceof DataManager && this.parent.isLocalData) {\n        //   this.convertToFlatData(data.dataSource.json);\n        // }\n        //this.crudActions();\n    };\n    // private crudActions(): void {\n    //   if (this.parent.dataSource instanceof DataManager && (this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n    //     let oldUpdate: Function = this.parent.dataSource.adaptor.update;\n    //     this.parent.dataSource.adaptor.update =\n    //         function (dm: DataManager, keyField: string, value: Object, tableName?: string, query?: Query, original?: Object): Object {\n    //                value = getPlainData(value);\n    //                return oldUpdate.apply(this, [dm, keyField, value, tableName, query, original]);\n    //              }\n    //   }\n    // }\n    DataManipulation.prototype.selfReferenceUpdate = function (selfData) {\n        var result = [];\n        while (this.hierarchyData.length > 0 && selfData.length > 0) {\n            var index = selfData.indexOf(this.hierarchyData[0]);\n            if (index === -1) {\n                this.hierarchyData.shift();\n            }\n            else {\n                result.push(this.hierarchyData.shift());\n                selfData.splice(index, 1);\n            }\n        }\n        return result;\n    };\n    /**\n     * Function to update the zeroth level parent records in remote binding\n     * @hidden\n     */\n    DataManipulation.prototype.updateParentRemoteData = function (args) {\n        var records = args.result;\n        var adaptorName = 'adaptorName';\n        var clientRender = 'isClientRender';\n        if (!this.parent.hasChildMapping && !this.parentItems.length &&\n            (!(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]) && !this.parent.loadChildOnDemand)) {\n            this.zerothLevelData = args;\n            setValue('cancel', true, args);\n        }\n        else {\n            if (!(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]) && !this.parent.loadChildOnDemand) {\n                for (var rec = 0; rec < records.length; rec++) {\n                    if ((records[rec][this.parent.hasChildMapping] || this.parentItems.indexOf(records[rec][this.parent.idMapping]) !== -1)\n                        && (isNullOrUndefined(records[rec].index))) {\n                        records[rec].taskData = extend({}, records[rec]);\n                        records[rec].uniqueID = getUid(this.parent.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + records[rec].uniqueID, records[rec], this.parent);\n                        records[rec].level = 0;\n                        records[rec].index = Math.ceil(Math.random() * 1000);\n                        records[rec].hasChildRecords = true;\n                        records[rec].checkboxState = 'uncheck';\n                    }\n                }\n            }\n            else {\n                if (!isNullOrUndefined(records)) {\n                    this.convertToFlatData(records);\n                }\n            }\n        }\n        args.result = (this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender] && !isNullOrUndefined(records))\n            || this.parent.loadChildOnDemand ? this.parent.flatData : records;\n        this.parent.notify('updateResults', args);\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.collectExpandingRecs = function (rowDetails) {\n        var _this = this;\n        var gridRows = this.parent.getRows();\n        if (this.parent.rowTemplate) {\n            var rows = this.parent.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var childRecord;\n        var adaptorName = 'adaptorName';\n        var args = { row: rowDetails.parentRow, data: rowDetails.record };\n        var clientRender = 'isClientRender';\n        if (rowDetails.rows.length > 0) {\n            rowDetails.record.expanded = true;\n            for (var i = 0; i < rowDetails.rows.length; i++) {\n                if (isBlazor() && this.parent.isServerRendered) {\n                    removeClass([rowDetails.rows[i]], 'e-treerowcollapsed');\n                    addClass([rowDetails.rows[i]], 'e-treerowexpanded');\n                }\n                else {\n                    rowDetails.rows[i].style.display = 'table-row';\n                }\n                if ((isBlazor() && (this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]))\n                    || this.parent.loadChildOnDemand) {\n                    var targetEle = rowDetails.rows[i].getElementsByClassName('e-treegridcollapse')[0];\n                    if (!isNullOrUndefined(targetEle)) {\n                        addClass([targetEle], 'e-treegridexpand');\n                        removeClass([targetEle], 'e-treegridcollapse');\n                    }\n                    childRecord = this.parent.rowTemplate ? this.parent.grid.getCurrentViewRecords()[rowDetails.rows[i].rowIndex] :\n                        this.parent.grid.getRowObjectFromUID(rowDetails.rows[i].getAttribute('data-Uid')).data;\n                    var childRows = [];\n                    childRows = gridRows.filter(function (r) {\n                        return r.querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1));\n                    });\n                    if (childRows.length) {\n                        this.collectExpandingRecs({ record: childRecord, rows: childRows, parentRow: rowDetails.parentRow });\n                    }\n                }\n                var expandingTd = rowDetails.rows[i].querySelector('.e-detailrowcollapse');\n                if (!isNullOrUndefined(expandingTd)) {\n                    this.parent.grid.detailRowModule.expand(expandingTd);\n                }\n            }\n        }\n        else {\n            var dm = this.parent.dataSource;\n            var qry = this.parent.grid.getDataModule().generateQuery();\n            var clonequries = qry.queries.filter(function (e) { return e.fn !== 'onPage' && e.fn !== 'onWhere'; });\n            qry.queries = clonequries;\n            qry.isCountRequired = true;\n            qry.where(this.parent.parentIdMapping, 'equal', rowDetails.record[this.parent.idMapping]);\n            showSpinner(this.parent.element);\n            dm.executeQuery(qry).then(function (e) {\n                var datas = _this.parent.grid.currentViewData;\n                var inx = datas.indexOf(rowDetails.record);\n                var haveChild = getObject('actual.nextLevel', e);\n                var result = e.result;\n                rowDetails.record.childRecords = result;\n                for (var r = 0; r < result.length; r++) {\n                    result[r].taskData = extend({}, result[r]);\n                    result[r].level = rowDetails.record.level + 1;\n                    result[r].index = Math.ceil(Math.random() * 1000);\n                    var parentData = extend({}, rowDetails.record);\n                    delete parentData.childRecords;\n                    result[r].parentItem = parentData;\n                    result[r].parentUniqueID = rowDetails.record.uniqueID;\n                    result[r].uniqueID = getUid(_this.parent.element.id + '_data_');\n                    setValue('uniqueIDCollection.' + result[r].uniqueID, result[r], _this.parent);\n                    // delete result[r].parentItem.childRecords;\n                    if ((result[r][_this.parent.hasChildMapping] || _this.parentItems.indexOf(result[r][_this.parent.idMapping]) !== -1)\n                        && !(haveChild && !haveChild[r])) {\n                        result[r].hasChildRecords = true;\n                        result[r].expanded = false;\n                    }\n                    datas.splice(inx + r + 1, 0, result[r]);\n                }\n                setValue('result', datas, e);\n                setValue('action', 'beforecontentrender', e);\n                _this.parent.trigger(events.actionComplete, e);\n                hideSpinner(_this.parent.element);\n                if (_this.parent.grid.aggregates.length > 0 && !_this.parent.enableVirtualization) {\n                    var gridQuery = getObject('query', e);\n                    var result_1 = 'result';\n                    if (isNullOrUndefined(gridQuery)) {\n                        gridQuery = getValue('grid.renderModule.data', _this.parent).aggregateQuery(new Query());\n                    }\n                    if (!isNullOrUndefined(gridQuery)) {\n                        var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                        e[result_1] = _this.parent.summaryModule.calculateSummaryValue(summaryQuery, e[result_1], true);\n                    }\n                }\n                e.count = _this.parent.grid.pageSettings.totalRecordsCount;\n                var virtualArgs = {};\n                if (_this.parent.enableVirtualization) {\n                    _this.remoteVirtualAction(virtualArgs);\n                }\n                getValue('grid.renderModule', _this.parent).dataManagerSuccess(e, virtualArgs);\n                _this.parent.trigger(events.expanded, args);\n            });\n        }\n    };\n    DataManipulation.prototype.remoteVirtualAction = function (virtualArgs) {\n        virtualArgs.requestType = 'refresh';\n        setValue('isExpandCollapse', true, virtualArgs);\n        var contentModule = getValue('grid.contentModule', this.parent);\n        var currentInfo = getValue('currentInfo', contentModule);\n        var prevInfo = getValue('prevInfo', contentModule);\n        if (currentInfo.loadNext && this.parent.grid.pageSettings.currentPage === currentInfo.nextInfo.page) {\n            this.parent.grid.pageSettings.currentPage = prevInfo.page;\n        }\n    };\n    DataManipulation.prototype.beginSorting = function () {\n        this.isSortAction = true;\n    };\n    DataManipulation.prototype.createRecords = function (data, parentRecords) {\n        var treeGridData = [];\n        for (var i = 0, len = Object.keys(data).length; i < len; i++) {\n            var currentData = extend({}, data[i]);\n            currentData.taskData = data[i];\n            var level = 0;\n            this.storedIndex++;\n            if (!currentData.hasOwnProperty('index')) {\n                currentData.index = this.storedIndex;\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping]) ||\n                (currentData[this.parent.hasChildMapping] && isCountRequired(this.parent))) {\n                currentData.hasChildRecords = true;\n                if (this.parent.enableCollapseAll || !isNullOrUndefined(this.parent.dataStateChange)\n                    && isNullOrUndefined(currentData[this.parent.childMapping])) {\n                    currentData.expanded = false;\n                }\n                else {\n                    currentData.expanded = !isNullOrUndefined(currentData[this.parent.expandStateMapping])\n                        ? currentData[this.parent.expandStateMapping] : true;\n                }\n            }\n            if (!currentData.hasOwnProperty('index')) {\n                currentData.index = currentData.hasChildRecords ? this.storedIndex : this.storedIndex;\n            }\n            if (this.isSelfReference && isNullOrUndefined(currentData[this.parent.parentIdMapping])) {\n                this.parent.parentData.push(currentData);\n            }\n            currentData.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + currentData.uniqueID, currentData, this.parent);\n            if (!isNullOrUndefined(parentRecords)) {\n                var parentData = extend({}, parentRecords);\n                delete parentData.childRecords;\n                delete parentData[this.parent.childMapping];\n                if (this.isSelfReference) {\n                    delete parentData.taskData[this.parent.childMapping];\n                }\n                currentData.parentItem = parentData;\n                currentData.parentUniqueID = parentData.uniqueID;\n                level = parentRecords.level + 1;\n            }\n            if (!currentData.hasOwnProperty('level')) {\n                currentData.level = level;\n            }\n            currentData.checkboxState = 'uncheck';\n            if (isNullOrUndefined(currentData[this.parent.parentIdMapping]) || currentData.parentItem) {\n                this.parent.flatData.push(currentData);\n            }\n            if (!this.isSelfReference && currentData.level === 0) {\n                this.parent.parentData.push(currentData);\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping] && currentData[this.parent.childMapping].length)) {\n                var record = this.createRecords(currentData[this.parent.childMapping], currentData);\n                currentData.childRecords = record;\n            }\n            treeGridData.push(currentData);\n        }\n        return treeGridData;\n    };\n    /**\n     * Function to perform filtering/sorting action for local data\n     * @hidden\n     */\n    DataManipulation.prototype.dataProcessor = function (args) {\n        var isExport = getObject('isExport', args);\n        var expresults = getObject('expresults', args);\n        var exportType = getObject('exportType', args);\n        var isPrinting = getObject('isPrinting', args);\n        var dataObj;\n        var actionArgs = getObject('actionArgs', args);\n        var requestType = getObject('requestType', args);\n        var actionData = getObject('data', args);\n        var action = getObject('action', args);\n        var actionAddArgs = actionArgs;\n        var primaryKeyColumnName = this.parent.getPrimaryKeyFieldNames()[0];\n        var dataValue = getObject('data', actionAddArgs);\n        if ((!isNullOrUndefined(actionAddArgs)) && (!isNullOrUndefined(actionAddArgs.action)) && (actionAddArgs.action === 'add')\n            && (!isNullOrUndefined(actionAddArgs.data)) && isNullOrUndefined(actionAddArgs.data[primaryKeyColumnName])) {\n            actionAddArgs.data[primaryKeyColumnName] = args.result[actionAddArgs.index][primaryKeyColumnName];\n            dataValue.taskData[primaryKeyColumnName] = args.result[actionAddArgs.index][primaryKeyColumnName];\n        }\n        if ((!isNullOrUndefined(actionArgs) && Object.keys(actionArgs).length) || requestType === 'save') {\n            requestType = requestType ? requestType : actionArgs.requestType;\n            actionData = actionData ? actionData : getObject('data', actionArgs);\n            action = action ? action : getObject('action', actionArgs);\n            if (this.parent.editSettings.mode === 'Batch') {\n                this.batchChanges = this.parent.grid.editModule.getBatchChanges();\n            }\n            if (action === 'add' || (requestType === 'batchsave' && (this.parent.editSettings.mode === 'Batch'\n                && this.batchChanges[this.addedRecords].length))) {\n                this.parent.grid.currentViewData = args.result;\n            }\n            if (this.parent.isLocalData) {\n                this.updateAction(actionData, action, requestType);\n            }\n        }\n        if (isExport && !isNullOrUndefined(expresults)) {\n            dataObj = expresults;\n        }\n        else {\n            dataObj = isCountRequired(this.parent) ? getValue('result', this.parent.grid.dataSource)\n                : this.parent.grid.dataSource;\n        }\n        var results = dataObj instanceof DataManager ? dataObj.dataSource.json : dataObj;\n        var count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        if ((this.parent.grid.allowFiltering && this.parent.grid.filterSettings.columns.length) ||\n            (this.parent.grid.searchSettings.key.length > 0)) {\n            var qry = new Query();\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = new Query();\n                gridQuery = getValue('grid.renderModule.data', this.parent).filterQuery(gridQuery);\n                gridQuery = getValue('grid.renderModule.data', this.parent).searchQuery(gridQuery);\n            }\n            var fltrQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            var srchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n            qry.queries = fltrQuery.concat(srchQuery);\n            var filteredData = new DataManager(results).executeLocal(qry);\n            this.parent.notify('updateFilterRecs', { data: filteredData });\n            results = this.dataResults.result;\n            this.dataResults.result = null;\n            if (this.parent.grid.aggregates.length > 0) {\n                var query = getObject('query', args);\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(query)) {\n                    var summaryQuery = query.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, results, true);\n                }\n            }\n        }\n        if (this.parent.grid.aggregates.length && this.parent.grid.sortSettings.columns.length === 0\n            && this.parent.grid.filterSettings.columns.length === 0 && !this.parent.grid.searchSettings.key.length) {\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n            }\n            var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n            results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.parent.flatData, true);\n        }\n        if (this.parent.grid.sortSettings.columns.length > 0 || this.isSortAction) {\n            this.isSortAction = false;\n            var parentData = void 0;\n            var action_1 = 'action';\n            var collpasedIndexes = [];\n            parentData = this.parent.parentData;\n            var sortedData = void 0;\n            var query = getObject('query', args);\n            var srtQry = new Query();\n            for (var srt = this.parent.grid.sortSettings.columns.length - 1; srt >= 0; srt--) {\n                var col = this.parent.getColumnByField(this.parent.grid.sortSettings.columns[srt].field);\n                var compFun = col.sortComparer && !this.isRemote() ?\n                    col.sortComparer.bind(col) :\n                    this.parent.grid.sortSettings.columns[srt].direction;\n                srtQry.sortBy(this.parent.grid.sortSettings.columns[srt].field, compFun);\n            }\n            var modifiedData = new DataManager(parentData).executeLocal(srtQry);\n            sortedData = modifiedData;\n            var sortArgs = { modifiedData: modifiedData, filteredData: results, srtQry: srtQry };\n            this.parent.notify('createSort', sortArgs);\n            results = sortArgs.modifiedData;\n            this.dataResults.result = null;\n            this.sortedData = results;\n            this.parent.notify('updateModel', {});\n            if (this.parent.grid.aggregates.length > 0 && !isNullOrUndefined(query)) {\n                var isSort = false;\n                var query_1 = getObject('query', args);\n                var summaryQuery = query_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.sortedData, isSort);\n            }\n        }\n        count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        var temp = this.paging(results, count, isExport, isPrinting, exportType, args);\n        results = temp.result;\n        count = temp.count;\n        args.result = results;\n        args.count = count;\n        this.parent.notify('updateResults', args);\n    };\n    DataManipulation.prototype.paging = function (results, count, isExport, isPrinting, exportType, args) {\n        if (this.parent.allowPaging && (!isExport || exportType === 'CurrentPage')\n            && (!isPrinting || this.parent.printMode === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count });\n            results = this.dataResults.result;\n            count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n                : this.dataResults.count;\n        }\n        else if (this.parent.enableVirtualization && (!isExport || exportType === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count, actionArgs: getValue('actionArgs', args) });\n            results = this.dataResults.result;\n            count = this.dataResults.count;\n        }\n        var value = { result: results, count: count };\n        return value;\n    };\n    /**\n     * update for datasource\n     */\n    DataManipulation.prototype.updateData = function (dataResult) {\n        this.dataResults = dataResult;\n    };\n    DataManipulation.prototype.updateAction = function (actionData, action, requestType) {\n        if ((requestType === 'delete' || requestType === 'save')) {\n            this.parent.notify(events.crudAction, { value: actionData, action: action || requestType });\n        }\n        if (requestType === 'batchsave' && this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify(events.batchSave, {});\n        }\n    };\n    return DataManipulation;\n}());\nexport { DataManipulation };\n","/**\n * Defines Predefined toolbar items.\n * @hidden\n */\nexport var ToolbarItem;\n(function (ToolbarItem) {\n    ToolbarItem[ToolbarItem[\"Add\"] = 0] = \"Add\";\n    ToolbarItem[ToolbarItem[\"Edit\"] = 1] = \"Edit\";\n    ToolbarItem[ToolbarItem[\"Update\"] = 2] = \"Update\";\n    ToolbarItem[ToolbarItem[\"Delete\"] = 3] = \"Delete\";\n    ToolbarItem[ToolbarItem[\"Cancel\"] = 4] = \"Cancel\";\n    ToolbarItem[ToolbarItem[\"Search\"] = 5] = \"Search\";\n    ToolbarItem[ToolbarItem[\"ExpandAll\"] = 6] = \"ExpandAll\";\n    ToolbarItem[ToolbarItem[\"CollapseAll\"] = 7] = \"CollapseAll\";\n    ToolbarItem[ToolbarItem[\"ExcelExport\"] = 8] = \"ExcelExport\";\n    ToolbarItem[ToolbarItem[\"PdfExport\"] = 9] = \"PdfExport\";\n    ToolbarItem[ToolbarItem[\"CsvExport\"] = 10] = \"CsvExport\";\n    ToolbarItem[ToolbarItem[\"Print\"] = 11] = \"Print\";\n    ToolbarItem[ToolbarItem[\"RowIndent\"] = 12] = \"RowIndent\";\n    ToolbarItem[ToolbarItem[\"RowOutdent\"] = 13] = \"RowOutdent\";\n})(ToolbarItem || (ToolbarItem = {}));\n/**\n * Defines predefined contextmenu items.\n * @hidden\n */\nexport var ContextMenuItems;\n(function (ContextMenuItems) {\n    ContextMenuItems[ContextMenuItems[\"AutoFit\"] = 0] = \"AutoFit\";\n    ContextMenuItems[ContextMenuItems[\"AutoFitAll\"] = 1] = \"AutoFitAll\";\n    ContextMenuItems[ContextMenuItems[\"SortAscending\"] = 2] = \"SortAscending\";\n    ContextMenuItems[ContextMenuItems[\"SortDescending\"] = 3] = \"SortDescending\";\n    ContextMenuItems[ContextMenuItems[\"Edit\"] = 4] = \"Edit\";\n    ContextMenuItems[ContextMenuItems[\"Delete\"] = 5] = \"Delete\";\n    ContextMenuItems[ContextMenuItems[\"Save\"] = 6] = \"Save\";\n    ContextMenuItems[ContextMenuItems[\"Cancel\"] = 7] = \"Cancel\";\n    ContextMenuItems[ContextMenuItems[\"PdfExport\"] = 8] = \"PdfExport\";\n    ContextMenuItems[ContextMenuItems[\"ExcelExport\"] = 9] = \"ExcelExport\";\n    ContextMenuItems[ContextMenuItems[\"CsvExport\"] = 10] = \"CsvExport\";\n    ContextMenuItems[ContextMenuItems[\"FirstPage\"] = 11] = \"FirstPage\";\n    ContextMenuItems[ContextMenuItems[\"PrevPage\"] = 12] = \"PrevPage\";\n    ContextMenuItems[ContextMenuItems[\"LastPage\"] = 13] = \"LastPage\";\n    ContextMenuItems[ContextMenuItems[\"NextPage\"] = 14] = \"NextPage\";\n    ContextMenuItems[ContextMenuItems[\"AddRow\"] = 15] = \"AddRow\";\n})(ContextMenuItems || (ContextMenuItems = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the paging behavior of the TreeGrid.\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(12)\n    ], PageSettings.prototype, \"pageSize\", void 0);\n    __decorate([\n        Property(8)\n    ], PageSettings.prototype, \"pageCount\", void 0);\n    __decorate([\n        Property(1)\n    ], PageSettings.prototype, \"currentPage\", void 0);\n    __decorate([\n        Property()\n    ], PageSettings.prototype, \"totalRecordsCount\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"enableQueryString\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"pageSizes\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property('All')\n    ], PageSettings.prototype, \"pageSizeMode\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, getEnumValue, compile } from '@syncfusion/ej2-base';\nimport { Internationalization } from '@syncfusion/ej2-base';\nimport { CellType } from '@syncfusion/ej2-grids';\n/**\n * Configures the TreeGrid's aggregate column.\n */\nvar AggregateColumn = /** @class */ (function (_super) {\n    __extends(AggregateColumn, _super);\n    function AggregateColumn() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.intl = new Internationalization();\n        _this.templateFn = {};\n        return _this;\n    }\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setFormatter = function (cultureName) {\n        if (this.format && (this.format.skeleton || this.format.format)) {\n            this.formatFn = this.getFormatFunction(this.format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatFunction = function (format) {\n        if (format.type) {\n            return this.intl.getDateFormat(format);\n        }\n        else {\n            return this.intl.getNumberFormat(format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatter = function () {\n        return this.formatFn;\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setTemplate = function (helper) {\n        if (helper === void 0) { helper = {}; }\n        if (this.footerTemplate !== undefined) {\n            this.templateFn[getEnumValue(CellType, CellType.Summary)] = { fn: compile(this.footerTemplate, helper),\n                property: 'footerTemplate' };\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getTemplate = function (type) {\n        return this.templateFn[getEnumValue(CellType, type)];\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setPropertiesSilent = function (prop) {\n        this.setProperties(prop, true);\n    };\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"footerTemplate\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"format\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"columnName\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"customAggregate\", void 0);\n    return AggregateColumn;\n}(ChildProperty));\nexport { AggregateColumn };\nvar AggregateRow = /** @class */ (function (_super) {\n    __extends(AggregateRow, _super);\n    function AggregateRow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], AggregateColumn)\n    ], AggregateRow.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], AggregateRow.prototype, \"showChildSummary\", void 0);\n    return AggregateRow;\n}(ChildProperty));\nexport { AggregateRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Configures the edit behavior of the TreeGrid.\n */\nvar EditSettings = /** @class */ (function (_super) {\n    __extends(EditSettings, _super);\n    function EditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property('Cell')\n    ], EditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Top')\n    ], EditSettings.prototype, \"newRowPosition\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property({})\n    ], EditSettings.prototype, \"dialog\", void 0);\n    return EditSettings;\n}(ChildProperty));\nexport { EditSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property, Collection } from '@syncfusion/ej2-base';\n/**\n * Represents the field name and direction of sort column.\n */\nvar SortDescriptor = /** @class */ (function (_super) {\n    __extends(SortDescriptor, _super);\n    function SortDescriptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"direction\", void 0);\n    return SortDescriptor;\n}(ChildProperty));\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of TreeGrid.\n */\nvar SortSettings = /** @class */ (function (_super) {\n    __extends(SortSettings, _super);\n    function SortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], SortDescriptor)\n    ], SortSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], SortSettings.prototype, \"allowUnsort\", void 0);\n    return SortSettings;\n}(ChildProperty));\nexport { SortSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, addClass, createElement, EventHandler, isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { removeClass, Complex, Collection, isBlazor, getElement, getValue } from '@syncfusion/ej2-base';\nimport { Event, Property, NotifyPropertyChanges, setValue, KeyboardEvents, L10n } from '@syncfusion/ej2-base';\nimport { Column } from '../models/column';\nimport { RowDropSettings, getUid } from '@syncfusion/ej2-grids';\nimport { FilterSettings } from '../models/filter-settings';\nimport { TextWrapSettings } from '../models/textwrap-settings';\nimport { gridObserver } from '@syncfusion/ej2-grids';\nimport { TreeClipboard } from '../actions/clipboard';\nimport { Selection as TreeGridSelection } from '../actions/selection';\nimport { Print } from '../actions/print';\nimport * as events from '../base/constant';\nimport { SearchSettings } from '../models/search-settings';\nimport { SelectionSettings } from '../models/selection-settings';\nimport { getActualProperties, getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, RemoteSaveAdaptor, JsonAdaptor, Deferred } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner } from '@syncfusion/ej2-popups';\nimport { isRemoteData, isOffline, extendArray, isCountRequired } from '../utils';\nimport { Grid } from '@syncfusion/ej2-grids';\nimport { Render } from '../renderer/render';\nimport { DataManipulation } from './data';\nimport { iterateArrayOrObject } from '@syncfusion/ej2-grids';\nimport { ToolbarItem, ContextMenuItems } from '../enum';\nimport { PageSettings } from '../models/page-settings';\nimport { AggregateRow } from '../models/summary';\nimport { EditSettings } from '../models/edit-settings';\nimport { SortSettings } from '../models/sort-settings';\n/**\n * Represents the TreeGrid component.\n * ```html\n * <div id='treegrid'></div>\n * <script>\n *  var treegridObj = new TreeGrid({ allowPaging: true });\n *  treegridObj.appendTo('#treegrid');\n * </script>\n * ```\n */\nvar TreeGrid = /** @class */ (function (_super) {\n    __extends(TreeGrid, _super);\n    function TreeGrid(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.dataResults = {};\n        _this.uniqueIDCollection = {};\n        _this.uniqueIDFilterCollection = {};\n        _this.changedRecords = 'changedRecords';\n        _this.deletedRecords = 'deletedRecords';\n        _this.addedRecords = 'addedRecords';\n        TreeGrid_1.Inject(TreeGridSelection);\n        setValue('mergePersistData', _this.mergePersistTreeGridData, _this);\n        _this.grid = new Grid();\n        return _this;\n    }\n    TreeGrid_1 = TreeGrid;\n    /**\n     * Export TreeGrid data to Excel file(.xlsx).\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    TreeGrid.prototype.excelExport = function (excelExportProperties, isMultipleExport, \n    /* tslint:disable-next-line:no-any */\n    workbook, isBlob) {\n        if (isBlazor()) {\n            this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n            return null;\n        }\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n    };\n    /**\n     * Export TreeGrid data to CSV file.\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    TreeGrid.prototype.csvExport = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob) {\n        if (isBlazor()) {\n            this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n            return null;\n        }\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n    };\n    /**\n     * Export TreeGrid data to PDF document.\n     * @param  {pdfExportProperties} PdfExportProperties - Defines the export properties of the Grid.\n     * @param  {isMultipleExport} isMultipleExport - Define to enable multiple export.\n     * @param  {pdfDoc} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    TreeGrid.prototype.pdfExport = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        if (isBlazor()) {\n            this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n            return null;\n        }\n        return this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    TreeGrid.prototype.getModuleName = function () {\n        return 'treegrid';\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     * @private\n     */\n    TreeGrid.prototype.preRender = function () {\n        this.TreeGridLocale();\n        this.initProperties();\n        this.defaultLocale = {\n            Above: 'Above',\n            Below: 'Below',\n            AddRow: 'Add Row',\n            ExpandAll: 'Expand All',\n            CollapseAll: 'Collapse All',\n            RowIndent: 'Indent',\n            RowOutdent: 'Outdent'\n        };\n        this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n        if (this.isSelfReference && isNullOrUndefined(this.childMapping)) {\n            this.childMapping = 'Children';\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    TreeGrid.prototype.sortByColumn = function (columnName, direction, isMultiSort) {\n        this.sortModule.sortColumn(columnName, direction, isMultiSort);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSorting = function () {\n        if (this.sortModule) {\n            this.sortModule.clearSorting();\n        }\n    };\n    /**\n     * Remove sorted column by field name.\n     * @param {string} field - Defines the column field name to remove sort.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeSortColumn = function (field) {\n        this.sortModule.removeSortColumn(field);\n    };\n    /**\n     * Searches TreeGrid records using the given key.\n     * You can customize the default search option by using the\n     * [`searchSettings`](./#searchsettings/).\n     * @param  {string} searchString - Defines the key.\n     * @return {void}\n     */\n    TreeGrid.prototype.search = function (searchString) {\n        this.grid.search(searchString);\n    };\n    /**\n     * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n     * > * This method ignores the hidden columns.\n     * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n     * @param  {string |string[]} fieldNames - Defines the column names.\n     * @return {void}\n     *\n     *\n     *\n     */\n    TreeGrid.prototype.autoFitColumns = function (fieldNames) {\n        this.resizeModule.autoFitColumns(fieldNames);\n        this.updateColumnModel();\n    };\n    /**\n     * Changes the TreeGrid column positions by field names.\n     * @param  {string} fromFName - Defines the origin field name.\n     * @param  {string} toFName - Defines the destination field name.\n     * @return {void}\n     */\n    TreeGrid.prototype.reorderColumns = function (fromFName, toFName) {\n        this.grid.reorderColumns(fromFName, toFName);\n    };\n    TreeGrid.prototype.TreeGridLocale = function () {\n        /* tslint:disable-next-line:no-any */\n        var locale = L10n.locale;\n        var localeObject;\n        localeObject = {};\n        setValue(this.locale, {}, localeObject);\n        var gridLocale;\n        gridLocale = {};\n        gridLocale = getObject(this.locale, locale);\n        var treeGridLocale;\n        treeGridLocale = {};\n        treeGridLocale = getObject(this.getModuleName(), gridLocale);\n        setValue('grid', treeGridLocale, getObject(this.locale, localeObject));\n        L10n.load(localeObject);\n    };\n    /**\n     * By default, prints all the pages of the TreeGrid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./#printmode).\n     * @return {void}\n     */\n    TreeGrid.prototype.print = function () {\n        this.printModule.print();\n    };\n    TreeGrid.prototype.treeGridkeyActionHandler = function (e) {\n        if (this.allowKeyboard) {\n            switch (e.action) {\n                case 'ctrlDownArrow':\n                    this.expandAll();\n                    break;\n                case 'ctrlUpArrow':\n                    this.collapseAll();\n                    break;\n                case 'ctrlShiftUpArrow':\n                    var collapsetarget = e.target;\n                    var collapsecolumn = collapsetarget.closest('.e-rowcell');\n                    var collapserow = collapsecolumn.closest('tr');\n                    var collapseRow = collapserow.querySelector('.e-treegridexpand');\n                    if (collapseRow !== null && collapseRow !== undefined) {\n                        this.expandCollapseRequest(collapserow.querySelector('.e-treegridexpand'));\n                    }\n                    break;\n                case 'ctrlShiftDownArrow':\n                    var expandtarget = e.target;\n                    var expandcolumn = expandtarget.closest('.e-rowcell');\n                    var expandrow = expandcolumn.closest('tr');\n                    var expandRow = expandrow.querySelector('.e-treegridcollapse');\n                    if (expandRow !== null && expandRow !== undefined) {\n                        this.expandCollapseRequest(expandrow.querySelector('.e-treegridcollapse'));\n                    }\n                    break;\n                case 'downArrow':\n                    var target = e.target.parentElement;\n                    var summaryElement = this.findnextRowElement(target);\n                    if (summaryElement !== null) {\n                        var rowIndex = summaryElement.rowIndex;\n                        this.selectRow(rowIndex);\n                        var cellIndex = e.target.cellIndex;\n                        var row = summaryElement.children[cellIndex];\n                        addClass([row], 'e-focused');\n                        addClass([row], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n                    break;\n                case 'upArrow':\n                    var targetRow = e.target.parentElement;\n                    var summaryRowElement = this.findPreviousRowElement(targetRow);\n                    if (summaryRowElement !== null) {\n                        var rIndex = summaryRowElement.rowIndex;\n                        this.selectRow(rIndex);\n                        var cIndex = e.target.cellIndex;\n                        var rows = summaryRowElement.children[cIndex];\n                        addClass([rows], 'e-focused');\n                        addClass([rows], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n            }\n        }\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findnextRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.nextElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findnextRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findPreviousRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.previousElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findPreviousRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    TreeGrid.prototype.initProperties = function () {\n        this.defaultLocale = {};\n        this.flatData = [];\n        this.parentData = [];\n        this.columnModel = [];\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n        this.keyConfigs = {\n            ctrlDownArrow: 'ctrl+downarrow',\n            ctrlUpArrow: 'ctrl+uparrow',\n            ctrlShiftUpArrow: 'ctrl+shift+uparrow',\n            ctrlShiftDownArrow: 'ctrl+shift+downarrow',\n            downArrow: 'downArrow',\n            upArrow: 'upArrow'\n        };\n        this.isLocalData = (!(this.dataSource instanceof DataManager) || this.dataSource.dataSource.offline\n            || (!isNullOrUndefined(this.dataSource.ready)) || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n        this.isSelfReference = !isNullOrUndefined(this.parentIdMapping);\n    };\n    /**\n     * Binding events to the element while component creation.\n     * @hidden\n     */\n    TreeGrid.prototype.wireEvents = function () {\n        EventHandler.add(this.grid.element, 'click', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n        this.keyboardModule = new KeyboardEvents(this.element, {\n            keyAction: this.treeGridkeyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n        if (this.allowKeyboard) {\n            this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n        }\n    };\n    /**\n     * To provide the array of modules needed for component rendering\n     * @return {ModuleDeclaration[]}\n     * @hidden\n     */\n    TreeGrid.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.isDestroyed) {\n            return modules;\n        }\n        modules.push({\n            member: 'filter', args: [this, this.filterSettings]\n        });\n        if (!isNullOrUndefined(this.toolbar)) {\n            modules.push({\n                member: 'toolbar',\n                args: [this]\n            });\n        }\n        if (this.contextMenuItems) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this]\n            });\n        }\n        if (this.allowPaging) {\n            modules.push({\n                member: 'pager',\n                args: [this, this.pageSettings]\n            });\n        }\n        if (this.allowReordering) {\n            modules.push({\n                member: 'reorder',\n                args: [this]\n            });\n        }\n        if (this.allowSorting) {\n            modules.push({\n                member: 'sort',\n                args: [this]\n            });\n        }\n        if (this.aggregates.length > 0) {\n            modules.push({\n                member: 'summary', args: [this]\n            });\n        }\n        modules.push({\n            member: 'resize', args: [this]\n        });\n        if (this.allowExcelExport) {\n            modules.push({\n                member: 'ExcelExport', args: [this]\n            });\n        }\n        if (this.frozenColumns || this.frozenRows || this.getFrozenColumns()) {\n            modules.push({\n                member: 'freeze', args: [this]\n            });\n        }\n        if (this.detailTemplate) {\n            modules.push({\n                member: 'detailRow', args: [this]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport', args: [this]\n            });\n        }\n        if (this.showColumnMenu) {\n            modules.push({\n                member: 'columnMenu', args: [this]\n            });\n        }\n        if (this.allowRowDragAndDrop) {\n            modules.push({\n                member: 'rowDragAndDrop',\n                args: [this]\n            });\n        }\n        if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n            modules.push({\n                member: 'edit',\n                args: [this]\n            });\n        }\n        if (this.isCommandColumn(this.columns)) {\n            modules.push({\n                member: 'commandColumn',\n                args: [this]\n            });\n        }\n        if (this.allowSelection) {\n            modules.push({\n                member: 'selection',\n                args: [this]\n            });\n        }\n        if (this.enableVirtualization) {\n            modules.push({\n                member: 'virtualScroll',\n                args: [this]\n            });\n        }\n        return modules;\n    };\n    TreeGrid.prototype.isCommandColumn = function (columns) {\n        var _this = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this.isCommandColumn(col.columns);\n            }\n            return !!(col.commands || col.commandsTemplate);\n        });\n    };\n    /**\n     * Unbinding events from the element while component destroy.\n     * @hidden\n     */\n    TreeGrid.prototype.unwireEvents = function () {\n        EventHandler.remove(this.grid.element, 'click', this.mouseClickHandler);\n    };\n    /**\n     * For internal use only - To Initialize the component rendering.\n     * @private\n     */\n    TreeGrid.prototype.render = function () {\n        var _this = this;\n        createSpinner({ target: this.element }, this.createElement);\n        this.renderModule = new Render(this);\n        this.dataModule = new DataManipulation(this);\n        this.printModule = new Print(this);\n        var clientRender = 'isClientRender';\n        if (this[clientRender]) {\n            this.isServerRendered = false;\n        }\n        this.trigger(events.load);\n        this.autoGenerateColumns();\n        this.initialRender = true;\n        if (!isNullOrUndefined(this.dataSource)) {\n            this.convertTreeData(this.dataSource);\n        }\n        if (!isBlazor() || !this.isServerRendered) {\n            this.loadGrid();\n            if (this.element.classList.contains('e-treegrid') && this.rowDropSettings.targetID) {\n                this.grid.rowDropSettings.targetID += '_gridcontrol';\n            }\n            this.addListener();\n            var gridContainer = createElement('div', { id: this.element.id + '_gridcontrol' });\n            addClass([this.element], 'e-treegrid');\n            if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                this.element.style.height = this.height;\n            }\n            if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                this.element.style.width = this.width;\n            }\n            this.element.appendChild(gridContainer);\n            this.grid.appendTo(gridContainer);\n            this.wireEvents();\n        }\n        this.renderComplete();\n        var destroyTemplate = 'destroyTemplate';\n        var destroyTemplateFn = this.grid[destroyTemplate];\n        this.grid[destroyTemplate] = function (args) {\n            destroyTemplateFn.apply(_this.grid);\n            _this.clearTemplate(args);\n        };\n        if (isBlazor() && this.isServerRendered) {\n            var fn_1 = function (args) { return _this.gridRendered(args, fn_1); };\n            gridObserver.on('component-rendered', fn_1, this);\n        }\n    };\n    TreeGrid.prototype.afterGridRender = function () {\n        if (!isNullOrUndefined(this.grid.clipboardModule)) {\n            this.grid.clipboardModule.destroy();\n        }\n        this.clipboardModule = this.grid.clipboardModule = new TreeClipboard(this);\n    };\n    TreeGrid.prototype.gridRendered = function (args, fn) {\n        if (args.id === this.element.id + '_gridcontrol') {\n            this.grid = args.grid;\n        }\n        else {\n            return;\n        }\n        this.grid.query.queries = [];\n        var isJsComponent = 'isJsComponent';\n        if (!this.isServerRendered) {\n            this.grid[isJsComponent] = true;\n        }\n        this.setBlazorGUID();\n        this.setColIndex(this.grid.columns);\n        this.bindGridEvents();\n        var headerCheckbox = 'headerCheckbox';\n        if (!isNullOrUndefined(this.selectionModule)) {\n            this.grid.on('colgroup-refresh', this.selectionModule[headerCheckbox], this.selectionModule);\n        }\n        for (var i = 0; i < this.columns.length; i++) {\n            this.columns[i].uid = this.grid.columns[i].uid;\n        }\n        this.wireEvents();\n        this.afterGridRender();\n        var processModel = 'processModel';\n        this.grid[processModel]();\n        gridObserver.off('component-rendered', this.gridRendered);\n    };\n    TreeGrid.prototype.setColIndex = function (columnModel, ind) {\n        if (ind === void 0) { ind = 0; }\n        for (var i = 0, len = columnModel.length; i < len; i++) {\n            if (columnModel[i].columns) {\n                columnModel[i].index = isNullOrUndefined(columnModel[i].index) ? ind :\n                    columnModel[i].index;\n                ind++;\n                ind = this.setColIndex(columnModel[i].columns, ind);\n            }\n            else {\n                columnModel[i].index = isNullOrUndefined(columnModel[i].index) ? ind :\n                    columnModel[i].index;\n                ind++;\n            }\n        }\n        return ind;\n    };\n    TreeGrid.prototype.setBlazorGUID = function () {\n        var guid = 'guid';\n        if (this.editSettings) {\n            this.grid.editSettings[guid] = this.editSettings[guid];\n            this.grid.editSettings.template = this.editSettings.template;\n        }\n        for (var i = 0; i < this.aggregates.length; i++) {\n            for (var j = 0; j < this.aggregates[i].columns.length; j++) {\n                this.grid.aggregates[i].columns[j][guid] = this.aggregates[i].columns[j][guid];\n            }\n        }\n        for (var i = 0; i < this.columns.length; i++) {\n            this.grid.columns[i][guid] = this.columns[i][guid];\n        }\n    };\n    ;\n    TreeGrid.prototype.convertTreeData = function (data) {\n        var _this = this;\n        if (data instanceof Array && data.length > 0 && data[0].hasOwnProperty('level')) {\n            this.flatData = isCountRequired(this) ? getValue('result', data) : data;\n            this.flatData.filter(function (e) {\n                setValue('uniqueIDCollection.' + e.uniqueID, e, _this);\n                if (e.level === 0) {\n                    _this.parentData.push(e);\n                }\n            });\n        }\n        else {\n            if (isCountRequired(this)) {\n                var griddata = getValue('result', this.dataSource);\n                this.dataModule.convertToFlatData(griddata);\n            }\n            else {\n                this.dataModule.convertToFlatData(data);\n            }\n        }\n    };\n    // private getGridData(): Object {\n    //   if (isRemoteData(this)) {\n    //     return this.dataSource;\n    //   } else if (this.isLocalData && this.dataSource instanceof DataManager) {\n    //     this.dataSource.dataSource.json = this.flatData;\n    //     return this.dataSource;\n    //   }\n    //   return this.flatData;\n    // }\n    TreeGrid.prototype.bindGridProperties = function () {\n        var edit = {};\n        this.bindedDataSource();\n        this.grid.enableRtl = this.enableRtl;\n        this.grid.allowKeyboard = this.allowKeyboard;\n        this.grid.columns = this.getGridColumns(this.columns);\n        this.grid.allowExcelExport = this.allowExcelExport;\n        this.grid.allowPdfExport = this.allowPdfExport;\n        this.grid.query = this.query;\n        this.grid.columnQueryMode = this.columnQueryMode;\n        this.grid.allowPaging = this.allowPaging;\n        this.grid.pageSettings = getActualProperties(this.pageSettings);\n        this.grid.pagerTemplate = this.pagerTemplate;\n        this.grid.showColumnMenu = this.showColumnMenu;\n        this.grid.allowSorting = this.allowSorting;\n        this.grid.allowFiltering = this.allowFiltering;\n        this.grid.enableVirtualization = this.enableVirtualization;\n        this.grid.width = this.width;\n        this.grid.height = this.height;\n        this.grid.enableAltRow = this.enableAltRow;\n        this.grid.allowReordering = this.allowReordering;\n        this.grid.allowTextWrap = this.allowTextWrap;\n        this.grid.allowResizing = this.allowResizing;\n        this.grid.enableHover = this.enableHover;\n        this.grid.enableAutoFill = this.enableAutoFill;\n        this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n        this.grid.rowDropSettings = getActualProperties(this.rowDropSettings);\n        this.grid.rowHeight = this.rowHeight;\n        this.grid.gridLines = this.gridLines;\n        this.grid.allowSelection = this.allowSelection;\n        this.grid.toolbar = getActualProperties(this.getGridToolbar());\n        this.grid.toolbarTemplate = this.toolbarTemplate;\n        this.grid.filterSettings = getActualProperties(this.filterSettings);\n        this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n        this.grid.sortSettings = getActualProperties(this.sortSettings);\n        this.grid.searchSettings = getActualProperties(this.searchSettings);\n        this.grid.aggregates = getActualProperties(this.aggregates);\n        this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n        this.grid.printMode = getActualProperties(this.printMode);\n        this.grid.locale = getActualProperties(this.locale);\n        this.grid.selectedRowIndex = this.selectedRowIndex;\n        this.grid.contextMenuItems = getActualProperties(this.getContextMenu());\n        this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n        this.grid.editSettings = this.getGridEditSettings();\n        this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n        this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n        this.grid.frozenRows = this.frozenRows;\n        this.grid.frozenColumns = this.frozenColumns;\n        var templateInstance = 'templateDotnetInstance';\n        this.grid[templateInstance] = this[templateInstance];\n        var isJsComponent = 'isJsComponent';\n        this.grid[isJsComponent] = true;\n    };\n    TreeGrid.prototype.triggerEvents = function (args) {\n        this.trigger(getObject('name', args), args);\n    };\n    TreeGrid.prototype.bindGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.rowSelecting = this.triggerEvents.bind(this);\n        this.grid.rowSelected = function (args) {\n            if (!isBlazor()) {\n                _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            }\n            treeGrid.notify(events.rowSelected, args);\n            _this.trigger(events.rowSelected, args);\n        };\n        this.grid.rowDeselected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            if (isBlazor() && !_this.isServerRendered) {\n                var data = 'data';\n                var rowIndex = 'rowIndex';\n                var row = 'row';\n                args[data] = args[data][args[data].length - 1];\n                args[rowIndex] = args[rowIndex][args[rowIndex].length - 1];\n                args[row] = args[row][args[row].length - 1];\n            }\n            _this.trigger(events.rowDeselected, args);\n        };\n        this.grid.resizeStop = function (args) {\n            _this.updateColumnModel();\n            _this.trigger(events.resizeStop, args);\n        };\n        this.grid.excelQueryCellInfo = function (args) {\n            _this.notify('excelCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.pdfQueryCellInfo = function (args) {\n            _this.notify('pdfCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.checkBoxChange = function (args) {\n            _this.trigger(events.checkboxChange, args);\n        };\n        this.grid.pdfExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.pdfHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.dataSourceChanged = this.triggerEvents.bind(this);\n        this.grid.recordDoubleClick = this.triggerEvents.bind(this);\n        this.grid.rowDeselecting = this.triggerEvents.bind(this);\n        this.grid.cellDeselected = this.triggerEvents.bind(this);\n        this.grid.cellDeselecting = this.triggerEvents.bind(this);\n        this.grid.columnMenuOpen = this.triggerEvents.bind(this);\n        this.grid.columnMenuClick = this.triggerEvents.bind(this);\n        this.grid.cellSelected = this.triggerEvents.bind(this);\n        this.grid.headerCellInfo = this.triggerEvents.bind(this);\n        this.grid.resizeStart = this.triggerEvents.bind(this);\n        this.grid.resizing = this.triggerEvents.bind(this);\n        this.grid.columnDrag = this.triggerEvents.bind(this);\n        this.grid.columnDragStart = this.triggerEvents.bind(this);\n        this.grid.columnDrop = this.triggerEvents.bind(this);\n        this.grid.beforePrint = this.triggerEvents.bind(this);\n        this.grid.beforeCopy = this.triggerEvents.bind(this);\n        this.grid.beforePaste = function (args) {\n            var rows = _this.getRows();\n            var rowIndex = 'rowIndex';\n            while (rows[args[rowIndex]].classList.contains('e-summaryrow')) {\n                args[rowIndex]++;\n            }\n            _this.trigger(events.beforePaste, args);\n        };\n        this.grid.load = function () {\n            treeGrid.grid.on('initial-end', treeGrid.afterGridRender, treeGrid);\n        };\n        this.grid.printComplete = this.triggerEvents.bind(this);\n        this.grid.actionFailure = this.triggerEvents.bind(this);\n        this.extendedGridDataBoundEvent();\n        this.extendedGridEvents();\n        this.extendedGridActionEvents();\n        this.extendedGridEditEvents();\n        this.bindGridDragEvents();\n        this.bindCallBackEvents();\n    };\n    TreeGrid.prototype.extendedGridDataBoundEvent = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.dataBound = function (args) {\n            _this.updateRowTemplate(args);\n            _this.updateColumnModel();\n            _this.updateAltRow(_this.getRows());\n            _this.notify('dataBoundArg', args);\n            _this.trigger(events.dataBound, args);\n            if (isRemoteData(_this) && !isOffline(_this) && !_this.hasChildMapping) {\n                var req = getObject('dataSource.requests', _this).filter(function (e) {\n                    return e.httpRequest.statusText !== 'OK';\n                }).length;\n                setValue('grid.contentModule.isLoaded', !(req > 0), _this);\n            }\n            _this.initialRender = false;\n        };\n        this.grid.beforeDataBound = function (args) {\n            var dataSource = 'dataSource';\n            var requestType = getObject('action', args);\n            if (isRemoteData(treeGrid) && !isOffline(treeGrid) && requestType !== 'edit') {\n                treeGrid.notify('updateRemoteLevel', args);\n                args = (treeGrid.dataResults);\n            }\n            else if (treeGrid.flatData.length === 0 && isOffline(treeGrid) && treeGrid.dataSource instanceof DataManager) {\n                var dm = treeGrid.dataSource;\n                treeGrid.dataModule.convertToFlatData(dm.dataSource.json);\n                args.result = treeGrid.grid.dataSource[dataSource].json = treeGrid.flatData;\n            }\n            if (!isRemoteData(treeGrid) && !isCountRequired(this) && !isNullOrUndefined(treeGrid.dataSource)) {\n                if (this.isPrinting) {\n                    setValue('isPrinting', true, args);\n                }\n                treeGrid.notify('dataProcessor', args);\n                //args = this.dataModule.dataProcessor(args);\n            }\n            extend(args, treeGrid.dataResults);\n            // this.notify(events.beforeDataBound, args);\n            if (!this.isPrinting) {\n                var callBackPromise_1 = new Deferred();\n                treeGrid.trigger(events.beforeDataBound, args, function (beforeDataBoundArgs) {\n                    callBackPromise_1.resolve(beforeDataBoundArgs);\n                });\n                return callBackPromise_1;\n            }\n        };\n    };\n    TreeGrid.prototype.bindCallBackEvents = function () {\n        var _this = this;\n        var beginEdit;\n        var name = 'name';\n        if (isBlazor() && this.isServerRendered) {\n            if (!isNullOrUndefined(this.grid.beginEdit) && this.grid.beginEdit[name] === 'bound triggerEJEvents') {\n                beginEdit = this.grid.beginEdit;\n            }\n        }\n        this.grid.toolbarClick = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(events.toolbarClick, args, function (toolbarargs) {\n                if (!toolbarargs.cancel) {\n                    _this.notify(events.toolbarClick, args);\n                }\n                callBackPromise.resolve(toolbarargs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSelecting = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(getObject('name', args), args, function (cellselectingArgs) {\n                callBackPromise.resolve(cellselectingArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.beginEdit = function (args) {\n            if (isBlazor() && _this.isServerRendered) {\n                if (beginEdit && typeof beginEdit === 'function' && beginEdit[name] === 'bound triggerEJEvents') {\n                    beginEdit.apply(_this, [args]);\n                }\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.beginEdit, args, function (begineditArgs) {\n                callBackPromise.resolve(begineditArgs);\n            });\n            return callBackPromise;\n        };\n    };\n    TreeGrid.prototype.extendedGridEditEvents = function () {\n        var _this = this;\n        var keypressed = 'key-pressed';\n        var editKeyPress = 'keyPressed';\n        var localobserver = 'localObserver';\n        var cellEdit;\n        var cellSave;\n        var name = 'name';\n        if (isBlazor() && this.isServerRendered) {\n            if (!isNullOrUndefined(this.grid.cellEdit) && this.grid.cellEdit[name] === 'bound triggerEJEvents') {\n                cellEdit = this.grid.cellEdit;\n            }\n            if (!isNullOrUndefined(this.grid.cellSave) && this.grid.cellSave[name] === 'bound triggerEJEvents') {\n                cellSave = this.grid.cellSave;\n            }\n        }\n        if (this.editModule && isBlazor() && this.isServerRendered) {\n            this.grid.on(keypressed, this.editModule[editKeyPress], this.editModule);\n            var events_1 = this.grid[localobserver].boundedEvents['key-pressed'];\n            events_1.splice(0, 0, events_1.pop());\n        }\n        this.grid.dataStateChange = function (args) {\n            if (_this.isExpandRefresh) {\n                _this.isExpandRefresh = false;\n                _this.grid.dataSource = { result: _this.flatData, count: getValue('count', _this.grid.dataSource) };\n            }\n            else {\n                _this.trigger(events.dataStateChange, args);\n            }\n        };\n        this.grid.cellSave = function (args) {\n            if (isBlazor() && _this.isServerRendered) {\n                if (cellSave && typeof cellSave === 'function' && cellSave[name] === 'bound triggerEJEvents') {\n                    cellSave.apply(_this, [args]);\n                }\n            }\n            if (_this.grid.isContextMenuOpen()) {\n                var contextitems = void 0;\n                contextitems = _this.grid.contextMenuModule.contextMenu.element.getElementsByClassName('e-selected')[0];\n                if ((isNullOrUndefined(contextitems) || contextitems.id !== _this.element.id + '_gridcontrol_cmenu_Save')) {\n                    args.cancel = true;\n                }\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.cellSave, args, function (cellsaveArgs) {\n                if (isBlazor() && !_this.isServerRendered) {\n                    cellsaveArgs.cell = getElement(cellsaveArgs.cell);\n                }\n                if (!cellsaveArgs.cancel) {\n                    _this.notify(events.cellSave, cellsaveArgs);\n                }\n                callBackPromise.resolve(cellsaveArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSaved = function (args) {\n            _this.trigger(events.cellSaved, args);\n            _this.notify(events.cellSaved, args);\n        };\n        this.grid.cellEdit = function (args) {\n            if (isBlazor() && _this.isServerRendered) {\n                if (cellEdit && typeof cellEdit === 'function' && cellEdit[name] === 'bound triggerEJEvents') {\n                    cellEdit.apply(_this, [args]);\n                }\n            }\n            var prom = 'promise';\n            var promise = new Deferred();\n            args[prom] = promise;\n            _this.notify(events.cellEdit, args);\n            return promise;\n        };\n        this.grid.batchAdd = function (args) {\n            _this.trigger(events.batchAdd, args);\n            _this.notify(events.batchAdd, args);\n        };\n        this.grid.beforeBatchSave = function (args) {\n            _this.trigger(events.beforeBatchSave, args);\n            _this.notify(events.beforeBatchSave, args);\n        };\n        this.grid.beforeBatchAdd = function (args) {\n            _this.trigger(events.beforeBatchAdd, args);\n            _this.notify(events.beforeBatchAdd, args);\n        };\n        this.grid.batchDelete = function (args) {\n            _this.trigger(events.batchDelete, args);\n            _this.notify(events.batchDelete, args);\n        };\n        this.grid.beforeBatchDelete = function (args) {\n            _this.trigger(events.beforeBatchDelete, args);\n            _this.notify(events.beforeBatchDelete, args);\n        };\n        this.grid.batchCancel = function (args) {\n            if (_this.editSettings.mode !== 'Cell') {\n                _this.trigger(events.batchCancel, args);\n            }\n            _this.notify(events.batchCancel, args);\n        };\n    };\n    TreeGrid.prototype.updateRowTemplate = function (args) {\n        var _this = this;\n        if (isBlazor() && !this.isServerRendered) {\n            setTimeout(function () {\n                _this.treeColumnRowTemplate(args);\n            }, 1000);\n        }\n        else {\n            this.treeColumnRowTemplate(args);\n        }\n    };\n    TreeGrid.prototype.bindedDataSource = function () {\n        var dataSource = 'dataSource';\n        var isDataAvailable = 'isDataAvailable';\n        var adaptor = 'adaptor';\n        var ready = 'ready';\n        var adaptorName = 'adaptorName';\n        var dotnetInstance = 'dotnetInstance';\n        var key = 'key';\n        if (this.dataSource && isCountRequired(this)) {\n            var data = this.flatData;\n            var datacount = getValue('count', this.dataSource);\n            this.grid.dataSource = { result: data, count: datacount };\n        }\n        else {\n            this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n                this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n        }\n        if (isBlazor() && this.dataSource instanceof DataManager) {\n            this.grid.dataSource[adaptorName] = this.dataSource[adaptorName];\n            this.grid.dataSource[dotnetInstance] = this.dataSource[dotnetInstance];\n            this.grid.dataSource[key] = this.dataSource[key];\n        }\n        if (this.dataSource instanceof DataManager && (this.dataSource.dataSource.offline || this.dataSource.ready)) {\n            this.grid.dataSource[dataSource].json = extendArray(this.dataSource[dataSource].json);\n            this.grid.dataSource[ready] = this.dataSource.ready;\n            var dm_1 = this.grid.dataSource;\n            if (!isNullOrUndefined(this.grid.dataSource[ready])) {\n                this.grid.dataSource[ready].then(function (e) {\n                    dm_1[dataSource].offline = true;\n                    dm_1[isDataAvailable] = true;\n                    dm_1[dataSource].json = e.result;\n                    dm_1[adaptor] = new JsonAdaptor();\n                });\n            }\n        }\n    };\n    TreeGrid.prototype.extendedGridActionEvents = function () {\n        var _this = this;\n        var actionComplete;\n        var name = 'name';\n        if (isBlazor() && this.isServerRendered) {\n            if (!isNullOrUndefined(this.grid.actionComplete) && this.grid.actionComplete[name] === 'bound triggerEJEvents') {\n                actionComplete = this.grid.actionComplete;\n            }\n        }\n        this.grid.actionBegin = function (args) {\n            if (args.requestType === 'sorting' && args.target && args.target.parentElement &&\n                args.target.parentElement.classList.contains('e-hierarchycheckbox')) {\n                args.cancel = true;\n            }\n            var requestType = getObject('requestType', args);\n            if (requestType === 'reorder') {\n                _this.notify('getColumnIndex', {});\n            }\n            _this.notify('actionBegin', { editAction: args });\n            if (!isRemoteData(_this) && !isNullOrUndefined(_this.filterModule) && !isCountRequired(_this)\n                && (_this.grid.filterSettings.columns.length === 0 || _this.grid.searchSettings.key.length === 0)) {\n                _this.notify('clearFilters', { flatData: _this.grid.dataSource });\n                _this.grid.dataSource = _this.dataResults.result;\n            }\n            var callBackPromise = new Deferred();\n            if (isBlazor() && args.requestType === 'delete' && !_this.isServerRendered) {\n                var data = 'data';\n                args[data] = args[data][0];\n            }\n            _this.trigger(events.actionBegin, args, function (actionArgs) {\n                if (isBlazor() && actionArgs.requestType === 'delete' && !_this.isServerRendered) {\n                    var data = 'data';\n                    actionArgs[data] = [actionArgs[data]];\n                }\n                if (!actionArgs.cancel) {\n                    _this.notify(events.beginEdit, actionArgs);\n                }\n                if (isBlazor() && actionArgs.requestType === 'beginEdit' && !_this.isServerRendered) {\n                    actionArgs.row = getElement(actionArgs.row);\n                }\n                callBackPromise.resolve(actionArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.actionComplete = function (args) {\n            var name = 'name';\n            if (isBlazor() && _this.isServerRendered) {\n                var rows = _this.getRows();\n                for (var i = 0; i < rows.length; i++) {\n                    if (rows[i].classList.contains('e-treerowcollapsed') || rows[i].classList.contains('e-treerowexpanded')) {\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? removeClass([rows[i]], 'e-treerowexpanded') :\n                            removeClass([rows[i]], 'e-treerowcollapsed');\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? addClass([rows[i]], 'e-treerowcollapsed') :\n                            addClass([rows[i]], 'e-treerowexpanded');\n                    }\n                    var cells = rows[i].querySelectorAll('.e-rowcell');\n                    var expandicon = cells[_this.treeColumnIndex].getElementsByClassName('e-treegridcollapse')[0] ||\n                        cells[_this.treeColumnIndex].getElementsByClassName('e-treegridexpand')[0];\n                    if (expandicon) {\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? removeClass([expandicon], 'e-treegridexpand') :\n                            removeClass([expandicon], 'e-treegridcollapse');\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? addClass([expandicon], 'e-treegridcollapse') :\n                            addClass([expandicon], 'e-treegridexpand');\n                    }\n                }\n                if (actionComplete && typeof actionComplete === 'function' && actionComplete[name] === 'bound triggerEJEvents') {\n                    actionComplete.apply(_this, [args]);\n                }\n            }\n            _this.notify('actioncomplete', args);\n            _this.updateColumnModel();\n            _this.updateTreeGridModel();\n            if (args.requestType === 'reorder') {\n                _this.notify('setColumnIndex', {});\n            }\n            _this.notify('actionComplete', { editAction: args });\n            if (args.requestType === 'add' && (_this.editSettings.newRowPosition !== 'Top' && _this.editSettings.newRowPosition !== 'Bottom')) {\n                _this.notify(events.beginAdd, args);\n            }\n            if (args.requestType === 'batchsave') {\n                _this.notify(events.batchSave, args);\n            }\n            _this.notify('updateGridActions', args);\n            if (isBlazor() && args.requestType === 'delete' && !_this.isServerRendered) {\n                var data = 'data';\n                args[data] = args[data][0];\n            }\n            _this.trigger(events.actionComplete, args);\n        };\n    };\n    TreeGrid.prototype.extendedGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.recordDoubleClick = function (args) {\n            _this.trigger(events.recordDoubleClick, args);\n            _this.notify(events.recordDoubleClick, args);\n        };\n        this.grid.detailDataBound = function (args) {\n            _this.notify('detaildataBound', args);\n            _this.trigger(events.detailDataBound, args);\n        };\n        this.grid.rowDataBound = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.RowModifier(args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.cellRender(args);\n        };\n        this.grid.contextMenuClick = function (args) {\n            _this.notify(events.contextMenuClick, args);\n            _this.trigger(events.contextMenuClick, args);\n        };\n        this.grid.contextMenuOpen = function (args) {\n            _this.notify(events.contextMenuOpen, args);\n            _this.trigger(events.contextMenuOpen, args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            _this.renderModule.cellRender(args);\n        };\n    };\n    TreeGrid.prototype.bindGridDragEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.rowDragStartHelper = function (args) {\n            treeGrid.trigger(events.rowDragStartHelper, args);\n        };\n        this.grid.rowDragStart = function (args) {\n            treeGrid.trigger(events.rowDragStart, args);\n        };\n        this.grid.rowDrag = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            treeGrid.notify(events.rowdraging, args);\n            treeGrid.trigger(events.rowDrag, args);\n        };\n        this.grid.rowDrop = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            treeGrid.notify(events.rowDropped, args);\n            args.cancel = true;\n        };\n    };\n    /**\n     * Renders TreeGrid component\n     * @private\n     */\n    TreeGrid.prototype.loadGrid = function () {\n        this.bindGridProperties();\n        this.bindGridEvents();\n        setValue('registeredTemplate', this.registeredTemplate, this.grid);\n        var ref = 'viewContainerRef';\n        setValue('viewContainerRef', this[ref], this.grid);\n    };\n    /**\n     * AutoGenerate TreeGrid columns from first record\n     * @hidden\n     */\n    TreeGrid.prototype.autoGenerateColumns = function () {\n        if (!this.columns.length && (!this.dataModule.isRemote() && Object.keys(this.dataSource).length)) {\n            var record = void 0;\n            // if (this.dataSource instanceof DataManager) {\n            //   record = (<DataManager>this.dataSource).dataSource.json[0];\n            // } else {\n            record = this.dataSource[0];\n            // }\n            var keys = Object.keys(record);\n            for (var i = 0; i < keys.length; i++) {\n                if ([this.childMapping, this.parentIdMapping].indexOf(keys[i]) === -1) {\n                    this.columns.push(keys[i]);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.getGridEditSettings = function () {\n        var edit = {};\n        var guid = 'guid';\n        edit.allowAdding = this.editSettings.allowAdding;\n        edit.allowEditing = this.editSettings.allowEditing;\n        edit.allowDeleting = this.editSettings.allowDeleting;\n        edit.newRowPosition = this.editSettings.newRowPosition === 'Bottom' ? 'Bottom' : 'Top';\n        edit.allowEditOnDblClick = this.editSettings.allowEditOnDblClick;\n        edit.showConfirmDialog = this.editSettings.showConfirmDialog;\n        edit.template = this.editSettings.template;\n        edit.showDeleteConfirmDialog = this.editSettings.showDeleteConfirmDialog;\n        edit[guid] = this.editSettings[guid];\n        edit.dialog = this.editSettings.dialog;\n        switch (this.editSettings.mode) {\n            case 'Dialog':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Batch':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Row':\n                edit.mode = 'Normal';\n                break;\n            case 'Cell':\n                edit.mode = 'Normal';\n                edit.showConfirmDialog = false;\n                break;\n        }\n        return edit;\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getContextMenu = function () {\n        if (this.contextMenuItems) {\n            var items = [];\n            for (var i = 0; i < this.contextMenuItems.length; i++) {\n                var item = void 0;\n                switch (this.contextMenuItems[i]) {\n                    case 'AddRow':\n                    case ContextMenuItems.AddRow:\n                        items.push({ text: this.l10n.getConstant('AddRow'),\n                            target: '.e-content', id: this.element.id + '_gridcontrol_cmenu_AddRow',\n                            items: [{ text: this.l10n.getConstant('Above'), id: 'Above' }, { text: this.l10n.getConstant('Below'), id: 'Below' }] });\n                        break;\n                    default:\n                        items.push(this.contextMenuItems[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getGridToolbar = function () {\n        if (this.toolbar) {\n            var items = [];\n            for (var i = 0; i < this.toolbar.length; i++) {\n                var item = void 0;\n                switch (this.toolbar[i]) {\n                    case 'Search':\n                    case ToolbarItem.Search:\n                        items.push('Search');\n                        break;\n                    case 'Print':\n                    case ToolbarItem.Print:\n                        items.push('Print');\n                        break;\n                    case 'ExpandAll':\n                    case ToolbarItem.ExpandAll:\n                        var tooltipText = this.l10n.getConstant('ExpandAll');\n                        items.push({ text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-expand', id: this.element.id + '_gridcontrol_expandall' });\n                        break;\n                    case 'CollapseAll':\n                    case ToolbarItem.CollapseAll:\n                        var tooltip = this.l10n.getConstant('CollapseAll');\n                        items.push({ text: tooltip,\n                            tooltipText: tooltip, prefixIcon: 'e-collapse', id: this.element.id + '_gridcontrol_collapseall'\n                        });\n                        break;\n                    case 'Indent':\n                    case ToolbarItem.RowIndent:\n                        var tooltipindent = this.l10n.getConstant('RowIndent');\n                        items.push({\n                            text: tooltipindent, tooltipText: tooltipindent,\n                            prefixIcon: 'e-indent', id: this.element.id + '_gridcontrol_indent'\n                        });\n                        break;\n                    case 'Outdent':\n                    case ToolbarItem.RowOutdent:\n                        var tooltipoutdent = this.l10n.getConstant('RowOutdent');\n                        items.push({\n                            text: tooltipoutdent, tooltipText: tooltipoutdent,\n                            prefixIcon: 'e-outdent', id: this.element.id + '_gridcontrol_outdent'\n                        });\n                        break;\n                    default:\n                        items.push(this.toolbar[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Convert TreeGrid ColumnModel to Grid Column\n     * @hidden\n     */\n    TreeGrid.prototype.getGridColumns = function (columns) {\n        var column = columns;\n        this.columnModel = [];\n        var treeGridColumn;\n        var gridColumn;\n        var gridColumnCollection = [];\n        for (var i = 0; i < column.length; i++) {\n            var treeColumn = this.grid.getColumnByUid(column[i].uid);\n            gridColumn = treeColumn ? treeColumn : {};\n            treeGridColumn = {};\n            if (typeof this.columns[i] === 'string') {\n                gridColumn.field = treeGridColumn.field = this.columns[i];\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(column[i]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    gridColumn[prop] = treeGridColumn[prop] = column[i][prop];\n                }\n            }\n            if (column[i].columns) {\n                this.getGridColumns(columns[i].columns);\n            }\n            else {\n                this.columnModel.push(new Column(treeGridColumn));\n            }\n            gridColumnCollection.push(gridColumn);\n        }\n        return gridColumnCollection;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * @hidden\n     */\n    /* tslint:disable-next-line:max-line-length */\n    // tslint:disable-next-line:max-func-body-length\n    TreeGrid.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var properties = Object.keys(newProp);\n        var requireRefresh = false;\n        var preventUpdate = 'preventUpdate';\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var prop = properties_1[_i];\n            switch (prop) {\n                case 'columns':\n                    if (!(isBlazor() && this.isServerRendered && this[preventUpdate])) {\n                        this.grid.columns = this.getGridColumns(this.columns);\n                    }\n                    break;\n                case 'treeColumnIndex':\n                    this.grid.refreshColumns();\n                    break;\n                case 'allowPaging':\n                    this.grid.allowPaging = this.allowPaging;\n                    break;\n                case 'pageSettings':\n                    this.grid.pageSettings = getActualProperties(this.pageSettings);\n                    requireRefresh = true;\n                    break;\n                case 'enableVirtualization':\n                    this.grid.enableVirtualization = this.enableVirtualization;\n                    break;\n                case 'toolbar':\n                    this.grid.toolbar = this.getGridToolbar();\n                    break;\n                case 'allowSelection':\n                    this.grid.allowSelection = this.allowSelection;\n                    break;\n                case 'selectionSettings':\n                    this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n                    break;\n                case 'allowSorting':\n                    this.grid.allowSorting = this.allowSorting;\n                    break;\n                case 'allowMultiSorting':\n                    this.grid.allowMultiSorting = this.allowMultiSorting;\n                    break;\n                case 'sortSettings':\n                    this.grid.sortSettings = getActualProperties(this.sortSettings);\n                    break;\n                case 'searchSettings':\n                    this.grid.searchSettings = getActualProperties(this.searchSettings);\n                    break;\n                case 'allowFiltering':\n                    this.grid.allowFiltering = this.allowFiltering;\n                    break;\n                case 'filterSettings':\n                    this.grid.filterSettings = getActualProperties(this.filterSettings);\n                    break;\n                case 'showColumnMenu':\n                    this.grid.showColumnMenu = this.showColumnMenu;\n                    break;\n                case 'allowRowDragAndDrop':\n                    this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n                    break;\n                case 'aggregates':\n                    this.grid.aggregates = getActualProperties(this.aggregates);\n                    break;\n                case 'dataSource':\n                    this.isLocalData = (!(this.dataSource instanceof DataManager) || (!isNullOrUndefined(this.dataSource.ready))\n                        || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n                    this.convertTreeData(this.dataSource);\n                    if (this.isLocalData) {\n                        if (isCountRequired(this)) {\n                            var count = getValue('count', this.dataSource);\n                            this.grid.dataSource = { result: this.flatData, count: count };\n                        }\n                        else {\n                            this.grid.dataSource = this.flatData;\n                        }\n                    }\n                    else {\n                        this.bindedDataSource();\n                        if (this.enableVirtualization) {\n                            this.grid.contentModule.removeEventListener();\n                            this.grid.contentModule.eventListener('on');\n                            this.grid.contentModule.renderTable();\n                        }\n                    }\n                    break;\n                case 'query':\n                    this.grid.query = this.query;\n                    break;\n                case 'enableCollapseAll':\n                    if (newProp[prop]) {\n                        this.collapseAll();\n                    }\n                    else {\n                        this.expandAll();\n                    }\n                    break;\n                case 'expandStateMapping':\n                    this.refresh();\n                    break;\n                case 'gridLines':\n                    this.grid.gridLines = this.gridLines;\n                    break;\n                case 'rowTemplate':\n                    this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n                    break;\n                case 'frozenRows':\n                    this.grid.frozenRows = this.frozenRows;\n                    break;\n                case 'frozenColumns':\n                    this.grid.frozenColumns = this.frozenColumns;\n                    break;\n                case 'rowHeight':\n                    this.grid.rowHeight = this.rowHeight;\n                    break;\n                case 'height':\n                    if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                        this.element.style.height = this.height;\n                    }\n                    this.grid.height = this.height;\n                    break;\n                case 'width':\n                    if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                        this.element.style.width = this.width;\n                    }\n                    this.grid.width = this.width;\n                    break;\n                case 'locale':\n                    this.grid.locale = this.locale;\n                    break;\n                case 'selectedRowIndex':\n                    this.grid.selectedRowIndex = this.selectedRowIndex;\n                    break;\n                case 'enableAltRow':\n                    this.grid.enableAltRow = this.enableAltRow;\n                    break;\n                case 'enableHover':\n                    this.grid.enableHover = this.enableHover;\n                    break;\n                case 'enableAutoFill':\n                    this.grid.enableAutoFill = this.enableAutoFill;\n                    break;\n                case 'allowExcelExport':\n                    this.grid.allowExcelExport = this.allowExcelExport;\n                    break;\n                case 'allowPdfExport':\n                    this.grid.allowPdfExport = this.allowPdfExport;\n                    break;\n                case 'enableRtl':\n                    this.grid.enableRtl = this.enableRtl;\n                    break;\n                case 'allowReordering':\n                    this.grid.allowReordering = this.allowReordering;\n                    break;\n                case 'allowResizing':\n                    this.grid.allowResizing = this.allowResizing;\n                    break;\n                case 'textWrapSettings':\n                    this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n                    break;\n                case 'allowTextWrap':\n                    this.grid.allowTextWrap = getActualProperties(this.allowTextWrap);\n                    this.refresh();\n                    break;\n                case 'contextMenuItems':\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'detailTemplate':\n                    this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n                    break;\n                case 'columnMenuItems':\n                    this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n                    break;\n                case 'editSettings':\n                    if (this.grid.isEdit && this.grid.editSettings.mode === 'Normal' && newProp[prop].mode &&\n                        (newProp[prop].mode === 'Cell' || newProp[prop].mode === 'Row')) {\n                        this.grid.closeEdit();\n                    }\n                    this.grid.editSettings = this.getGridEditSettings();\n                    break;\n            }\n            if (requireRefresh) {\n                this.refresh();\n            }\n        }\n    };\n    /**\n     * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n     * @method destroy\n     * @return {void}\n     */\n    TreeGrid.prototype.destroy = function () {\n        this.removeListener();\n        this.unwireEvents();\n        _super.prototype.destroy.call(this);\n        this.grid.destroy();\n        this.dataModule.destroy();\n        var modules = ['dataModule', 'sortModule', 'renderModule', 'filterModule', 'printModule', 'clipboardModule',\n            'excelExportModule', 'pdfExportModule', 'toolbarModule', 'summaryModule', 'reorderModule', 'resizeModule',\n            'pagerModule', 'keyboardModule', 'columnMenuModule', 'contextMenuModule', 'editModule', 'virtualScrollModule',\n            'selectionModule', 'detailRow', 'rowDragAndDropModule', 'freezeModule'];\n        for (var i = 0; i < modules.length; i++) {\n            if (this[modules[i]]) {\n                this[modules[i]] = null;\n            }\n        }\n        this.element.innerHTML = '';\n        this.grid = null;\n    };\n    /**\n     * Update the TreeGrid model\n     * @method dataBind\n     * @return {void}\n     * @private\n     */\n    TreeGrid.prototype.dataBind = function () {\n        _super.prototype.dataBind.call(this);\n        if (!(isBlazor() && this.isServerRendered) || getValue('isRendered', this.grid) && !this.initialRender) {\n            this.grid.dataBind();\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.getPersistData = function () {\n        var keyEntity = ['pageSettings', 'sortSettings',\n            'filterSettings', 'columns', 'searchSettings', 'selectedRowIndex'];\n        var ignoreOnPersist = {\n            pageSettings: ['template', 'pageSizes', 'pageSizeMode', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n            filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent', 'hierarchyMode'],\n            searchSettings: ['fields', 'operator', 'ignoreCase'],\n            sortSettings: [], columns: [], selectedRowIndex: []\n        };\n        var ignoreOnColumn = ['filter', 'edit', 'filterBarTemplate', 'headerTemplate', 'template',\n            'commandTemplate', 'commands', 'dataSource'];\n        for (var i = 0; i < keyEntity.length; i++) {\n            var currentObject = this[keyEntity[i]];\n            for (var _i = 0, _a = ignoreOnPersist[keyEntity[i]]; _i < _a.length; _i++) {\n                var val = _a[_i];\n                delete currentObject[val];\n            }\n        }\n        this.ignoreInArrays(ignoreOnColumn, this.columns);\n        return this.addOnPersist(keyEntity);\n    };\n    TreeGrid.prototype.ignoreInArrays = function (ignoreOnColumn, columns) {\n        for (var i = 0; i < columns.length; i++) {\n            if (columns[i].columns) {\n                this.ignoreInColumn(ignoreOnColumn, columns[i]);\n                this.ignoreInArrays(ignoreOnColumn, columns[i].columns);\n            }\n            else {\n                this.ignoreInColumn(ignoreOnColumn, columns[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.ignoreInColumn = function (ignoreOnColumn, column) {\n        for (var i = 0; i < ignoreOnColumn.length; i++) {\n            delete column[ignoreOnColumn[i]];\n            column.filter = {};\n        }\n    };\n    TreeGrid.prototype.mouseClickHandler = function (e) {\n        if (!isNullOrUndefined(e.touches)) {\n            return;\n        }\n        var target = e.target;\n        if ((target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && (!this.isEditCollapse && !this.grid.isEdit)) {\n            this.expandCollapseRequest(target);\n        }\n        this.isEditCollapse = false;\n        this.notify('checkboxSelection', { target: target });\n    };\n    /**\n     * Returns TreeGrid rows\n     * @return {HTMLTableRowElement[]}\n     */\n    TreeGrid.prototype.getRows = function () {\n        return this.grid.getRows();\n    };\n    /**\n     * Gets the pager of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getPager = function () {\n        return this.grid.getPager(); //get element from pager\n    };\n    /**\n     * Adds a new record to the TreeGrid. Without passing parameters, it adds empty rows.\n     * > `editSettings.allowEditing` should be true.\n     * @param {Object} data - Defines the new add record data.\n     * @param {number} index - Defines the row index to be added.\n     * @param {RowPosition} position - Defines the new row position to be added.\n     */\n    TreeGrid.prototype.addRecord = function (data, index, position) {\n        if (this.editModule) {\n            this.editModule.addRecord(data, index, position);\n        }\n    };\n    /**\n     * Cancels edited state.\n     */\n    TreeGrid.prototype.closeEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.closeEdit();\n        }\n    };\n    /**\n     * Saves the cell that is currently edited. It does not save the value to the DataSource.\n     */\n    TreeGrid.prototype.saveCell = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.saveCell();\n        }\n    };\n    /**\n     * To update the specified cell by given value without changing into edited state.\n     * @param {number} rowIndex Defines the row index.\n     * @param {string} field Defines the column field.\n     * @param {string | number | boolean | Date} value - Defines the value to be changed.\n     */\n    TreeGrid.prototype.updateCell = function (rowIndex, field, value) {\n        if (this.grid.editModule) {\n            this.grid.editModule.updateCell(rowIndex, field, value);\n        }\n    };\n    /**\n     * To update the specified row by given values without changing into edited state.\n     * @param {number} index Defines the row index.\n     * @param {Object} data Defines the data object to be updated.\n     */\n    TreeGrid.prototype.updateRow = function (index, data) {\n        if (this.grid.editModule) {\n            this.grid.editModule.updateRow(index, data);\n        }\n    };\n    /**\n     * Delete a record with Given options. If fieldName and data is not given then TreeGrid will delete the selected record.\n     * > `editSettings.allowDeleting` should be true.\n     * @param {string} fieldName - Defines the primary key field, 'Name of the column'.\n     * @param {Object} data - Defines the JSON data of the record to be deleted.\n     */\n    TreeGrid.prototype.deleteRecord = function (fieldName, data) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRecord(fieldName, data);\n        }\n    };\n    /**\n     * To edit any particular row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row to be edited.\n     */\n    TreeGrid.prototype.startEdit = function (row) {\n        if (this.grid.editModule) {\n            this.grid.editModule.startEdit(row);\n        }\n    };\n    /**\n     * To edit any particular cell using row index and cell index.\n     * @param {number} rowIndex - Defines row index to edit a particular cell.\n     * @param {string} field - Defines the field name of the column to perform cell edit.\n     */\n    TreeGrid.prototype.editCell = function (rowIndex, field) {\n        if (this.editModule) {\n            this.editModule.editCell(rowIndex, field);\n        }\n    };\n    /**\n     * Enables or disables ToolBar items.\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     */\n    TreeGrid.prototype.enableToolbarItems = function (items, isEnable) {\n        if (this.grid.toolbarModule) {\n            this.grid.toolbarModule.enableItems(items, isEnable);\n        }\n    };\n    /**\n     * If TreeGrid is in editable state, you can save a record by invoking endEdit.\n     */\n    TreeGrid.prototype.endEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.endEdit();\n        }\n    };\n    /**\n     * Delete any visible row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row element.\n     */\n    TreeGrid.prototype.deleteRow = function (tr) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRow(tr);\n        }\n    };\n    /**\n     * Get the names of the primary key columns of the TreeGrid.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getPrimaryKeyFieldNames = function () {\n        return this.grid.getPrimaryKeyFieldNames();\n    };\n    /**\n     * Updates particular cell value based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {string } field - Specifies the field name which you want to update.\n     * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n     */\n    TreeGrid.prototype.setCellValue = function (key, field, value) {\n        this.grid.setCellValue(key, field, value);\n    };\n    /**\n     * Updates and refresh the particular row values based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *  @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     *  @param {Object} rowData - To update new data for the particular row.\n     */\n    TreeGrid.prototype.setRowData = function (key, rowData) {\n        var currentRecords = this.getCurrentViewRecords();\n        var primaryKey = this.grid.getPrimaryKeyFieldNames()[0];\n        var level = 0;\n        var record = {};\n        currentRecords.some(function (value, i, e) {\n            if (value[primaryKey] === key) {\n                record = value;\n                return true;\n            }\n            else {\n                return false;\n            }\n        });\n        level = record.level;\n        var data = rowData;\n        data.level = level;\n        data.index = record.index;\n        data.childRecords = record.childRecords;\n        data.taskData = record.taskData;\n        data.uniqueID = record.uniqueID;\n        data.parentItem = record.parentItem;\n        data.checkboxState = record.checkboxState;\n        data.hasChildRecords = record.hasChildRecords;\n        data.parentUniqueID = record.parentUniqueID;\n        data.expanded = record.expanded;\n        this.grid.setRowData(key, data);\n    };\n    /**\n     * Navigates to the specified target page.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    TreeGrid.prototype.goToPage = function (pageNo) {\n        if (this.grid.pagerModule) {\n            this.grid.pagerModule.goToPage(pageNo);\n        }\n    };\n    /**\n     * Defines the text of external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    TreeGrid.prototype.updateExternalMessage = function (message) {\n        if (this.pagerModule) {\n            this.grid.pagerModule.updateExternalMessage(message);\n        }\n    };\n    /**\n     * Gets a cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a Column by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByField = function (field) {\n        if (isBlazor() && this.isServerRendered) {\n            return iterateArrayOrObject(this.grid.columns, function (item, index) {\n                if (item.field === field) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n        else {\n            return iterateArrayOrObject(this.columnModel, function (item, index) {\n                if (item.field === field) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n    };\n    /**\n     * Gets a column by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByUid = function (uid) {\n        if (isBlazor() && this.isServerRendered) {\n            return iterateArrayOrObject(this.grid.columns, function (item, index) {\n                if (item.uid === uid) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n        else {\n            return iterateArrayOrObject(this.columnModel, function (item, index) {\n                if (item.uid === uid) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n    };\n    /**\n     * Gets the collection of column fields.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getColumnFieldNames = function () {\n        return this.grid.getColumnFieldNames();\n    };\n    /**\n     * Gets the footer div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContent = function () {\n        return this.grid.getFooterContent();\n    };\n    /**\n     * Gets the footer table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContentTable = function () {\n        return this.grid.getFooterContentTable();\n    };\n    /**\n     * Shows a column by its column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} showBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.showColumns = function (keys, showBy) {\n        this.grid.showColumns(keys, showBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Hides a column by column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} hideBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.hideColumns = function (keys, hideBy) {\n        this.grid.hideColumns(keys, hideBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Gets a column header by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByField = function (field) {\n        return this.grid.getColumnHeaderByField(field);\n    };\n    /**\n     * Gets a column header by column index.\n     * @param  {number} index - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByIndex = function (index) {\n        return this.grid.getColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a column header by UID.\n     * @param  {string} field - Specifies the column uid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByUid = function (uid) {\n        return this.grid.getColumnHeaderByUid(uid);\n    };\n    /**\n     * Gets a column index by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByField = function (field) {\n        return this.grid.getColumnIndexByField(field);\n    };\n    /**\n     * Gets a column index by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByUid = function (uid) {\n        return this.grid.getColumnIndexByUid(uid);\n    };\n    /**\n     * Gets the columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getColumns = function (isRefresh) {\n        if (isBlazor() && this.isServerRendered) {\n            return this.grid.columns;\n        }\n        else {\n            this.updateColumnModel(this.grid.getColumns(isRefresh));\n            return this.columnModel;\n        }\n    };\n    TreeGrid.prototype.updateColumnModel = function (column) {\n        this.columnModel = [];\n        var stackedHeader = false;\n        var gridColumns = isNullOrUndefined(column) ? this.grid.getColumns() : column;\n        var gridColumn;\n        for (var i = 0; i < gridColumns.length; i++) {\n            gridColumn = {};\n            for (var _i = 0, _a = Object.keys(gridColumns[i]); _i < _a.length; _i++) {\n                var prop = _a[_i];\n                if (!isBlazor() || prop !== 'edit') {\n                    gridColumn[prop] = gridColumns[i][prop];\n                }\n            }\n            this.columnModel.push(new Column(gridColumn));\n        }\n        if (!isBlazor() || !this.isServerRendered) {\n            var merge = 'deepMerge';\n            this[merge] = ['columns']; // Workaround for blazor updateModel\n            if (this.grid.columns.length !== this.columnModel.length) {\n                stackedHeader = true;\n            }\n            if (!stackedHeader) {\n                this.setProperties({ columns: this.columnModel }, true);\n            }\n            this[merge] = undefined; // Workaround for blazor updateModel\n        }\n        return this.columnModel;\n    };\n    /**\n     * Gets the content div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContent = function () {\n        return this.grid.getContent();\n    };\n    TreeGrid.prototype.mergePersistTreeGridData = function () {\n        var persist1 = 'mergePersistGridData';\n        this.grid[persist1].apply(this);\n    };\n    TreeGrid.prototype.mergeColumns = function (storedColumn, columns) {\n        var persist2 = 'mergeColumns';\n        this.grid[persist2].apply(this, [storedColumn, columns]);\n    };\n    TreeGrid.prototype.updateTreeGridModel = function () {\n        this.setProperties({ filterSettings: getObject('properties', this.grid.filterSettings) }, true);\n        this.setProperties({ pageSettings: getObject('properties', this.grid.pageSettings) }, true);\n        this.setProperties({ searchSettings: getObject('properties', this.grid.searchSettings) }, true);\n        this.setProperties({ sortSettings: getObject('properties', this.grid.sortSettings) }, true);\n    };\n    /**\n     * Gets the content table of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContentTable = function () {\n        return this.grid.getContentTable();\n    };\n    /**\n     * Gets all the TreeGrid's data rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getDataRows = function () {\n        var dRows = [];\n        var rows = this.grid.getDataRows();\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if (!rows[i].classList.contains('e-summaryrow')) {\n                dRows.push(rows[i]);\n            }\n        }\n        return dRows;\n    };\n    /**\n     * Get current visible data of TreeGrid.\n     * @return {Object[]}\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCurrentViewRecords = function () {\n        return this.grid.currentViewData;\n    };\n    /**\n     * Gets the added, edited,and deleted data before bulk save to the DataSource in batch mode.\n     * @return {Object}\n     */\n    TreeGrid.prototype.getBatchChanges = function () {\n        return this.grid.editModule.getBatchChanges();\n    };\n    /**\n     * Gets the header div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderContent = function () {\n        return this.grid.getHeaderContent();\n    };\n    /**\n     * Gets the header table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderTable = function () {\n        return this.grid.getHeaderTable();\n    };\n    /**\n     * Gets a row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getRowByIndex = function (index) {\n        return this.grid.getRowByIndex(index);\n    };\n    /**\n     * Get a row information based on cell\n     * @param {Element}\n     * @return RowInfo\n     */\n    TreeGrid.prototype.getRowInfo = function (target) {\n        return this.grid.getRowInfo(target);\n    };\n    /**\n     * Gets UID by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {string}\n     */\n    TreeGrid.prototype.getUidByColumnField = function (field) {\n        return this.grid.getUidByColumnField(field);\n    };\n    /**\n     * Gets the visible columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getVisibleColumns = function () {\n        var cols = [];\n        for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.visible) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    /**\n     * By default, TreeGrid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     */\n    TreeGrid.prototype.showSpinner = function () {\n        showSpinner(this.element);\n    };\n    /**\n     * Manually shown spinner needs to hide by `hideSpinnner`.\n     */\n    TreeGrid.prototype.hideSpinner = function () {\n        hideSpinner(this.element);\n    };\n    /**\n     * Refreshes the TreeGrid header and content.\n     */\n    TreeGrid.prototype.refresh = function () {\n        this.grid.refresh();\n    };\n    /**\n     * Get the records of checked rows.\n     * @return {Object[]}\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCheckedRecords = function () {\n        return this.selectionModule.getCheckedrecords();\n    };\n    /**\n     * Get the indexes of checked rows.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getCheckedRowIndexes = function () {\n        return this.selectionModule.getCheckedRowIndexes();\n    };\n    /**\n     * Checked the checkboxes using rowIndexes.\n     */\n    TreeGrid.prototype.selectCheckboxes = function (indexes) {\n        this.selectionModule.selectCheckboxes(indexes);\n    };\n    /**\n     * Refreshes the TreeGrid column changes.\n     */\n    TreeGrid.prototype.refreshColumns = function (refreshUI) {\n        if (isNullOrUndefined(refreshUI) || refreshUI) {\n            this.grid.columns = this.getGridColumns(this.columns);\n            this.grid.refreshColumns();\n        }\n        else {\n            this.grid.setProperties({ columns: this.getGridColumns(this.columns) }, true);\n        }\n    };\n    /**\n     * Refreshes the TreeGrid header.\n     */\n    TreeGrid.prototype.refreshHeader = function () {\n        this.grid.refreshHeader();\n    };\n    /**\n     * Expands or collapse child records\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.expandCollapseRequest = function (target) {\n        if (this.editSettings.mode === 'Batch') {\n            var obj = 'dialogObj';\n            var showDialog = 'showDialog';\n            if (this.getBatchChanges()[this.changedRecords].length ||\n                this.getBatchChanges()[this.deletedRecords].length || this.getBatchChanges()[this.addedRecords].length) {\n                var dialogObj = this.grid.editModule[obj];\n                this.grid.editModule[showDialog]('CancelEdit', dialogObj);\n                this.targetElement = target;\n                return;\n            }\n        }\n        if (this.rowTemplate) {\n            var rowInfo = target.closest('.e-treerowcell').parentElement;\n            var record = this.getCurrentViewRecords()[rowInfo.rowIndex];\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo, record);\n            }\n            else {\n                this.expandRow(rowInfo, record);\n            }\n        }\n        else {\n            var rowInfo = this.grid.getRowInfo(target);\n            var record = rowInfo.rowData;\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo.row, record);\n            }\n            else {\n                this.expandRow(rowInfo.row, record);\n            }\n        }\n    };\n    /**\n     * Expands child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.expanding, args, function (expandingArgs) {\n            if (!expandingArgs.cancel) {\n                _this.expandCollapse('expand', row, record);\n                if (!(isRemoteData(_this) && !isOffline(_this)) && !isCountRequired(_this)) {\n                    var collapseArgs = { data: record, row: row };\n                    _this.trigger(events.expanded, collapseArgs);\n                }\n            }\n        });\n    };\n    TreeGrid.prototype.getCollapseExpandRecords = function (row, record) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All' && this.isExpandAll && isNullOrUndefined(record) &&\n            !isRemoteData(this)) {\n            record = this.flatData.filter(function (e) {\n                return e.hasChildRecords;\n            });\n        }\n        else if (isNullOrUndefined(record)) {\n            record = this.grid.getCurrentViewRecords()[row.rowIndex];\n        }\n        return record;\n    };\n    /**\n     * Collapses child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.collapsing, args, function (collapsingArgs) {\n            if (!collapsingArgs.cancel) {\n                _this.expandCollapse('collapse', row, record);\n                var collapseArgs = { data: record, row: row };\n                if (!isRemoteData(_this)) {\n                    _this.trigger(events.collapsed, collapseArgs);\n                }\n            }\n        });\n    };\n    /**\n     * Expands the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var rec = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = true;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.expandRow(null, rec);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var row = getObject('rows', rec);\n            var record = getObject('records', rec);\n            for (var i = 0; i < record.length; i++) {\n                this.expandRow(row[i], record[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.getRecordDetails = function (level) {\n        var rows = this.getRows().filter(function (e) {\n            return (e.className.indexOf('level' + level) !== -1\n                && (e.querySelector('.e-treegridcollapse') || e.querySelector('.e-treegridexpand')));\n        });\n        var records = this.getCurrentViewRecords().filter(function (e) { return e.level === level && e.hasChildRecords; });\n        var obj = { records: records, rows: rows };\n        return obj;\n    };\n    /**\n     * Collapses the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var record = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = false;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.collapseRow(null, record);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var rows = getObject('rows', rec);\n            var records = getObject('records', rec);\n            for (var i = 0; i < records.length; i++) {\n                this.collapseRow(rows[i], records[i]);\n            }\n        }\n    };\n    /**\n     * Expands All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAll = function () {\n        this.expandCollapseAll('expand');\n    };\n    /**\n     * Collapses All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAll = function () {\n        this.expandCollapseAll('collapse');\n    };\n    TreeGrid.prototype.expandCollapseAll = function (action) {\n        var rows = this.getRows().filter(function (e) {\n            return e.querySelector('.e-treegrid' + (action === 'expand' ? 'collapse' : 'expand'));\n        });\n        this.isExpandAll = true;\n        this.isCollapseAll = true;\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            this.flatData.filter(function (e) {\n                if (e.hasChildRecords) {\n                    e.expanded = action === 'collapse' ? false : true;\n                }\n            });\n            if (rows.length) {\n                action === 'collapse' ? this.collapseRow(rows[0]) : this.expandRow(rows[0]);\n            }\n        }\n        else {\n            for (var i = 0; i < rows.length; i++) {\n                action === 'collapse' ? this.collapseRow(rows[i]) : this.expandRow(rows[i]);\n            }\n        }\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n    };\n    TreeGrid.prototype.expandCollapse = function (action, row, record, isChild) {\n        var expandingArgs = { row: row, data: record, childData: [], requestType: action };\n        if (!isRemoteData(this) && action === 'expand' && this.isSelfReference) {\n            this.updateChildOnDemand(expandingArgs);\n        }\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var rowIndex;\n        if (isNullOrUndefined(row)) {\n            rowIndex = this.getCurrentViewRecords().indexOf(record);\n            row = gridRows[rowIndex];\n        }\n        else {\n            rowIndex = +row.getAttribute('aria-rowindex');\n        }\n        if (!isNullOrUndefined(row)) {\n            row.setAttribute('aria-expanded', action === 'expand' ? 'true' : 'false');\n        }\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)\n            && !isCountRequired(this)) {\n            this.notify(events.localPagedExpandCollapse, { action: action, row: row, record: record });\n        }\n        else {\n            var displayAction = void 0;\n            if (action === 'expand') {\n                displayAction = 'table-row';\n                if (!isChild) {\n                    record.expanded = true;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                var targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                addClass([targetEle], 'e-treegridexpand');\n                removeClass([targetEle], 'e-treegridcollapse');\n            }\n            else {\n                displayAction = 'none';\n                if (!isChild) {\n                    record.expanded = false;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                var targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                addClass([targetEle], 'e-treegridcollapse');\n                removeClass([targetEle], 'e-treegridexpand');\n            }\n            var detailrows = gridRows.filter(function (r) {\n                return r.classList.contains('e-griddetailrowindex' + record.index + 'level' + (record.level + 1));\n            });\n            if (isRemoteData(this) && !isOffline(this)) {\n                this.remoteExpand(action, row, record, isChild);\n            }\n            else {\n                if (!isCountRequired(this) || action === 'collapse') {\n                    this.localExpand(action, row, record, isChild);\n                }\n            }\n            this.notify('rowExpandCollapse', { detailrows: detailrows, action: displayAction, record: record, row: row });\n            this.updateAltRow(gridRows);\n        }\n    };\n    TreeGrid.prototype.updateChildOnDemand = function (expandingArgs) {\n        var _this = this;\n        var deff = new Deferred();\n        var childDataBind = 'childDataBind';\n        expandingArgs[childDataBind] = deff.resolve;\n        var record = expandingArgs.data;\n        this.trigger(events.dataStateChange, expandingArgs);\n        deff.promise.then(function (e) {\n            if (expandingArgs.childData.length) {\n                var currentData = (_this.flatData);\n                var index = 0;\n                for (var i = 0; i < currentData.length; i++) {\n                    if (currentData[i].taskData === record.taskData) {\n                        index = i;\n                        break;\n                    }\n                }\n                var data_1 = getValue('result', _this.dataSource);\n                var childData = extendArray(expandingArgs.childData);\n                var length_1 = record[_this.childMapping] ?\n                    record[_this.childMapping].length > childData.length ? record[_this.childMapping].length : childData.length : childData.length;\n                for (var i = 0; i < length_1; i++) {\n                    if (record[_this.childMapping]) {\n                        data_1.filter(function (e, i) {\n                            if (e[_this.parentIdMapping] === record[_this.idMapping]) {\n                                data_1.splice(i, 1);\n                            }\n                        });\n                    }\n                    if (childData[i]) {\n                        childData[i].level = record.level + 1;\n                        childData[i].index = Math.ceil(Math.random() * 1000);\n                        childData[i].parentItem = extend({}, record);\n                        childData[i].taskData = extend({}, childData[i]);\n                        delete childData[i].parentItem.childRecords;\n                        delete childData[i].taskData.parentItem;\n                        childData[i].parentUniqueID = record.uniqueID;\n                        childData[i].uniqueID = getUid(_this.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + childData[i].uniqueID, childData[i], _this);\n                        if (!isNullOrUndefined(childData[i][_this.childMapping]) ||\n                            (childData[i][_this.hasChildMapping] && isCountRequired(_this))) {\n                            childData[i].hasChildRecords = true;\n                        }\n                        currentData.splice(index + 1 + i, record[_this.childMapping] && record[_this.childMapping][i] ? 1 : 0, childData[i]);\n                    }\n                    else {\n                        currentData.splice(index + 1 + i, 1);\n                    }\n                }\n                currentData[index][_this.childMapping] = childData;\n                currentData[index].childRecords = childData;\n                currentData[index].expanded = true;\n                setValue('uniqueIDCollection.' + currentData[index].uniqueID, currentData[index], _this);\n                for (var j = 0; j < expandingArgs.childData.length; j++) {\n                    data_1.push(expandingArgs.childData[j]);\n                }\n            }\n            _this.isExpandRefresh = true;\n            _this.refresh();\n            _this.trigger(events.expanded, expandingArgs);\n        });\n    };\n    TreeGrid.prototype.remoteExpand = function (action, row, record, isChild) {\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_1 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_1);\n        }\n        var args = { data: record, row: row };\n        var rows = [];\n        rows = gridRows.filter(function (r) {\n            return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n        });\n        if (action === 'expand') {\n            this.notify(events.remoteExpand, { record: record, rows: rows, parentRow: row });\n            var args_1 = { row: row, data: record };\n            if (rows.length > 0) {\n                this.trigger(events.expanded, args_1);\n            }\n        }\n        else {\n            this.collapseRemoteChild(rows);\n            this.trigger(events.collapsed, args);\n        }\n    };\n    TreeGrid.prototype.localExpand = function (action, row, record, isChild) {\n        var childRecords = this.getCurrentViewRecords().filter(function (e) {\n            return e.parentUniqueID === record.uniqueID;\n        });\n        var movableRows;\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_2 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_2);\n        }\n        var displayAction = (action === 'expand') ? 'table-row' : 'none';\n        var index = childRecords[0].parentItem.index;\n        var rows = gridRows.filter(function (r) {\n            return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n        });\n        if (this.frozenRows > 0) {\n            movableRows = this.getMovableRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        for (var i = 0; i < rows.length; i++) {\n            rows[i].style.display = displayAction;\n            if (!isNullOrUndefined(movableRows)) {\n                movableRows[i].style.display = displayAction;\n            }\n            this.notify('childRowExpand', { row: rows[i] });\n            if (!isNullOrUndefined(childRecords[i].childRecords) && (action !== 'expand' ||\n                isNullOrUndefined(childRecords[i].expanded) || childRecords[i].expanded)) {\n                this.expandCollapse(action, rows[i], childRecords[i], true);\n                if (this.frozenColumns <= this.treeColumnIndex && !isNullOrUndefined(movableRows)) {\n                    this.expandCollapse(action, movableRows[i], childRecords[i], true);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.updateAltRow = function (rows) {\n        if (this.enableAltRow && !this.rowTemplate) {\n            var visibleRowCount = 0;\n            for (var i = 0; rows && i < rows.length; i++) {\n                var gridRow = rows[i];\n                if (gridRow.style.display !== 'none') {\n                    if (gridRow.classList.contains('e-altrow')) {\n                        removeClass([gridRow], 'e-altrow');\n                    }\n                    if (visibleRowCount % 2 !== 0 && !gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        addClass([gridRow], 'e-altrow');\n                    }\n                    if (!gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        visibleRowCount++;\n                    }\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.treeColumnRowTemplate = function (args) {\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            rows = [].slice.call(rows);\n            for (var i = 0; i < rows.length; i++) {\n                var rcell = this.grid.getContentTable().rows[i].cells[this.treeColumnIndex];\n                var row = rows[i];\n                var rowData = this.grid.getRowsObject()[i].data;\n                var arg = { data: rowData, row: row, cell: rcell, column: this.getColumns()[this.treeColumnIndex] };\n                this.renderModule.cellRender(arg);\n            }\n        }\n    };\n    TreeGrid.prototype.collapseRemoteChild = function (rows) {\n        var rData;\n        for (var i = 0; i < rows.length; i++) {\n            if (this.rowTemplate) {\n                rData = this.grid.getCurrentViewRecords()[rows[i].rowIndex];\n            }\n            else {\n                rData = this.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n            }\n            rData.expanded = false;\n            if (isBlazor() && this.isServerRendered) {\n                removeClass([rows[i]], 'e-treerowexpanded');\n                addClass([rows[i]], 'e-treerowcollapsed');\n            }\n            else {\n                rows[i].style.display = 'none';\n            }\n            var collapsingTd = rows[i].querySelector('.e-detailrowexpand');\n            if (!isNullOrUndefined(collapsingTd)) {\n                this.grid.detailRowModule.collapse(collapsingTd);\n            }\n            if (rows[i].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                var expandElement = rows[i].querySelector('.e-treecolumn-container .e-treegridexpand');\n                removeClass([expandElement], 'e-treegridexpand');\n                addClass([expandElement], 'e-treegridcollapse');\n                var cRow = [];\n                var eRows = this.getRows();\n                for (var i_1 = 0; i_1 < eRows.length; i_1++) {\n                    if (eRows[i_1].querySelector('.e-gridrowindex' + rData.index + 'level' + (rData.level + 1))) {\n                        cRow.push(eRows[i_1]);\n                    }\n                }\n                this.collapseRemoteChild(cRow);\n            }\n        }\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.addListener = function () {\n        this.on('updateResults', this.updateResultModel, this);\n        this.grid.on('initial-end', this.afterGridRender, this);\n    };\n    TreeGrid.prototype.updateResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.removeListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.off('updateResults', this.updateResultModel);\n        this.grid.off('initial-end', this.afterGridRender);\n    };\n    /**\n     * Filters TreeGrid row by column name with the given options.\n     * @param  {string} fieldName - Defines the field name of the column.\n     * @param  {string} filterOperator - Defines the operator to filter records.\n     * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n     * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n     * @param  {boolean} matchCase - If match case is set to true, TreeGrid filters the records with exact match. if false, it filters case\n     * insensitive records (uppercase and lowercase letters treated the same).\n     * @param  {boolean} ignoreAccent - If ignoreAccent set to true,\n     * then filter ignores the diacritic characters or accents while filtering.\n     * @param  {string} actualFilterValue - Defines the actual filter value for the filter column.\n     * @param  {string} actualOperator - Defines the actual filter operator for the filter column.\n     * @return {void}\n     */\n    TreeGrid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n        this.grid.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n    };\n    /**\n     * Clears all the filtered rows of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearFiltering = function () {\n        this.grid.clearFiltering();\n    };\n    /**\n     * Removes filtered column by field name.\n     * @param  {string} field - Defines column field name to remove filter.\n     * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n        this.grid.removeFilteredColsByField(field, isClearFilterBar);\n    };\n    /**\n     * Selects a row by given index.\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRow = function (index, isToggle) {\n        this.grid.selectRow(index, isToggle);\n    };\n    /**\n     * Selects a collection of rows by indexes.\n     * @param  {number[]} rowIndexes - Specifies the row indexes.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRows = function (rowIndexes) {\n        this.grid.selectRows(rowIndexes);\n    };\n    /**\n     * Deselects the current selected rows and cells.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSelection = function () {\n        this.grid.clearSelection();\n    };\n    /**\n     * Copy the selected rows or cells data into clipboard.\n     * @param {boolean} withHeader - Specifies whether the column header text needs to be copied along with rows or cells.\n     */\n    TreeGrid.prototype.copy = function (withHeader) {\n        this.clipboardModule.copy(withHeader);\n    };\n    /**\n     * Paste data from clipboard to selected cells.\n     * @param {boolean} data - Specifies the date for paste.\n     * @param {boolean} rowIndex - Specifies the row index.\n     * @param {boolean} colIndex - Specifies the column index.\n     */\n    TreeGrid.prototype.paste = function (data, rowIndex, colIndex) {\n        this.clipboardModule.paste(data, rowIndex, colIndex);\n    };\n    /**\n     * Selects a cell by the given index.\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectCell = function (cellIndex, isToggle) {\n        this.grid.selectCell(cellIndex, isToggle);\n    };\n    /**\n     * Gets the collection of selected rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getSelectedRows = function () {\n        return this.grid.getSelectedRows();\n    };\n    /**\n     * Gets a movable table cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getMovableCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getMovableCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets all the TreeGrid's movable table data rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getMovableDataRows = function () {\n        return this.grid.getMovableDataRows();\n    };\n    /**\n     * Gets a movable tables row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getMovableRowByIndex = function (index) {\n        return this.grid.getMovableRowByIndex(index);\n    };\n    /**\n     * Gets the TreeGrid's movable content rows from frozen treegrid.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getMovableRows = function () {\n        return this.grid.getMovableRows();\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.getFrozenColumns = function () {\n        return this.getFrozenCount(this.columns, 0);\n    };\n    TreeGrid.prototype.getFrozenCount = function (cols, cnt) {\n        for (var i = 0, len = cols.length; i < len; i++) {\n            if (cols[i].columns) {\n                cnt = this.getFrozenCount(cols[i].columns, cnt);\n            }\n            else {\n                if (cols[i].isFrozen) {\n                    cnt++;\n                }\n            }\n        }\n        return cnt;\n    };\n    /**\n     * Gets the collection of selected row indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowIndexes = function () {\n        return this.grid.getSelectedRowIndexes();\n    };\n    /**\n     * Gets the collection of selected row and cell indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowCellIndexes = function () {\n        return this.grid.getSelectedRowCellIndexes();\n    };\n    /**\n     * Gets the collection of selected records.\n     * @isGenericType true\n     * @return {Object[]}\n     */\n    TreeGrid.prototype.getSelectedRecords = function () {\n        return this.grid.getSelectedRecords();\n    };\n    /**\n     * Gets the data module.\n     * @return {Data}\n     */\n    TreeGrid.prototype.getDataModule = function () {\n        return { baseModule: this.grid.getDataModule(), treeModule: this.dataModule };\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     */\n    TreeGrid.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        this.rowDragAndDropModule.reorderRows(fromIndexes, toIndex, position);\n    };\n    var TreeGrid_1;\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenRows\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenColumns\", void 0);\n    __decorate([\n        Property('Ellipsis')\n    ], TreeGrid.prototype, \"clipMode\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"columns\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"childMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"hasChildMapping\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"treeColumnIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"idMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"parentIdMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableCollapseAll\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"expandStateMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowRowDragAndDrop\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"query\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"cloneQuery\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], TreeGrid.prototype, \"printMode\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPaging\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"loadChildOnDemand\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Complex({}, TextWrapSettings)\n    ], TreeGrid.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"autoCheckHierarchy\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], TreeGrid.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Complex({}, RowDropSettings)\n    ], TreeGrid.prototype, \"rowDropSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"pagerTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnMenu\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowSorting\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowMultiSorting\", void 0);\n    __decorate([\n        Complex({}, SortSettings)\n    ], TreeGrid.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Collection([], AggregateRow)\n    ], TreeGrid.prototype, \"aggregates\", void 0);\n    __decorate([\n        Complex({}, EditSettings)\n    ], TreeGrid.prototype, \"editSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowFiltering\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"detailTemplate\", void 0);\n    __decorate([\n        Complex({}, FilterSettings)\n    ], TreeGrid.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Complex({}, SearchSettings)\n    ], TreeGrid.prototype, \"searchSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        Property('Default')\n    ], TreeGrid.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"columnMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"rowTemplate\", void 0);\n    __decorate([\n        Property('Parent')\n    ], TreeGrid.prototype, \"copyHierarchyMode\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableAltRow\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowKeyboard\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableHover\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableAutoFill\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"width\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableVirtualization\", void 0);\n    __decorate([\n        Property('All')\n    ], TreeGrid.prototype, \"columnQueryMode\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanding\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanded\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSaved\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beginEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchCancel\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataSourceChanged\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"recordDoubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"detailDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"checkboxChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeCopy\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePaste\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStartHelper\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrop\", void 0);\n    __decorate([\n        Property(-1)\n    ], TreeGrid.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeGrid.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfExportComplete\", void 0);\n    TreeGrid = TreeGrid_1 = __decorate([\n        NotifyPropertyChanges\n    ], TreeGrid);\n    return TreeGrid;\n}(Component));\nexport { TreeGrid };\n","import { getObject, Grid, Reorder as GridReorder } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Reorder module\n * @hidden\n */\nvar Reorder = /** @class */ (function () {\n    /**\n     * Constructor for Reorder module\n     */\n    function Reorder(parent, treeColumn) {\n        Grid.Inject(GridReorder);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Reorder.prototype.getModuleName = function () {\n        return 'reorder';\n    };\n    /**\n     * @hidden\n     */\n    Reorder.prototype.addEventListener = function () {\n        this.parent.on('getColumnIndex', this.getTreeColumn, this);\n    };\n    Reorder.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('getColumnIndex', this.getTreeColumn);\n    };\n    /**\n     * To destroy the Reorder\n     * @return {void}\n     * @hidden\n     */\n    Reorder.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Reorder.prototype.getTreeColumn = function () {\n        var columnModel = 'columnModel';\n        var treeColumn = this.parent[columnModel][this.parent.treeColumnIndex];\n        var treeIndex;\n        var updatedCols = this.parent.getColumns();\n        for (var f = 0; f < updatedCols.length; f++) {\n            var treeColumnfield = getObject('field', treeColumn);\n            var parentColumnfield = getObject('field', updatedCols[f]);\n            if (treeColumnfield === parentColumnfield) {\n                treeIndex = f;\n                break;\n            }\n        }\n        this.parent.setProperties({ treeColumnIndex: treeIndex }, true);\n    };\n    return Reorder;\n}());\nexport { Reorder };\n","import { Grid, Resize as GridResize } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Resize module\n * @hidden\n */\nvar Resize = /** @class */ (function () {\n    /**\n     * Constructor for Resize module\n     */\n    function Resize(parent) {\n        Grid.Inject(GridResize);\n        this.parent = parent;\n    }\n    /**\n     * Resize by field names.\n     * @param  {string|string[]} fName - Defines the field name.\n     * @return {void}\n     */\n    Resize.prototype.autoFitColumns = function (fName) {\n        this.parent.grid.autoFitColumns(fName);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Resize.prototype.getModuleName = function () {\n        return 'resize';\n    };\n    /**\n     * Destroys the Resize.\n     * @method destroy\n     * @return {void}\n     */\n    Resize.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.grid.resizeModule.destroy();\n    };\n    return Resize;\n}());\nexport { Resize };\n","import { Grid, RowDD as GridDragDrop, parentsUntil } from '@syncfusion/ej2-grids';\nimport { getObject, Scroll } from '@syncfusion/ej2-grids';\nimport { closest, isNullOrUndefined, classList, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport * as events from '../base/constant';\nimport { editAction } from './crud-actions';\nimport { getParentData, findChildrenRecords, isRemoteData, isOffline, isCountRequired } from '../utils';\n/**\n * TreeGrid RowDragAndDrop module\n * @hidden\n */\nvar RowDD = /** @class */ (function () {\n    /**\n     *\n     * Constructor for render module\n     */\n    function RowDD(parent) {\n        /** @hidden */\n        this.canDrop = true;\n        /** @hidden */\n        this.isDraggedWithChild = false;\n        /** @hidden */\n        this.isaddtoBottom = false;\n        Grid.Inject(GridDragDrop);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    RowDD.prototype.getChildrecordsByParentID = function (id) {\n        var index;\n        var treeGridDataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            treeGridDataSource = this.parent.grid.dataSource.dataSource.json;\n        }\n        else {\n            treeGridDataSource = this.parent.grid.dataSource;\n        }\n        var record = treeGridDataSource.filter(function (e) {\n            return e.uniqueID === id;\n        });\n        return record;\n    };\n    /**\n     * @hidden\n     */\n    RowDD.prototype.addEventListener = function () {\n        this.parent.on(events.rowdraging, this.Rowdraging, this);\n        this.parent.on(events.rowDropped, this.rowDropped, this);\n        this.parent.on(events.rowsAdd, this.rowsAdded, this);\n        this.parent.on(events.rowsRemove, this.rowsRemoved, this);\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     */\n    RowDD.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        var tObj = this.parent;\n        if (fromIndexes[0] !== toIndex && position === 'above' || 'below' || 'child') {\n            if (position === 'above') {\n                this.dropPosition = 'topSegment';\n            }\n            if (position === 'below') {\n                this.dropPosition = 'bottomSegment';\n            }\n            if (position === 'child') {\n                this.dropPosition = 'middleSegment';\n            }\n            var data = [];\n            for (var i = 0; i < fromIndexes.length; i++) {\n                data[i] = this.parent.getCurrentViewRecords()[fromIndexes[i]];\n            }\n            var isByMethod = true;\n            var args = {\n                data: data,\n                dropIndex: toIndex\n            };\n            if (!isCountRequired(this.parent)) {\n                this.dropRows(args, isByMethod);\n            }\n            //this.refreshGridDataSource();\n            this.parent.refresh();\n            if (tObj.isLocalData) {\n                tObj.flatData = this.orderToIndex(tObj.flatData);\n            }\n        }\n        else {\n            return;\n        }\n    };\n    RowDD.prototype.orderToIndex = function (currentData) {\n        for (var i = 0; i < currentData.length; i++) {\n            currentData[i].index = i;\n        }\n        return currentData;\n    };\n    RowDD.prototype.rowsAdded = function (e) {\n        var draggedRecord;\n        var dragRecords = e.records;\n        for (var i = e.records.length - 1; i > -1; i--) {\n            draggedRecord = dragRecords[i];\n            if (draggedRecord.parentUniqueID) {\n                var record = dragRecords.filter(function (data) {\n                    return data.uniqueID === draggedRecord.parentUniqueID;\n                });\n                if (record.length) {\n                    var index = record[0].childRecords.indexOf(draggedRecord);\n                    var parentRecord = record[0];\n                    if (index !== -1) {\n                        parentRecord.childRecords.splice(index, 1);\n                        if (!parentRecord.childRecords.length) {\n                            parentRecord.hasChildRecords = false;\n                            parentRecord.hasFilteredChildRecords = false;\n                        }\n                        this.isDraggedWithChild = true;\n                    }\n                }\n            }\n        }\n        if (isNullOrUndefined(this.parent.dataSource) || !this.parent.dataSource.length) {\n            var tObj = this.parent;\n            var draggedRecord_1;\n            var dragRecords_1 = e.records;\n            var dragLength = e.records.length;\n            for (var i = dragLength - 1; i > -1; i--) {\n                draggedRecord_1 = dragRecords_1[i];\n                var recordIndex1 = 0;\n                if (!draggedRecord_1.taskData.hasOwnProperty(tObj.childMapping)) {\n                    draggedRecord_1.taskData[tObj.childMapping] = [];\n                }\n                if (isNullOrUndefined(tObj.dataSource)) {\n                    tObj.dataSource = [];\n                }\n                tObj.dataSource.splice(recordIndex1, 0, draggedRecord_1.taskData);\n                tObj.setProperties({ dataSource: tObj.dataSource }, false);\n            }\n        }\n        else {\n            for (var i = 0; i < dragRecords.length; i++) {\n                setValue('uniqueIDCollection.' + dragRecords[i].uniqueID, dragRecords[i], this.parent);\n            }\n            var args = { data: e.records, dropIndex: e.toIndex };\n            if (this.parent.dataSource instanceof DataManager) {\n                this.treeGridData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                this.treeGridData = this.parent.grid.dataSource;\n            }\n            this.dropRows(args);\n        }\n    };\n    RowDD.prototype.rowsRemoved = function (e) {\n        for (var i = 0; i < e.records.length; i++) {\n            this.draggedRecord = e.records[i];\n            if (this.draggedRecord.hasChildRecords || this.draggedRecord.parentItem &&\n                this.parent.grid.dataSource.\n                    indexOf(this.getChildrecordsByParentID(this.draggedRecord.parentUniqueID)[0]) !== -1 ||\n                this.draggedRecord.level === 0) {\n                this.deleteDragRow();\n            }\n        }\n    };\n    RowDD.prototype.refreshGridDataSource = function () {\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var proxy = this.parent;\n        var tempDataSource;\n        var idx;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            tempDataSource = proxy.dataSource.dataSource.json;\n        }\n        else {\n            tempDataSource = proxy.dataSource;\n        }\n        if (tempDataSource && (!isNullOrUndefined(droppedRecord) && !droppedRecord.parentItem)) {\n            for (var i = 0; i < Object.keys(tempDataSource).length; i++) {\n                if (tempDataSource[i][this.parent.childMapping] === droppedRecord.taskData[this.parent.childMapping]) {\n                    idx = i;\n                }\n            }\n            if (this.dropPosition === 'topSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx, 0, draggedRecord.taskData);\n                }\n            }\n            else if (this.dropPosition === 'bottomSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx + 1, 0, draggedRecord.taskData);\n                }\n            }\n        }\n        else if (!this.parent.parentIdMapping && (!isNullOrUndefined(droppedRecord) && droppedRecord.parentItem)) {\n            if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                var record = this.getChildrecordsByParentID(droppedRecord.parentUniqueID)[0];\n                var childRecords = record.childRecords;\n                for (var i = 0; i < childRecords.length; i++) {\n                    droppedRecord.parentItem.taskData[this.parent.childMapping][i] = childRecords[i].taskData;\n                }\n            }\n        }\n        if (this.parent.parentIdMapping) {\n            if (draggedRecord.parentItem) {\n                if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                }\n                else {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                }\n            }\n            else {\n                draggedRecord.taskData[this.parent.parentIdMapping] = null;\n                draggedRecord[this.parent.parentIdMapping] = null;\n            }\n        }\n    };\n    RowDD.prototype.removeFirstrowBorder = function (element, isRemove) {\n        var canremove = this.dropPosition === 'bottomSegment';\n        if (this.parent.element.getElementsByClassName('e-firstrow-border').length > 0 && element &&\n            (element.rowIndex !== 0 || canremove)) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.removeLastrowBorder = function (element, isRemove) {\n        var isEmptyRow = element && (element.classList.contains('e-emptyrow') || element.classList.contains('e-columnheader'));\n        var islastRowIndex = element && !isEmptyRow &&\n            this.parent.getRowByIndex(this.parent.getRows().length - 1).getAttribute('data-uid') !==\n                element.getAttribute('data-uid');\n        var canremove = islastRowIndex || this.dropPosition === 'topSegment';\n        if (this.parent.element.getElementsByClassName('e-lastrow-border').length > 0 && element && (islastRowIndex || canremove)) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.updateIcon = function (row, index, args) {\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        this.dropPosition = undefined;\n        var rowPositionHeight = 0;\n        this.removeFirstrowBorder(rowEle);\n        this.removeLastrowBorder(rowEle);\n        for (var i = 0; i < args.rows.length; i++) {\n            if (!isNullOrUndefined(rowEle) && rowEle.getAttribute('data-uid') === args.rows[i].getAttribute('data-uid')\n                || !parentsUntil(args.target, 'e-gridcontent')) {\n                this.dropPosition = 'Invalid';\n                this.addErrorElem();\n            }\n        }\n        // To get the corresponding drop position related to mouse position \n        var tObj = this.parent;\n        var rowTop = 0;\n        var roundOff = 0;\n        var toolHeight = tObj.toolbar && tObj.toolbar.length ?\n            document.getElementById(tObj.element.id + '_gridcontrol_toolbarItems').offsetHeight : 0;\n        // tObj.lastRow = tObj.getRowByIndex(tObj.getCurrentViewRecords().length - 1);\n        var positionOffSet = this.getOffset(tObj.element);\n        // let contentHeight1: number = (tObj.element.offsetHeight  - (tObj.getContent() as HTMLElement).offsetHeight) + positionOffSet.top;\n        var contentHeight = tObj.getHeaderContent().offsetHeight + positionOffSet.top + toolHeight;\n        var scrollTop = tObj.getContent().firstElementChild.scrollTop;\n        if (!isNullOrUndefined(rowEle)) {\n            rowPositionHeight = rowEle.offsetTop - scrollTop;\n        }\n        // let scrollTop = (tObj.grid.scrollModule as any).content.scrollTop;\n        if (tObj.allowTextWrap) {\n            rowTop = row[0].offsetHeight;\n        }\n        else {\n            rowTop = rowPositionHeight + contentHeight + roundOff;\n        }\n        var rowBottom = rowTop + row[0].offsetHeight;\n        var difference = rowBottom - rowTop;\n        var divide = difference / 3;\n        var topRowSegment = rowTop + divide;\n        var middleRowSegment = topRowSegment + divide;\n        var bottomRowSegment = middleRowSegment + divide;\n        var posx = positionOffSet.left;\n        var mouseEvent = getObject('originalEvent.event', args);\n        var posy = mouseEvent.pageY;\n        var isTopSegment = posy <= topRowSegment;\n        var isMiddleRowSegment = (posy > topRowSegment && posy <= middleRowSegment);\n        var isBottomRowSegment = (posy > middleRowSegment && posy <= bottomRowSegment);\n        if (isTopSegment || isMiddleRowSegment || isBottomRowSegment) {\n            if (isTopSegment && this.dropPosition !== 'Invalid') {\n                this.removeChildBorder();\n                this.dropPosition = 'topSegment';\n                this.removetopOrBottomBorder();\n                this.addFirstrowBorder(rowEle);\n                this.removeErrorElem();\n                this.removeLastrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n            if (isMiddleRowSegment && this.dropPosition !== 'Invalid') {\n                this.removetopOrBottomBorder();\n                var element = void 0;\n                var rowElement = [];\n                element = closest(args.target, 'tr');\n                rowElement = [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse'));\n                if (rowElement.length > 0) {\n                    this.addRemoveClasses(rowElement, true, 'e-childborder');\n                }\n                this.addLastRowborder(rowEle);\n                this.addFirstrowBorder(rowEle);\n                this.dropPosition = 'middleSegment';\n            }\n            if (isBottomRowSegment && this.dropPosition !== 'Invalid') {\n                this.removeErrorElem();\n                this.removetopOrBottomBorder();\n                this.removeChildBorder();\n                this.dropPosition = 'bottomSegment';\n                this.addLastRowborder(rowEle);\n                this.removeFirstrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n        }\n        return this.dropPosition;\n    };\n    RowDD.prototype.removeChildBorder = function () {\n        var borderElem = [];\n        borderElem = [].slice.call(this.parent.element.querySelectorAll('.e-childborder'));\n        if (borderElem.length > 0) {\n            this.addRemoveClasses(borderElem, false, 'e-childborder');\n        }\n    };\n    RowDD.prototype.addFirstrowBorder = function (targetRow) {\n        var node = this.parent.element;\n        var tObj = this.parent;\n        if (targetRow && targetRow.rowIndex === 0 && !targetRow.classList.contains('e-emptyrow')) {\n            var div = this.parent.createElement('div', { className: 'e-firstrow-border' });\n            var gridheaderEle = this.parent.getHeaderContent();\n            var toolbarHeight = 0;\n            if (tObj.toolbar) {\n                toolbarHeight = tObj.toolbarModule.getToolbar().offsetHeight;\n            }\n            var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n            if (multiplegrid) {\n                div.style.top = this.parent.grid.element.getElementsByClassName('e-gridheader')[0].offsetHeight\n                    + toolbarHeight + 'px';\n            }\n            div.style.width = multiplegrid ? node.offsetWidth + 'px' :\n                node.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridheaderEle.querySelectorAll('.e-firstrow-border').length) {\n                gridheaderEle.appendChild(div);\n            }\n        }\n    };\n    RowDD.prototype.addLastRowborder = function (trElement) {\n        var isEmptyRow = trElement && (trElement.classList.contains('e-emptyrow') ||\n            trElement.classList.contains('e-columnheader'));\n        if (trElement && !isEmptyRow && this.parent.getRowByIndex(this.parent.getRows().length - 1).getAttribute('data-uid') ===\n            trElement.getAttribute('data-uid')) {\n            var bottomborder = this.parent.createElement('div', { className: 'e-lastrow-border' });\n            var gridcontentEle = this.parent.getContent();\n            bottomborder.style.width = this.parent.element.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridcontentEle.querySelectorAll('.e-lastrow-border').length) {\n                gridcontentEle.classList.add('e-treegrid-relative');\n                gridcontentEle.appendChild(bottomborder);\n                bottomborder.style.bottom = this.getScrollWidth() + 'px';\n            }\n        }\n    };\n    RowDD.prototype.getScrollWidth = function () {\n        var scrollElem = this.parent.getContent().firstElementChild;\n        return scrollElem.scrollWidth > scrollElem.offsetWidth ? Scroll.getScrollBarWidth() : 0;\n    };\n    RowDD.prototype.addErrorElem = function () {\n        var dragelem = document.getElementsByClassName('e-cloneproperties')[0];\n        var errorelem = dragelem.querySelectorAll('.e-errorelem').length;\n        if (!errorelem && !this.parent.rowDropSettings.targetID) {\n            var ele = document.createElement('div');\n            classList(ele, ['e-errorcontainer'], []);\n            classList(ele, ['e-icons', 'e-errorelem'], []);\n            var errorVal = dragelem.querySelector('.errorValue');\n            var content = dragelem.querySelector('.e-rowcell').innerHTML;\n            if (errorVal) {\n                content = errorVal.innerHTML;\n                errorVal.parentNode.removeChild(errorVal);\n            }\n            dragelem.querySelector('.e-rowcell').innerHTML = '';\n            var spanContent = document.createElement('span');\n            spanContent.className = 'errorValue';\n            spanContent.style.paddingLeft = '16px';\n            spanContent.innerHTML = content;\n            dragelem.querySelector('.e-rowcell').appendChild(ele);\n            dragelem.querySelector('.e-rowcell').appendChild(spanContent);\n        }\n    };\n    RowDD.prototype.removeErrorElem = function () {\n        var errorelem = document.querySelector('.e-errorelem');\n        if (errorelem) {\n            errorelem.remove();\n        }\n    };\n    RowDD.prototype.topOrBottomBorder = function (target) {\n        var element;\n        var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n        var rowElement = [];\n        element = closest(target, 'tr');\n        rowElement = element ? [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse')) : [];\n        if (rowElement.length) {\n            if (this.dropPosition === 'topSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-droptop');\n                if (this.parent.element.getElementsByClassName('e-lastrow-dragborder').length > 0) {\n                    this.parent.element.getElementsByClassName('e-lastrow-dragborder')[0].remove();\n                }\n            }\n            if (this.dropPosition === 'bottomSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-dropbottom');\n            }\n        }\n    };\n    RowDD.prototype.removetopOrBottomBorder = function () {\n        var border = [];\n        border = [].slice.call(this.parent.element.querySelectorAll('.e-dropbottom, .e-droptop'));\n        if (border.length) {\n            this.addRemoveClasses(border, false, 'e-dropbottom');\n            this.addRemoveClasses(border, false, 'e-droptop');\n        }\n    };\n    RowDD.prototype.addRemoveClasses = function (cells, add, className) {\n        for (var i = 0, len = cells.length; i < len; i++) {\n            if (add) {\n                cells[i].classList.add(className);\n            }\n            else {\n                cells[i].classList.remove(className);\n            }\n        }\n    };\n    RowDD.prototype.getOffset = function (element) {\n        var box = element.getBoundingClientRect();\n        var body = document.body;\n        var docElem = document.documentElement;\n        var scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop;\n        var scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft;\n        var clientTop = docElem.clientTop || body.clientTop || 0;\n        var clientLeft = docElem.clientLeft || body.clientLeft || 0;\n        var top = box.top + scrollTop - clientTop;\n        var left = box.left + scrollLeft - clientLeft;\n        return { top: Math.round(top), left: Math.round(left) };\n    };\n    RowDD.prototype.Rowdraging = function (args) {\n        var tObj = this.parent;\n        var cloneElement = this.parent.element.querySelector('.e-cloneproperties');\n        cloneElement.style.cursor = '';\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        var rowIdx = rowEle ? rowEle.rowIndex : -1;\n        var dragRecords = [];\n        var droppedRecord = tObj.getCurrentViewRecords()[rowIdx];\n        this.removeErrorElem();\n        this.canDrop = true;\n        if (!args.data[0]) {\n            dragRecords.push(args.data);\n        }\n        else {\n            dragRecords = args.data;\n        }\n        if (rowIdx !== -1) {\n            this.ensuredropPosition(dragRecords, droppedRecord);\n        }\n        else {\n            this.canDrop = false;\n            this.addErrorElem();\n        }\n        if (!tObj.rowDropSettings.targetID && this.canDrop) {\n            tObj.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n        }\n        if (tObj.rowDropSettings.targetID) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID) {\n                var srcControl = dropElement.ej2_instances[0];\n                srcControl.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n            }\n        }\n        if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID)) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (!dropElement) {\n                cloneElement.style.cursor = 'default';\n            }\n        }\n    };\n    RowDD.prototype.rowDropped = function (args) {\n        var tObj = this.parent;\n        if (!tObj.rowDropSettings.targetID) {\n            if (parentsUntil(args.target, 'e-content')) {\n                if (this.parent.element.querySelector('.e-errorelem')) {\n                    this.dropPosition = 'Invalid';\n                }\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel) {\n                    if (!isCountRequired(this.parent)) {\n                        this.dropRows(args);\n                    }\n                    tObj.refresh();\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                    if (!isNullOrUndefined(tObj.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                        tObj.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                    }\n                }\n            }\n        }\n        else {\n            if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID) || parentsUntil(args.target, 'e-treegrid') &&\n                parentsUntil(args.target, 'e-treegrid').id === tObj.rowDropSettings.targetID) {\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel && tObj.rowDropSettings.targetID) {\n                    this.dragDropGrid(args);\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                }\n            }\n        }\n        this.removetopOrBottomBorder();\n        this.removeChildBorder();\n        if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-firstrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n        else if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-lastrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.dragDropGrid = function (args) {\n        var tObj = this.parent;\n        var currentIndex;\n        var targetRow = closest(args.target, 'tr');\n        var targetIndex = isNaN(this.getTargetIdx(targetRow)) ? 0 : this.getTargetIdx(targetRow);\n        var dropElement = parentsUntil(args.target, 'e-treegrid');\n        var srcControl;\n        if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID && !isRemoteData(this.parent)\n            && !isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            var records = tObj.getSelectedRecords();\n            var indexes = [];\n            for (var i = 0; i < records.length; i++) {\n                indexes[i] = records[i].index;\n            }\n            tObj.notify(events.rowsRemove, { indexes: indexes, records: records });\n            srcControl.notify(events.rowsAdd, { toIndex: targetIndex, records: records });\n            tObj.refresh();\n            srcControl.refresh();\n            if (srcControl.grid.dataSource.length > 1) {\n                srcControl.refresh();\n                if (!isNullOrUndefined(srcControl.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                    srcControl.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                }\n                if (!isNullOrUndefined(srcControl.getContent().querySelector('.e-lastrow-border'))) {\n                    srcControl.getContent().querySelector('.e-lastrow-border').remove();\n                }\n            }\n        }\n        if (isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            tObj.refresh();\n            srcControl.refresh();\n        }\n    };\n    RowDD.prototype.getTargetIdx = function (targetRow) {\n        return targetRow ? parseInt(targetRow.getAttribute('aria-rowindex'), 10) : 0;\n    };\n    RowDD.prototype.getParentData = function (record) {\n        var parentItem = record.parentItem;\n        if (this.dropPosition === 'bottomSegment') {\n            var selectedRecord = this.parent.getSelectedRecords()[0];\n            this.droppedRecord = getParentData(this.parent, selectedRecord.parentItem.uniqueID);\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var level = this.parent.getSelectedRecords()[0].level;\n            if (level === parentItem.level) {\n                this.droppedRecord = getParentData(this.parent, parentItem.uniqueID);\n            }\n            else {\n                this.getParentData(parentItem);\n            }\n        }\n    };\n    RowDD.prototype.dropRows = function (args, isByMethod) {\n        if (this.dropPosition !== 'Invalid' && !isRemoteData(this.parent)) {\n            var tObj = this.parent;\n            var draggedRecord = void 0;\n            var droppedRecord = void 0;\n            if (isNullOrUndefined(args.dropIndex)) {\n                var rowIndex = tObj.getSelectedRowIndexes()[0] - 1;\n                var record = tObj.getCurrentViewRecords()[rowIndex];\n                this.getParentData(record);\n            }\n            else {\n                this.droppedRecord = tObj.getCurrentViewRecords()[args.dropIndex];\n            }\n            var dragRecords = [];\n            droppedRecord = this.droppedRecord;\n            if (!args.data[0]) {\n                dragRecords.push(args.data);\n            }\n            else {\n                dragRecords = args.data;\n            }\n            var count = 0;\n            var multiplegrid = this.parent.rowDropSettings.targetID;\n            this.isMultipleGrid = multiplegrid;\n            var addToBottom = false;\n            if (!multiplegrid) {\n                this.ensuredropPosition(dragRecords, droppedRecord);\n            }\n            else {\n                this.isaddtoBottom = addToBottom = multiplegrid && this.isDraggedWithChild;\n            }\n            var dragLength = dragRecords.length;\n            for (var i = 0; i < dragLength; i++) {\n                draggedRecord = dragRecords[i];\n                this.draggedRecord = draggedRecord;\n                var recordIndex = args.dropIndex;\n                var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n                if (this.dropPosition !== 'Invalid') {\n                    if (!tObj.rowDropSettings.targetID || isByMethod) {\n                        this.deleteDragRow();\n                    }\n                    var recordIndex1 = this.treeGridData.indexOf(droppedRecord);\n                    this.dropAtTop(recordIndex1, isSelfReference, i);\n                    if (this.dropPosition === 'bottomSegment') {\n                        if (!droppedRecord.hasChildRecords) {\n                            if (this.parent.parentIdMapping) {\n                                this.treeData.splice(recordIndex1 + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + 1, 0, this.draggedRecord);\n                        }\n                        else {\n                            count = this.getChildCount(droppedRecord, 0);\n                            if (this.parent.parentIdMapping) {\n                                this.treeData.splice(recordIndex1 + count + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + count + 1, 0, this.draggedRecord);\n                        }\n                        draggedRecord.parentItem = this.treeGridData[recordIndex1].parentItem;\n                        draggedRecord.parentUniqueID = this.treeGridData[recordIndex1].parentUniqueID;\n                        draggedRecord.level = this.treeGridData[recordIndex1].level;\n                        if (draggedRecord.hasChildRecords) {\n                            var level = 1;\n                            this.updateChildRecordLevel(draggedRecord, level);\n                            this.updateChildRecord(draggedRecord, recordIndex1 + count + 1);\n                        }\n                        if (droppedRecord.parentItem) {\n                            var rec = this.getChildrecordsByParentID(droppedRecord.parentUniqueID);\n                            var childRecords = rec[0].childRecords;\n                            var droppedRecordIndex = childRecords.indexOf(droppedRecord) + 1;\n                            childRecords.splice(droppedRecordIndex, 0, draggedRecord);\n                        }\n                    }\n                    this.dropMiddle(recordIndex, recordIndex1, args, isByMethod, isSelfReference, i);\n                }\n                if (isNullOrUndefined(draggedRecord.parentItem)) {\n                    var parentRecords = tObj.parentData;\n                    var newParentIndex = parentRecords.indexOf(this.droppedRecord);\n                    if (this.dropPosition === 'bottomSegment') {\n                        parentRecords.splice(newParentIndex + 1, 0, draggedRecord);\n                    }\n                    else if (this.dropPosition === 'topSegment') {\n                        parentRecords.splice(newParentIndex, 0, draggedRecord);\n                    }\n                }\n                tObj.rowDragAndDropModule.refreshGridDataSource();\n            }\n        }\n    };\n    RowDD.prototype.dropMiddle = function (recordIndex, recordIndex1, args, isSelfReference, isByMethod, i) {\n        var tObj = this.parent;\n        var childRecords = findChildrenRecords(this.droppedRecord);\n        var childRecordsLength = (isNullOrUndefined(childRecords) ||\n            childRecords.length === 0) ? recordIndex1 + 1 :\n            childRecords.length + recordIndex1 + 1;\n        if (this.dropPosition === 'middleSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(childRecordsLength, 0, this.draggedRecord.taskData);\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            else {\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            this.recordLevel();\n            if (this.draggedRecord.hasChildRecords) {\n                this.updateChildRecord(this.draggedRecord, childRecordsLength, this.droppedRecord.expanded);\n            }\n        }\n    };\n    RowDD.prototype.dropAtTop = function (recordIndex1, isSelfReference, i) {\n        var tObj = this.parent;\n        if (this.dropPosition === 'topSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(recordIndex1, 0, this.draggedRecord.taskData);\n            }\n            this.draggedRecord.parentItem = this.treeGridData[recordIndex1].parentItem;\n            this.draggedRecord.parentUniqueID = this.treeGridData[recordIndex1].parentUniqueID;\n            this.draggedRecord.level = this.treeGridData[recordIndex1].level;\n            this.treeGridData.splice(recordIndex1, 0, this.draggedRecord);\n            if (this.draggedRecord.hasChildRecords) {\n                var level = 1;\n                this.updateChildRecord(this.draggedRecord, recordIndex1);\n                this.updateChildRecordLevel(this.draggedRecord, level);\n            }\n            if (this.droppedRecord.parentItem) {\n                var rec = this.getChildrecordsByParentID(this.droppedRecord.parentUniqueID);\n                var childRecords = rec[0].childRecords;\n                var droppedRecordIndex = childRecords.indexOf(this.droppedRecord);\n                childRecords.splice(droppedRecordIndex, 0, this.draggedRecord);\n            }\n        }\n    };\n    RowDD.prototype.recordLevel = function () {\n        var tObj = this.parent;\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var childItem = tObj.childMapping;\n        if (!droppedRecord.hasChildRecords) {\n            droppedRecord.hasChildRecords = true;\n            droppedRecord.hasFilteredChildRecords = true;\n            if (isNullOrUndefined(droppedRecord.childRecords)) {\n                droppedRecord.childRecords = [];\n                if (!tObj.parentIdMapping && isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                    droppedRecord.taskData[childItem] = [];\n                }\n            }\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var parentItem = extend({}, droppedRecord);\n            delete parentItem.childRecords;\n            draggedRecord.parentItem = parentItem;\n            draggedRecord.parentUniqueID = droppedRecord.uniqueID;\n            droppedRecord.childRecords.splice(droppedRecord.childRecords.length, 0, draggedRecord);\n            if (!isNullOrUndefined(draggedRecord) && !tObj.parentIdMapping && !isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                droppedRecord.taskData[tObj.childMapping].splice(droppedRecord.childRecords.length, 0, draggedRecord.taskData);\n            }\n            if (!draggedRecord.hasChildRecords) {\n                draggedRecord.level = droppedRecord.level + 1;\n            }\n            else {\n                var level = 1;\n                draggedRecord.level = droppedRecord.level + 1;\n                this.updateChildRecordLevel(draggedRecord, level);\n            }\n            droppedRecord.expanded = true;\n            // if (tObj.isLocalData) {\n            //     tObj.parentData.push(droppedRecord);\n            // }\n        }\n    };\n    RowDD.prototype.deleteDragRow = function () {\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            this.treeGridData = this.parent.grid.dataSource.dataSource.json;\n            this.treeData = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            this.treeGridData = this.parent.grid.dataSource;\n            this.treeData = this.parent.dataSource;\n        }\n        var deletedRow;\n        deletedRow = getParentData(this.parent, this.draggedRecord.uniqueID);\n        this.removeRecords(deletedRow);\n    };\n    RowDD.prototype.updateChildRecord = function (record, count, expanded) {\n        var currentRecord;\n        var tObj = this.parent;\n        var length = 0;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            tObj.flatData.splice(count, 0, currentRecord);\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(count, 0, currentRecord.taskData);\n            }\n            if (currentRecord.hasChildRecords) {\n                count = this.updateChildRecord(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.updateChildRecordLevel = function (record, level) {\n        var length = 0;\n        var currentRecord;\n        level++;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            var parentData = void 0;\n            if (record.parentItem) {\n                parentData = getParentData(this.parent, record.parentItem.uniqueID);\n            }\n            currentRecord.level = record.parentItem ? parentData.level + level : record.level + 1;\n            if (currentRecord.hasChildRecords) {\n                level--;\n                level = this.updateChildRecordLevel(currentRecord, level);\n            }\n        }\n        return level;\n    };\n    RowDD.prototype.removeRecords = function (record) {\n        var tObj = this.parent;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        var deletedRow = record;\n        var recordIndex;\n        var rowIndex;\n        var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n        var flatParentData = this.getChildrecordsByParentID(deletedRow.parentUniqueID)[0];\n        if (deletedRow) {\n            if (deletedRow.parentItem) {\n                var childRecords = flatParentData ? flatParentData.childRecords : [];\n                var childIndex = 0;\n                if (childRecords && childRecords.length > 0) {\n                    childIndex = childRecords.indexOf(deletedRow);\n                    flatParentData.childRecords.splice(childIndex, 1);\n                    if (!this.parent.parentIdMapping) {\n                        editAction({ value: deletedRow, action: 'delete' }, this.parent, isSelfReference, deletedRow.index, deletedRow.index);\n                    }\n                }\n            }\n            if (tObj.parentIdMapping) {\n                if (deletedRow.hasChildRecords && deletedRow.childRecords.length > 0) {\n                    this.removeChildItem(deletedRow);\n                }\n                var idx = void 0;\n                var idz = void 0;\n                var treeGridData = dataSource;\n                for (var i = 0; i < treeGridData.length; i++) {\n                    if (treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idx = i;\n                    }\n                }\n                for (var i = 0; i < this.treeGridData.length; i++) {\n                    if (this.treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idz = i;\n                    }\n                }\n                if (idx !== -1 || idz !== -1) {\n                    dataSource.splice(idx, 1);\n                    this.treeGridData.splice(idz, 1);\n                }\n            }\n            var recordIndex_1 = this.treeGridData.indexOf(deletedRow);\n            if (!tObj.parentIdMapping) {\n                var parentIndex = this.parent.parentData.indexOf(deletedRow);\n                if (parentIndex !== -1) {\n                    tObj.parentData.splice(parentIndex, 1);\n                    dataSource.splice(parentIndex, 1);\n                }\n            }\n            if (recordIndex_1 === -1 && !tObj.parentIdMapping) {\n                var primaryKeyField = tObj.getPrimaryKeyFieldNames()[0];\n                for (var j = 0; j < this.treeGridData.length; j++) {\n                    if (this.treeGridData[j][primaryKeyField] === deletedRow[primaryKeyField]) {\n                        recordIndex_1 = j;\n                    }\n                }\n            }\n            if (!tObj.parentIdMapping) {\n                var deletedRecordCount = this.getChildCount(deletedRow, 0);\n                this.treeGridData.splice(recordIndex_1, deletedRecordCount + 1);\n            }\n            if (deletedRow.parentItem && flatParentData && flatParentData.childRecords && !flatParentData.childRecords.length) {\n                flatParentData.expanded = false;\n                flatParentData.hasChildRecords = false;\n                flatParentData.hasFilteredChildRecords = false;\n            }\n        }\n    };\n    RowDD.prototype.removeChildItem = function (record) {\n        var tObj = this.parent;\n        var currentRecord;\n        var idx;\n        var idz;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            var treeGridData = void 0;\n            if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n                treeGridData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                treeGridData = this.parent.dataSource;\n            }\n            for (var i_1 = 0; i_1 < treeGridData.length; i_1++) {\n                if (treeGridData[i_1][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idx = i_1;\n                }\n            }\n            for (var i_2 = 0; i_2 < this.treeGridData.length; i_2++) {\n                if (this.treeGridData[i_2][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idz = i_2;\n                    break;\n                }\n            }\n            if (idx !== -1 || idz !== -1) {\n                dataSource.splice(idx, 1);\n                this.treeGridData.splice(idz, 1);\n            }\n            if (currentRecord.hasChildRecords) {\n                this.removeChildItem(currentRecord);\n            }\n        }\n    };\n    RowDD.prototype.getChildCount = function (record, count) {\n        var currentRecord;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            if (currentRecord.hasChildRecords) {\n                count = this.getChildCount(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.ensuredropPosition = function (draggedRecords, currentRecord) {\n        var tObj = this.parent;\n        var rowDragMoudule = this;\n        draggedRecords.filter(function (e) {\n            if (e.hasChildRecords && !isNullOrUndefined(e.childRecords)) {\n                var valid = e.childRecords.indexOf(currentRecord);\n                if (valid === -1) {\n                    rowDragMoudule.ensuredropPosition(e.childRecords, currentRecord);\n                }\n                else {\n                    rowDragMoudule.dropPosition = 'Invalid';\n                    rowDragMoudule.addErrorElem();\n                    rowDragMoudule.canDrop = false;\n                    return;\n                }\n            }\n        });\n    };\n    RowDD.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    RowDD.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowdraging, this.Rowdraging);\n        this.parent.off(events.rowDropped, this.rowDropped);\n        this.parent.off(events.rowsAdd, this.rowsAdded);\n        this.parent.off(events.rowsRemove, this.rowsRemoved);\n    };\n    /**\n     * hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    RowDD.prototype.getModuleName = function () {\n        return 'rowDragAndDrop';\n    };\n    return RowDD;\n}());\nexport { RowDD };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the row drop settings of the TreeGrid.\n */\nvar RowDropSettings = /** @class */ (function (_super) {\n    __extends(RowDropSettings, _super);\n    function RowDropSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], RowDropSettings.prototype, \"targetID\", void 0);\n    return RowDropSettings;\n}(ChildProperty));\nexport { RowDropSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualRowModelGenerator } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\n/**\n * RowModelGenerator is used to generate grid data rows.\n * @hidden\n */\nvar TreeVirtualRowModelGenerator = /** @class */ (function (_super) {\n    __extends(TreeVirtualRowModelGenerator, _super);\n    function TreeVirtualRowModelGenerator(parent) {\n        var _this = _super.call(this, parent) || this;\n        _this.addEventListener();\n        return _this;\n    }\n    TreeVirtualRowModelGenerator.prototype.addEventListener = function () {\n        this.parent.on(events.dataListener, this.getDatas, this);\n    };\n    TreeVirtualRowModelGenerator.prototype.getDatas = function (args) {\n        this.visualData = args.data;\n    };\n    TreeVirtualRowModelGenerator.prototype.generateRows = function (data, notifyArgs) {\n        if (this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') {\n            return _super.prototype.generateRows.call(this, data, notifyArgs);\n        }\n        else {\n            if (!isNullOrUndefined(notifyArgs.requestType) && notifyArgs.requestType.toString() === 'collapseAll') {\n                notifyArgs.requestType = 'refresh';\n            }\n            var rows = _super.prototype.generateRows.call(this, data, notifyArgs);\n            for (var r = 0; r < rows.length; r++) {\n                rows[r].index = (this.visualData).indexOf(rows[r].data);\n            }\n            return rows;\n        }\n    };\n    TreeVirtualRowModelGenerator.prototype.checkAndResetCache = function (action) {\n        var clear = ['paging', 'refresh', 'sorting', 'filtering', 'searching', 'reorder',\n            'save', 'delete'].some(function (value) { return action === value; });\n        if (this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') {\n            var model = 'model';\n            var currentPage = this[model].currentPage;\n            if (clear) {\n                this.cache = {};\n                this.data = {};\n                this.groups = {};\n            }\n            else if (action === 'virtualscroll' && this.cache[currentPage] &&\n                this.cache[currentPage].length > (this.parent.contentModule).getBlockSize()) {\n                delete this.cache[currentPage];\n            }\n        }\n        else {\n            if (clear || action === 'virtualscroll') {\n                this.cache = {};\n                this.data = {};\n                this.groups = {};\n            }\n        }\n        return clear;\n    };\n    return TreeVirtualRowModelGenerator;\n}(VirtualRowModelGenerator));\nexport { TreeVirtualRowModelGenerator };\n","import { getObject, Filter as GridFilter, Grid } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { getParentData } from '../utils';\n/**\n * TreeGrid Filter module will handle filtering action\n * @hidden\n */\nvar Filter = /** @class */ (function () {\n    /**\n     * Constructor for Filter module\n     */\n    function Filter(parent) {\n        Grid.Inject(GridFilter);\n        this.parent = parent;\n        this.isHierarchyFilter = false;\n        this.filteredResult = [];\n        this.flatFilteredData = [];\n        this.filteredParentRecs = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Filter.prototype.getModuleName = function () {\n        return 'filter';\n    };\n    /**\n     * To destroy the Filter module\n     * @return {void}\n     * @hidden\n     */\n    Filter.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.addEventListener = function () {\n        this.parent.on('updateFilterRecs', this.updatedFilteredRecord, this);\n        this.parent.on('clearFilters', this.clearFilterLevel, this);\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateFilterRecs', this.updatedFilteredRecord);\n        this.parent.off('clearFilters', this.clearFilterLevel);\n    };\n    /**\n     * Function to update filtered records\n     *  @hidden\n     */\n    Filter.prototype.updatedFilteredRecord = function (dataDetails) {\n        setValue('uniqueIDFilterCollection', {}, this.parent);\n        this.flatFilteredData = dataDetails.data;\n        this.filteredParentRecs = [];\n        this.filteredResult = [];\n        this.isHierarchyFilter = false;\n        for (var f = 0; f < this.flatFilteredData.length; f++) {\n            var rec = this.flatFilteredData[f];\n            this.addParentRecord(rec);\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n                : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'None') &&\n                (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== ''))) {\n                this.isHierarchyFilter = true;\n            }\n            var ischild = getObject('childRecords', rec);\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                setValue('hasFilteredChildRecords', this.checkChildExsist(rec), rec);\n            }\n            var parent_1 = getObject('parentItem', rec);\n            if (!isNullOrUndefined(parent_1)) {\n                var parRecord = getParentData(this.parent, rec.parentItem.uniqueID, true);\n                //let parRecord: Object = this.flatFilteredData.filter((e: ITreeData) => {\n                //          return e.uniqueID === rec.parentItem.uniqueID; })[0];\n                setValue('hasFilteredChildRecords', true, parRecord);\n                if (parRecord && parRecord.parentItem) {\n                    this.updateParentFilteredRecord(parRecord);\n                }\n            }\n        }\n        if (this.flatFilteredData.length > 0 && this.isHierarchyFilter) {\n            this.updateFilterLevel();\n        }\n        this.parent.notify('updateAction', { result: this.filteredResult });\n    };\n    Filter.prototype.updateParentFilteredRecord = function (record) {\n        var parRecord = getParentData(this.parent, record.parentItem.uniqueID, true);\n        var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n        if (parRecord && uniqueIDValue.hasOwnProperty(parRecord.uniqueID)) {\n            setValue('hasFilteredChildRecords', true, parRecord);\n        }\n        if (parRecord && parRecord.parentItem) {\n            this.updateParentFilteredRecord(parRecord);\n        }\n    };\n    ;\n    Filter.prototype.addParentRecord = function (record) {\n        var parent = getParentData(this.parent, record.parentUniqueID);\n        //let parent: Object = this.parent.flatData.filter((e: ITreeData) => {return e.uniqueID === record.parentUniqueID; })[0];\n        var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n            : this.parent.searchSettings.hierarchyMode;\n        if (hierarchyMode === 'None' && (this.parent.grid.filterSettings.columns.length !== 0\n            || this.parent.grid.searchSettings.key !== '')) {\n            if (isNullOrUndefined(parent)) {\n                if (this.flatFilteredData.indexOf(record) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                        record.hasFilteredChildRecords = true;\n                    }\n                    return;\n                }\n            }\n            else {\n                this.addParentRecord(parent);\n                if (this.flatFilteredData.indexOf(parent) !== -1 || this.filteredResult.indexOf(parent) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n                else {\n                    if (this.filteredResult.indexOf(record) === -1 && this.flatFilteredData.indexOf(record) !== -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n            }\n        }\n        else {\n            if (!isNullOrUndefined(parent)) {\n                var hierarchyMode_1 = this.parent.grid.searchSettings.key === '' ?\n                    this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n                if (hierarchyMode_1 === 'Child' && (this.parent.grid.filterSettings.columns.length !== 0\n                    || this.parent.grid.searchSettings.key !== '')) {\n                    if (this.flatFilteredData.indexOf(parent) !== -1) {\n                        this.addParentRecord(parent);\n                    }\n                }\n                else {\n                    this.addParentRecord(parent);\n                }\n            }\n            if (this.filteredResult.indexOf(record) === -1) {\n                this.filteredResult.push(record);\n                setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n            }\n        }\n    };\n    Filter.prototype.checkChildExsist = function (records) {\n        var childRec = getObject('childRecords', records);\n        var isExist = false;\n        for (var count = 0; count < childRec.length; count++) {\n            var ischild = childRec[count].childRecords;\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ?\n                this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'Both') && (this.parent.grid.filterSettings.columns.length !== 0\n                || this.parent.grid.searchSettings.key !== ''))) {\n                var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n                if (!uniqueIDValue.hasOwnProperty(childRec[count].uniqueID)) {\n                    this.filteredResult.push(childRec[count]);\n                    setValue('uniqueIDFilterCollection.' + childRec[count].uniqueID, childRec[count], this.parent);\n                    isExist = true;\n                }\n            }\n            if ((hierarchyMode === 'None')\n                && (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== '')) {\n                if (this.flatFilteredData.indexOf(childRec[count]) !== -1) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                isExist = this.checkChildExsist(childRec[count]);\n            }\n            if ((hierarchyMode === 'Child' || hierarchyMode === 'Both') && childRec.length) {\n                isExist = true;\n            }\n        }\n        return isExist;\n    };\n    Filter.prototype.updateFilterLevel = function () {\n        var record = this.filteredResult;\n        var len = this.filteredResult.length;\n        for (var c = 0; c < len; c++) {\n            var parent_2 = getParentData(this.parent, record[c].parentUniqueID);\n            var isPrst = record.indexOf(parent_2) !== -1;\n            if (isPrst) {\n                var parent_3 = getParentData(this.parent, record[c].parentUniqueID, true);\n                record[c].filterLevel = parent_3.filterLevel + 1;\n            }\n            else {\n                record[c].filterLevel = 0;\n                this.filteredParentRecs.push(record[c]);\n            }\n        }\n    };\n    Filter.prototype.clearFilterLevel = function (data) {\n        var count = 0;\n        var flatData = data.flatData;\n        var len = flatData.length;\n        var currentRecord;\n        for (count; count < len; count++) {\n            currentRecord = flatData[count];\n            var fLevel = currentRecord.filterLevel;\n            if (fLevel || fLevel === 0 || !isNullOrUndefined(currentRecord.hasFilteredChildRecords)) {\n                currentRecord.hasFilteredChildRecords = null;\n                currentRecord.filterLevel = null;\n            }\n        }\n        this.filteredResult = [];\n        this.parent.notify('updateResults', { result: flatData, count: flatData.length });\n    };\n    return Filter;\n}());\nexport { Filter };\n","import { getObject, Grid, ExcelExport as GridExcel } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid Excel Export module\n * @hidden\n */\nvar ExcelExport = /** @class */ (function () {\n    /**\n     * Constructor for Excel Export module\n     */\n    function ExcelExport(parent) {\n        Grid.Inject(GridExcel);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ExcelExport.prototype.getModuleName = function () {\n        return 'ExcelExport';\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.addEventListener = function () {\n        this.parent.on('updateResults', this.updateExcelResultModel, this);\n        this.parent.on('excelCellInfo', this.excelQueryCellInfo, this);\n    };\n    /**\n     * To destroy the Excel Export\n     * @return {void}\n     * @hidden\n     */\n    ExcelExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateResults', this.updateExcelResultModel);\n        this.parent.off('excelCellInfo', this.excelQueryCellInfo);\n    };\n    ExcelExport.prototype.updateExcelResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    ExcelExport.prototype.Map = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob, isCsv) {\n        var _this = this;\n        var dataSource = this.parent.dataSource;\n        var property = Object();\n        setValue('isCsv', isCsv, property);\n        setValue('cancel', false, property);\n        return new Promise(function (resolve, reject) {\n            var dm = _this.isLocal() ? new DataManager(dataSource) : _this.parent.dataSource;\n            var query = new Query();\n            if (!_this.isLocal()) {\n                query = _this.generateQuery(query);\n                setValue('query', query, property);\n            }\n            _this.parent.trigger(event.beforeExcelExport, extend(property, excelExportProperties));\n            if (getObject('cancel', property)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customData = null;\n                if (!isNullOrUndefined(excelExportProperties) && !isNullOrUndefined(excelExportProperties.dataSource)) {\n                    customData = excelExportProperties.dataSource;\n                }\n                excelExportProperties = _this.manipulateExportProperties(excelExportProperties, dataSource, e);\n                return _this.parent.grid.excelExportModule.Map(_this.parent.grid, excelExportProperties, isMultipleExport, workbook, isCsv, isBlob).then(function (book) {\n                    if (customData != null) {\n                        excelExportProperties.dataSource = customData;\n                    }\n                    else {\n                        delete excelExportProperties.dataSource;\n                    }\n                    resolve(book);\n                });\n            });\n        });\n    };\n    ExcelExport.prototype.generateQuery = function (query, property) {\n        if (!isNullOrUndefined(property) && property.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            property.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    ExcelExport.prototype.manipulateExportProperties = function (property, dtSrc, queryResult) {\n        //count not required for this query\n        var args = Object();\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(property) && !isNullOrUndefined(property.exportType)) {\n            setValue('exportType', property.exportType, args);\n        }\n        if (!this.isLocal() || !isNullOrUndefined(this.parent.parentIdMapping)) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getObject('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!this.isLocal()) {\n            this.parent.flatData = [];\n        }\n        if (property && property.dataSource && this.isLocal()) {\n            var flatsData = this.parent.flatData;\n            var dataSrc = property.dataSource instanceof DataManager ? property.dataSource.dataSource.json : property.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatsData;\n        }\n        property = isNullOrUndefined(property) ? Object() : property;\n        property.dataSource = new DataManager({ json: dtSrc });\n        return property;\n    };\n    /**\n     * TreeGrid Excel Export cell modifier\n     * @hidden\n     */\n    ExcelExport.prototype.excelQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = args.data;\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.indent = pad;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('excelQueryCellInfo', args);\n    };\n    ExcelExport.prototype.isLocal = function () {\n        return !isRemoteData(this.parent) && isOffline(this.parent);\n    };\n    return ExcelExport;\n}());\nexport { ExcelExport };\n","import { getObject, PdfExport as GridPdf, Grid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid PDF Export module\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for PDF export module\n     */\n    function PdfExport(parent) {\n        Grid.Inject(GridPdf);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    PdfExport.prototype.getModuleName = function () {\n        return 'PdfExport';\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.addEventListener = function () {\n        this.parent.on('pdfCellInfo', this.pdfQueryCellInfo, this);\n        this.parent.on('updateResults', this.updatePdfResultModel, this);\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('pdfCellInfo', this.pdfQueryCellInfo);\n        this.parent.off('updateResults', this.updatePdfResultModel);\n    };\n    /**\n     * To destroy the PDF Export\n     * @return {void}\n     * @hidden\n     */\n    PdfExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    PdfExport.prototype.updatePdfResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    PdfExport.prototype.Map = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        var _this = this;\n        var dtSrc = this.parent.dataSource;\n        var prop = Object();\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('cancel', false, prop);\n        return new Promise(function (resolve, reject) {\n            var dm = isLocal ? new DataManager(dtSrc) : _this.parent.dataSource;\n            var query = new Query();\n            if (!isLocal) {\n                query = _this.generateQuery(query);\n                setValue('query', query, prop);\n            }\n            _this.parent.trigger(event.beforePdfExport, extend(prop, pdfExportProperties));\n            if (getObject('cancel', prop)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customsData = null;\n                if (!isNullOrUndefined(pdfExportProperties) && !isNullOrUndefined(pdfExportProperties.dataSource)) {\n                    customsData = pdfExportProperties.dataSource;\n                }\n                pdfExportProperties = _this.manipulatePdfProperties(pdfExportProperties, dtSrc, e);\n                return _this.parent.grid.pdfExportModule.Map(_this.parent.grid, pdfExportProperties, isMultipleExport, pdfDoc, isBlob).then(function (document) {\n                    if (customsData != null) {\n                        pdfExportProperties.dataSource = customsData;\n                    }\n                    else {\n                        delete pdfExportProperties.dataSource;\n                    }\n                    resolve(document);\n                });\n            });\n        });\n    };\n    PdfExport.prototype.generateQuery = function (query, prop) {\n        if (!isNullOrUndefined(prop) && prop.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            prop.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    PdfExport.prototype.manipulatePdfProperties = function (prop, dtSrc, queryResult) {\n        var args = {};\n        //count not required for this query  \n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.exportType)) {\n            setValue('exportType', prop.exportType, args);\n        }\n        if (!isLocal || !isNullOrUndefined(this.parent.parentIdMapping)) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getValue('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!isLocal) {\n            this.parent.flatData = [];\n        }\n        if (prop && prop.dataSource && isLocal) {\n            var flatDatas = this.parent.flatData;\n            var dataSrc = prop.dataSource instanceof DataManager ? prop.dataSource.dataSource.json : prop.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatDatas;\n        }\n        prop = isNullOrUndefined(prop) ? {} : prop;\n        prop.dataSource = new DataManager({ json: dtSrc });\n        return prop;\n    };\n    /**\n     * TreeGrid PDF Export cell modifier\n     * @hidden\n     */\n    PdfExport.prototype.pdfQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = getObject('data', args);\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.paragraphIndent = pad * 3;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('pdfQueryCellInfo', args);\n    };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { Grid } from '@syncfusion/ej2-grids';\nimport { Page as GridPage } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { DataManager, Query, Predicate } from '@syncfusion/ej2-data';\nimport { getValue, isNullOrUndefined, isBlazor } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * The `Page` module is used to render pager and handle paging action.\n * @hidden\n */\nvar Page = /** @class */ (function () {\n    function Page(parent) {\n        Grid.Inject(GridPage);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    Page.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandPagedchilds, this);\n        this.parent.on(events.pagingActions, this.pageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandPagedchilds);\n        this.parent.off(events.pagingActions, this.pageAction);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Page.prototype.getModuleName = function () {\n        return 'pager';\n    };\n    /**\n     * Refreshes the page count, pager information, and external message.\n     * @return {void}\n     */\n    Page.prototype.refresh = function () {\n        this.parent.grid.pagerModule.refresh();\n    };\n    /**\n     * To destroy the pager\n     * @return {void}\n     * @hidden\n     */\n    Page.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Navigates to the target page according to the given number.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    Page.prototype.goToPage = function (pageNo) {\n        this.parent.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of the external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    Page.prototype.updateExternalMessage = function (message) {\n        this.parent.grid.pagerModule.updateExternalMessage(message);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.collapseExpandPagedchilds = function (rowDetails) {\n        rowDetails.record.expanded = rowDetails.action === 'collapse' ? false : true;\n        if (isBlazor()) {\n            this.parent.flatData.filter(function (e) {\n                return e.uniqueID === rowDetails.record.uniqueID;\n            })[0].expanded = rowDetails.action === 'collapse' ? false : true;\n        }\n        var ret = {\n            result: this.parent.flatData,\n            row: rowDetails.row,\n            action: rowDetails.action,\n            record: rowDetails.record,\n            count: this.parent.flatData.length\n        };\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret);\n    };\n    Page.prototype.pageRoot = function (pagedResults, temp, result) {\n        var newResults = isNullOrUndefined(result) ? [] : result;\n        var _loop_1 = function (t) {\n            newResults.push(temp[t]);\n            var res = [];\n            if (temp[t].hasChildRecords) {\n                res = pagedResults.filter(function (e) {\n                    return temp[t].uniqueID === e.parentUniqueID;\n                });\n                newResults = this_1.pageRoot(pagedResults, res, newResults);\n            }\n        };\n        var this_1 = this;\n        for (var t = 0; t < temp.length; t++) {\n            _loop_1(t);\n        }\n        return newResults;\n    };\n    Page.prototype.pageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        if (this.parent.pageSettings.pageSizeMode === 'Root') {\n            var temp = [];\n            var propname = (this.parent.grid.filterSettings.columns.length > 0) &&\n                (this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'None') ?\n                'filterLevel' : 'level';\n            var query = new Query().where(propname, 'equal', 0);\n            temp = dm.executeLocal(query);\n            pageingDetails.count = temp.length;\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            temp = dm.executeLocal(query);\n            var newResults = this.pageRoot(pageingDetails.result, temp);\n            pageingDetails.result = newResults;\n        }\n        else {\n            var dm_1 = new DataManager(pageingDetails.result);\n            var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n            var parents_1 = dm_1.executeLocal(new Query().where(expanded));\n            var visualData = void 0;\n            if (isFilterChildHierarchy(this.parent)) {\n                visualData = parents_1;\n            }\n            else {\n                visualData = parents_1.filter(function (e) {\n                    return getExpandStatus(_this.parent, e, parents_1);\n                });\n            }\n            pageingDetails.count = visualData.length;\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (visualData.length < (current * size)) {\n                current = (Math.floor(visualData.length / size)) + ((visualData.length % size) ? 1 : 0);\n                current = current ? current : 1;\n                this.parent.grid.setProperties({ pageSettings: { currentPage: current } }, true);\n            }\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm_1.dataSource.json = visualData;\n            pageingDetails.result = dm_1.executeLocal(query);\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    return Page;\n}());\nexport { Page };\n","import { Grid, Toolbar as tool } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Toolbar Module for TreeGrid\n * @hidden\n */\nvar Toolbar = /** @class */ (function () {\n    function Toolbar(parent) {\n        Grid.Inject(tool);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Toolbar.prototype.getModuleName = function () {\n        return 'toolbar';\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.addEventListener = function () {\n        this.parent.on(events.rowSelected, this.refreshToolbar, this);\n        this.parent.on(events.toolbarClick, this.toolbarClickHandler, this);\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowSelected, this.refreshToolbar);\n        this.parent.off(events.toolbarClick, this.toolbarClickHandler);\n    };\n    Toolbar.prototype.refreshToolbar = function (args) {\n        var tObj = this.parent;\n        var isParent;\n        if (args.row.rowIndex === 0 || tObj.getSelectedRecords().length > 1) {\n            this.enableItems([tObj.element.id + '_gridcontrol_indent', tObj.element.id + '_gridcontrol_outdent'], false);\n        }\n        else {\n            if (!isNullOrUndefined(tObj.getCurrentViewRecords()[args.row.rowIndex])) {\n                if (!isNullOrUndefined(tObj.getCurrentViewRecords()[args.row.rowIndex]) &&\n                    (tObj.getCurrentViewRecords()[args.row.rowIndex].level >\n                        tObj.getCurrentViewRecords()[args.row.rowIndex - 1].level)) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], false);\n                }\n                else {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level ===\n                    tObj.getCurrentViewRecords()[args.row.rowIndex - 1].level) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level === 0) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_outdent'], false);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level !== 0) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n                }\n            }\n        }\n        if (args.row.rowIndex === 0 && !isNullOrUndefined(args.data.parentItem)) {\n            this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n        }\n    };\n    Toolbar.prototype.toolbarClickHandler = function (args) {\n        var tObj = this.parent;\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.grid.editSettings.mode === 'Batch' &&\n            args.item.id === this.parent.grid.element.id + '_update') {\n            args.cancel = true;\n            this.parent.grid.editModule.saveCell();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_expandall') {\n            this.parent.expandAll();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_collapseall') {\n            this.parent.collapseAll();\n        }\n        if (args.item.id === tObj.grid.element.id + '_indent' && tObj.getSelectedRecords().length) {\n            var record = tObj.getCurrentViewRecords()[tObj.getSelectedRowIndexes()[0] - 1];\n            var dropIndex = void 0;\n            if (record.level > tObj.getSelectedRecords()[0].level) {\n                for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                    if (tObj.getCurrentViewRecords()[i].taskData === record.parentItem.taskData) {\n                        dropIndex = i;\n                    }\n                }\n            }\n            else {\n                dropIndex = tObj.getSelectedRowIndexes()[0] - 1;\n            }\n            tObj.reorderRows([tObj.getSelectedRowIndexes()[0]], dropIndex, 'child');\n        }\n        if (args.item.id === tObj.grid.element.id + '_outdent' && tObj.getSelectedRecords().length) {\n            var index = tObj.getSelectedRowIndexes()[0];\n            var dropIndex = void 0;\n            var parentItem = tObj.getSelectedRecords()[0].parentItem;\n            for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                if (tObj.getCurrentViewRecords()[i].taskData === parentItem.taskData) {\n                    dropIndex = i;\n                }\n            }\n            tObj.reorderRows([index], dropIndex, 'below');\n        }\n    };\n    /**\n     * Gets the toolbar of the TreeGrid.\n     * @return {Element}\n     * @hidden\n     */\n    Toolbar.prototype.getToolbar = function () {\n        return this.parent.grid.toolbarModule.getToolbar();\n    };\n    /**\n     * Enables or disables ToolBar items.\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @return {void}\n     * @hidden\n     */\n    Toolbar.prototype.enableItems = function (items, isEnable) {\n        this.parent.grid.toolbarModule.enableItems(items, isEnable);\n    };\n    /**\n     * Destroys the ToolBar.\n     * @method destroy\n     * @return {void}\n     */\n    Toolbar.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Toolbar;\n}());\nexport { Toolbar };\n","import { Query, DataManager } from '@syncfusion/ej2-data';\nimport { getObject, calculateAggregate, Aggregate as GridAggregate, Grid, appendChildren } from '@syncfusion/ej2-grids';\nimport { findParentRecords } from '../utils';\nimport { isNullOrUndefined, setValue, createElement, extend } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Aggregate module\n * @hidden\n */\nvar Aggregate = /** @class */ (function () {\n    /**\n     * Constructor for Aggregate module\n     */\n    function Aggregate(parent) {\n        Grid.Inject(GridAggregate);\n        this.parent = parent;\n        this.flatChildRecords = [];\n        this.summaryQuery = [];\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Aggregate.prototype.getModuleName = function () {\n        return 'summary';\n    };\n    Aggregate.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n    };\n    /**\n     * Function to calculate summary values\n     *  @hidden\n     */\n    Aggregate.prototype.calculateSummaryValue = function (summaryQuery, filteredData, isSort) {\n        this.summaryQuery = summaryQuery;\n        var parentRecord;\n        var parentDataLength = Object.keys(filteredData).length;\n        var parentData;\n        parentData = [];\n        for (var p = 0, len = parentDataLength; p < len; p++) {\n            var summaryRow = getObject('isSummaryRow', filteredData[p]);\n            if (!summaryRow) {\n                parentData.push(filteredData[p]);\n            }\n        }\n        var parentRecords = findParentRecords(parentData);\n        var flatRecords;\n        flatRecords = parentData.slice();\n        var columnLength = Object.keys(this.parent.columns).length;\n        var summaryLength = Object.keys(this.parent.aggregates).length;\n        var dataLength = Object.keys(parentRecords).length;\n        var childRecordsLength;\n        for (var i = 0, len = dataLength; i < len; i++) {\n            parentRecord = parentRecords[i];\n            childRecordsLength = this.getChildRecordsLength(parentRecord, flatRecords);\n            if (childRecordsLength) {\n                var _loop_1 = function (summaryRowIndex, len_1) {\n                    var item = void 0;\n                    item = {};\n                    for (var columnIndex = 0, len_2 = columnLength; columnIndex < len_2; columnIndex++) {\n                        var field = isNullOrUndefined(getObject('field', this_1.parent.columns[columnIndex])) ?\n                            this_1.parent.columns[columnIndex] : getObject('field', this_1.parent.columns[columnIndex]);\n                        item[field] = null;\n                    }\n                    if (this_1.parent.aggregates[summaryRowIndex - 1].showChildSummary) {\n                        item = this_1.createSummaryItem(item, this_1.parent.aggregates[summaryRowIndex - 1]);\n                        var idx_1;\n                        flatRecords.map(function (e, i) { if (e.uniqueID === parentRecord.uniqueID) {\n                            idx_1 = i;\n                            return;\n                        } });\n                        var currentIndex = idx_1 + childRecordsLength + summaryRowIndex;\n                        var summaryParent = extend({}, parentRecord);\n                        delete summaryParent.childRecords;\n                        delete summaryParent[this_1.parent.childMapping];\n                        setValue('parentItem', summaryParent, item);\n                        var level = getObject('level', summaryParent);\n                        setValue('level', level + 1, item);\n                        var index = getObject('index', summaryParent);\n                        setValue('isSummaryRow', true, item);\n                        setValue('parentUniqueID', summaryParent.uniqueID, item);\n                        if (isSort) {\n                            var childRecords = getObject('childRecords', parentRecord);\n                            if (childRecords.length) {\n                                childRecords.push(item);\n                            }\n                        }\n                        flatRecords.splice(currentIndex, 0, item);\n                    }\n                    else {\n                        return \"continue\";\n                    }\n                };\n                var this_1 = this;\n                for (var summaryRowIndex = 1, len_1 = summaryLength; summaryRowIndex <= len_1; summaryRowIndex++) {\n                    _loop_1(summaryRowIndex, len_1);\n                }\n                this.flatChildRecords = [];\n            }\n        }\n        return flatRecords;\n    };\n    Aggregate.prototype.getChildRecordsLength = function (parentData, flatData) {\n        var recordLength = Object.keys(flatData).length;\n        var record;\n        for (var i = 0, len = recordLength; i < len; i++) {\n            record = flatData[i];\n            var parent_1 = isNullOrUndefined(record.parentItem) ? null :\n                flatData.filter(function (e) { return e.uniqueID === record.parentItem.uniqueID; })[0];\n            if (parentData === parent_1) {\n                this.flatChildRecords.push(record);\n                var hasChild = getObject('hasChildRecords', record);\n                if (hasChild) {\n                    this.getChildRecordsLength(record, flatData);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return this.flatChildRecords.length;\n    };\n    Aggregate.prototype.createSummaryItem = function (itemData, summary) {\n        var summaryColumnLength = Object.keys(summary.columns).length;\n        for (var i = 0, len = summaryColumnLength; i < len; i++) {\n            var displayColumn = isNullOrUndefined(summary.columns[i].columnName) ? summary.columns[i].field :\n                summary.columns[i].columnName;\n            var keys = Object.keys(itemData);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if (key === displayColumn) {\n                    itemData[key] = this.getSummaryValues(summary.columns[i], this.flatChildRecords);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return itemData;\n    };\n    Aggregate.prototype.getSummaryValues = function (summaryColumn, summaryData) {\n        var qry = new Query();\n        var single;\n        single = {};\n        var helper = {};\n        var type = !isNullOrUndefined(summaryColumn.field) ?\n            this.parent.getColumnByField(summaryColumn.field).type : undefined;\n        summaryColumn.setPropertiesSilent({ format: this.getFormatFromType(summaryColumn.format, type) });\n        summaryColumn.setFormatter(this.parent.grid.locale);\n        var formatFn = summaryColumn.getFormatter() || (function () { return function (a) { return a; }; })();\n        summaryColumn.setTemplate(helper);\n        var tempObj = summaryColumn.getTemplate(2);\n        qry.queries = this.summaryQuery;\n        qry.requiresCount();\n        var sumData = new DataManager(summaryData).executeLocal(qry);\n        var types = summaryColumn.type;\n        var summaryKey;\n        types = [summaryColumn.type];\n        for (var i = 0; i < types.length; i++) {\n            summaryKey = types[i];\n            var key = summaryColumn.field + ' - ' + types[i].toLowerCase();\n            var val = types[i] !== 'Custom' ? getObject('aggregates', sumData) :\n                calculateAggregate(types[i], sumData, summaryColumn, this.parent);\n            var disp = summaryColumn.columnName;\n            var value_1 = types[i] !== 'Custom' ? val[key] : val;\n            single[disp] = single[disp] || {};\n            single[disp][key] = value_1;\n            single[disp][types[i]] = !isNullOrUndefined(val) ? formatFn(value_1) : ' ';\n        }\n        helper.format = summaryColumn.getFormatter();\n        var cellElement = createElement('td', {\n            className: 'e-summary'\n        });\n        appendChildren(cellElement, tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property));\n        var value = single[summaryColumn.columnName][summaryKey];\n        var summaryValue;\n        if (cellElement.innerHTML.indexOf(value) === -1) {\n            summaryValue = cellElement.innerHTML + value;\n            return summaryValue;\n        }\n        else {\n            return cellElement.innerHTML;\n        }\n    };\n    Aggregate.prototype.getFormatFromType = function (summaryformat, type) {\n        if (isNullOrUndefined(type) || typeof summaryformat !== 'string') {\n            return summaryformat;\n        }\n        var obj;\n        switch (type) {\n            case 'number':\n                obj = { format: summaryformat };\n                break;\n            case 'datetime':\n                obj = { type: 'dateTime', skeleton: summaryformat };\n                break;\n            case 'date':\n                obj = { type: type, skeleton: summaryformat };\n                break;\n        }\n        return obj;\n    };\n    /**\n     * To destroy the Aggregate module\n     * @return {void}\n     * @hidden\n     */\n    Aggregate.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Aggregate;\n}());\nexport { Aggregate };\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { Sort as GridSort, Grid, getActualProperties } from '@syncfusion/ej2-grids';\nimport { getParentData } from '../utils';\n/**\n * Internal dataoperations for TreeGrid\n * @hidden\n */\nvar Sort = /** @class */ (function () {\n    function Sort(grid) {\n        Grid.Inject(GridSort);\n        this.parent = grid;\n        this.taskIds = [];\n        this.flatSortedData = [];\n        this.storedIndex = -1;\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Sort.prototype.getModuleName = function () {\n        return 'sort';\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.addEventListener = function () {\n        this.parent.on('updateModel', this.updateModel, this);\n        this.parent.on('createSort', this.createdSortedRecords, this);\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateModel', this.updateModel);\n        this.parent.off('createSort', this.createdSortedRecords);\n    };\n    Sort.prototype.createdSortedRecords = function (sortParams) {\n        var data = sortParams.modifiedData;\n        var srtQry = sortParams.srtQry;\n        this.iterateSort(data, srtQry);\n        this.storedIndex = -1;\n        sortParams.modifiedData = this.flatSortedData;\n        this.flatSortedData = [];\n    };\n    Sort.prototype.iterateSort = function (data, srtQry) {\n        for (var d = 0; d < data.length; d++) {\n            if (this.parent.grid.filterSettings.columns.length > 0 || this.parent.grid.searchSettings.key !== '') {\n                if (!isNullOrUndefined(getParentData(this.parent, data[d].uniqueID, true))) {\n                    this.storedIndex++;\n                    this.flatSortedData[this.storedIndex] = data[d];\n                }\n            }\n            else {\n                this.storedIndex++;\n                this.flatSortedData[this.storedIndex] = data[d];\n            }\n            if (data[d].hasChildRecords) {\n                var childSort = (new DataManager(data[d].childRecords).executeLocal(srtQry));\n                this.iterateSort(childSort, srtQry);\n            }\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    Sort.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n        this.parent.grid.sortColumn(columnName, direction, isMultiSort);\n    };\n    Sort.prototype.removeSortColumn = function (field) {\n        this.parent.grid.removeSortColumn(field);\n    };\n    /**\n     * The function used to update sortSettings of TreeGrid.\n     * @return {void}\n     * @hidden\n     */\n    Sort.prototype.updateModel = function () {\n        this.parent.setProperties({ sortSettings: getActualProperties(this.parent.grid.sortSettings) }, true);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    Sort.prototype.clearSorting = function () {\n        this.parent.grid.clearSorting();\n        this.updateModel();\n    };\n    /**\n     * Destroys the Sorting of TreeGrid.\n     * @method destroy\n     * @return {void}\n     */\n    Sort.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Sort;\n}());\nexport { Sort };\n","import { Grid, ColumnMenu as GridColumnMenu } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnMenu module\n * @hidden\n */\nvar ColumnMenu = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function ColumnMenu(parent) {\n        Grid.Inject(GridColumnMenu);\n        this.parent = parent;\n    }\n    ColumnMenu.prototype.getColumnMenu = function () {\n        return this.parent.grid.columnMenuModule.getColumnMenu();\n    };\n    ColumnMenu.prototype.destroy = function () {\n        //this.parent.grid.columnMenuModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ColumnMenu.prototype.getModuleName = function () {\n        return 'columnMenu';\n    };\n    return ColumnMenu;\n}());\nexport { ColumnMenu };\n","import { Grid, ContextMenu as cmenu } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * ContextMenu Module for TreeGrid\n * @hidden\n */\nvar ContextMenu = /** @class */ (function () {\n    function ContextMenu(parent) {\n        Grid.Inject(cmenu);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.addEventListener = function () {\n        this.parent.on('contextMenuOpen', this.contextMenuOpen, this);\n        this.parent.on('contextMenuClick', this.contextMenuClick, this);\n    };\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('contextMenuOpen', this.contextMenuOpen);\n        this.parent.off('contextMenuClick', this.contextMenuClick);\n    };\n    ContextMenu.prototype.contextMenuOpen = function (args) {\n        var addRow = args.element.querySelector('#' + this.parent.element.id + '_gridcontrol_cmenu_AddRow');\n        var editRecord = args.element.querySelector('#' + this.parent.element.id + '_gridcontrol_cmenu_Edit');\n        if (addRow) {\n            if (this.parent.grid.editSettings.allowAdding === false) {\n                addRow.style.display = 'none';\n            }\n            else {\n                addRow.style.display = 'block';\n            }\n        }\n        if ((this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch')\n            && !(isNullOrUndefined(editRecord)) && !(editRecord.classList.contains('e-menu-hide'))) {\n            editRecord.style.display = 'none';\n        }\n    };\n    ContextMenu.prototype.contextMenuClick = function (args) {\n        if (args.item.id === 'Above' || args.item.id === 'Below') {\n            this.parent.notify('savePreviousRowPosition', args);\n            this.parent.setProperties({ editSettings: { newRowPosition: args.item.id } }, true);\n            this.parent.addRecord();\n        }\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    ContextMenu.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Gets the context menu element from the TreeGrid.\n     * @return {Element}\n     */\n    ContextMenu.prototype.getContextMenu = function () {\n        return this.parent.grid.contextMenuModule.getContextMenu();\n    };\n    return ContextMenu;\n}());\nexport { ContextMenu };\n","import { isNullOrUndefined, extend, setValue, getValue } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, extendArray } from '../utils';\nimport { getUid } from '@syncfusion/ej2-grids';\nimport { updateParentRow, editAction } from './crud-actions';\n/**\n * `BatchEdit` module is used to handle batch editing actions.\n * @hidden\n */\nvar BatchEdit = /** @class */ (function () {\n    function BatchEdit(parent) {\n        this.batchChildCount = 0;\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.batchAddedRecords = [];\n        this.batchDeletedRecords = [];\n        this.batchAddRowRecord = [];\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.batchRecords = [];\n        this.currentViewRecords = [];\n        this.isAdd = false;\n        this.addEventListener();\n    }\n    BatchEdit.prototype.addEventListener = function () {\n        this.parent.on(events.cellSaved, this.cellSaved, this);\n        this.parent.on(events.batchAdd, this.batchAdd, this);\n        this.parent.on(events.beforeBatchAdd, this.beforeBatchAdd, this);\n        this.parent.on(events.batchSave, this.batchSave, this);\n        this.parent.on(events.beforeBatchDelete, this.beforeBatchDelete, this);\n        this.parent.on(events.beforeBatchSave, this.beforeBatchSave, this);\n        this.parent.on('batchPageAction', this.batchPageAction, this);\n        this.parent.on('batchCancelAction', this.batchCancelAction, this);\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.cellSaved, this.cellSaved);\n        this.parent.off(events.batchAdd, this.batchAdd);\n        this.parent.off(events.batchSave, this.batchSave);\n        this.parent.off(events.beforeBatchAdd, this.beforeBatchAdd);\n        this.parent.off(events.beforeBatchDelete, this.beforeBatchDelete);\n        this.parent.off(events.beforeBatchSave, this.beforeBatchSave);\n        this.parent.off('batchPageAction', this.batchPageAction);\n        this.parent.off('batchCancelAction', this.batchCancelAction);\n    };\n    /**\n     * To destroy the editModule\n     * @return {void}\n     * @hidden\n     */\n    BatchEdit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getBatchRecords = function () {\n        return this.batchRecords;\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getAddRowIndex = function () {\n        return this.addRowIndex;\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getSelectedIndex = function () {\n        return this.selectedIndex;\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getBatchChildCount = function () {\n        return this.batchChildCount;\n    };\n    BatchEdit.prototype.batchPageAction = function () {\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var index;\n        if (!isNullOrUndefined(this.batchAddedRecords) && this.batchAddedRecords.length) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[primaryKey]; }).indexOf(this.batchAddedRecords[i][primaryKey]);\n                data.splice(index, 1);\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.batchDeletedRecords = this.currentViewRecords = [];\n    };\n    BatchEdit.prototype.cellSaved = function (args) {\n        if (args.cell.cellIndex === this.parent.treeColumnIndex) {\n            this.parent.renderModule.cellRender({\n                data: args.rowData,\n                cell: args.cell,\n                column: this.parent.grid.getColumnByIndex(args.cell.cellIndex)\n            });\n        }\n        if (this.isAdd && this.parent.editSettings.mode === 'Batch' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var added = void 0;\n            var level = 'level';\n            var expanded = 'expanded';\n            var primaryKey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var currentDataIndex = void 0;\n            var parentRecord = void 0;\n            var indexvalue = void 0;\n            var index = 'index';\n            var parentItem = 'parentItem';\n            var uniqueID = 'uniqueID';\n            parentRecord = this.selectedIndex > -1 ? this.batchRecords[this.addRowIndex][parentItem] : null;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentIdMapping = void 0;\n            if (this.newBatchRowAdded) {\n                if (this.batchRecords.length) {\n                    idMapping = this.batchRecords[this.addRowIndex][this.parent.idMapping];\n                    parentIdMapping = this.batchRecords[this.addRowIndex][this.parent.parentIdMapping];\n                    if (this.batchRecords[this.addRowIndex][parentItem]) {\n                        parentUniqueID = this.batchRecords[this.addRowIndex][parentItem][uniqueID];\n                    }\n                }\n                this.batchAddedRecords = extendArray(this.batchAddedRecords);\n                this.batchAddRowRecord = extendArray(this.batchAddRowRecord);\n                this.batchAddRowRecord.push(this.batchRecords[this.addRowIndex]);\n                added = this.parent.grid.getRowsObject()[0].changes;\n                added.uniqueID = getUid(this.parent.element.id + '_data_');\n                setValue('uniqueIDCollection.' + added.uniqueID, added, this.parent);\n                if (!added.hasOwnProperty('level')) {\n                    this.batchIndex = this.selectedIndex === -1 ? 0 : this.batchIndex;\n                    if (this.parent.editSettings.newRowPosition === 'Child') {\n                        added.primaryParent = parentRecord;\n                        if (this.selectedIndex > -1) {\n                            added.parentItem = extend({}, this.batchRecords[this.addRowIndex]);\n                            added.parentUniqueID = added.parentItem.uniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                            added.level = added.parentItem.level + 1;\n                            added.index = this.batchIndex;\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                            if (this.isSelfReference) {\n                                added[this.parent.parentIdMapping] = idMapping;\n                            }\n                            updateParentRow(primaryKey_1, added.parentItem, 'add', this.parent, this.isSelfReference, added);\n                        }\n                    }\n                    else if (this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below') {\n                        added.level = this.batchRecords[this.addRowIndex][level];\n                        if (added.level && this.selectedIndex > -1) {\n                            added.parentItem = parentRecord;\n                            added.parentUniqueID = parentUniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                        }\n                        added.index = this.parent.editSettings.newRowPosition === 'Below' ? this.batchIndex : this.batchIndex - 1;\n                        if (this.parent.editSettings.newRowPosition === 'Below' && this.selectedIndex > -1) {\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                        }\n                        if (this.parent.editSettings.newRowPosition === 'Above' && this.selectedIndex > -1) {\n                            var record = this.batchRecords[this.addRowIndex];\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                        }\n                        if (this.isSelfReference) {\n                            added[this.parent.parentIdMapping] = parentIdMapping;\n                        }\n                    }\n                    added.index = added.index === -1 ? 0 : added.index;\n                    added.hasChildRecords = false;\n                    added.childRecords = [];\n                    this.batchRecords.splice(added.index, 0, added);\n                    this.currentViewRecords.splice(added.index, 0, added);\n                    if (currentDataIndex) {\n                        indexvalue = currentDataIndex;\n                    }\n                    else {\n                        indexvalue = added.index;\n                    }\n                    if (this.parent.editSettings.newRowPosition !== 'Above') {\n                        indexvalue = added.index === 0 ? indexvalue : indexvalue + 1;\n                    }\n                    data.splice(indexvalue, 0, added);\n                    this.batchAddedRecords.push(added);\n                }\n                this.parent.grid.getRowsObject()[0].data = added;\n                this.newBatchRowAdded = false;\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchAdd = function (e) {\n        this.selectedIndex = this.parent.grid.selectedRowIndex;\n        this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n        this.addRowRecord = this.parent.getSelectedRecords()[0];\n    };\n    BatchEdit.prototype.batchAdd = function (e) {\n        if (this.parent.editSettings.newRowPosition !== 'Bottom') {\n            this.isAdd = true;\n            this.newBatchRowAdded = true;\n            var actualIndex = 0;\n            if (!this.batchRecords.length) {\n                this.batchAddedRecords = [];\n                this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n                this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top') {\n                var records = this.parent.grid.getCurrentViewRecords();\n                if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                    records = this.batchRecords;\n                }\n                this.updateChildCount(records);\n                this.parent.notify(events.beginAdd, {});\n                this.batchChildCount = 0;\n            }\n            this.updateRowIndex();\n            // update focus module, need to refix this once grid source modified.\n            var focusModule = getValue('focusModule', this.parent.grid);\n            var table = this.parent.getContentTable();\n            if (this.parent.getBatchChanges()[this.deletedRecords].length && this.parent.editSettings.newRowPosition === 'Above') {\n                actualIndex = e.row.rowIndex;\n                focusModule.getContent().matrix.matrix = this.matrix;\n            }\n            else {\n                actualIndex = table.getElementsByClassName('e-batchrow')[0].rowIndex;\n                if (this.parent.frozenRows || this.parent.frozenColumns) {\n                    actualIndex = this.batchIndex;\n                }\n            }\n            focusModule.getContent().matrix.current = [actualIndex, focusModule.getContent().matrix.current[1]];\n        }\n    };\n    BatchEdit.prototype.beforeBatchDelete = function (e) {\n        if (!this.batchRecords.length) {\n            this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        }\n        var focusModule = getValue('focusModule', this.parent.grid);\n        this.matrix = focusModule.getContent().matrix.matrix;\n        this.parent = this.parent;\n        var row = [];\n        var records;\n        var data;\n        var primarykey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        data = this.parent.grid.getSelectedRecords()[this.parent.grid.getSelectedRecords().length - 1];\n        var childs = findChildrenRecords(data);\n        if (childs.length) {\n            for (var i = 0; i < childs.length; i++) {\n                var index = this.parent.grid.getRowIndexByPrimaryKey(childs[i][primarykey]);\n                row.push(this.parent.grid.getRows()[index]);\n            }\n        }\n        if (!isNullOrUndefined(data.parentItem)) {\n            var parentItem = getParentData(this.parent, data.parentItem.uniqueID);\n            if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                var childIndex = parentItem.childRecords.indexOf(data);\n                parentItem.childRecords.splice(childIndex, 1);\n            }\n            this.batchDeletedRecords = extendArray(this.batchDeletedRecords);\n            this.batchDeletedRecords.push(data);\n        }\n        childs.push(data);\n        records = childs;\n        for (var i = 0; i < records.length; i++) {\n            var indexvalue = this.batchRecords.map(function (e) { return e[primarykey]; }).indexOf(records[i][primarykey]);\n            if (indexvalue !== -1) {\n                this.batchRecords.splice(indexvalue, 1);\n            }\n        }\n        for (var i = 0; i < row.length; i++) {\n            if (!isNullOrUndefined(row[i])) {\n                this.parent.grid.selectionModule.selectedRecords.push(row[i]);\n            }\n        }\n    };\n    BatchEdit.prototype.updateRowIndex = function () {\n        var rows = this.parent.grid.getDataRows();\n        for (var i = 0; i < rows.length; i++) {\n            rows[i].setAttribute('aria-rowindex', i.toString());\n        }\n    };\n    BatchEdit.prototype.updateChildCount = function (records) {\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var addedRecords = 'addedRecords';\n        var deletedRecords = 'deletedRecords';\n        var parentItem = this.parent.editSettings.newRowPosition === 'Child' ? 'primaryParent' : 'parentItem';\n        for (var i = 1; i < this.parent.getBatchChanges()[addedRecords].length; i++) {\n            if (!isNullOrUndefined(this.parent.getBatchChanges()[addedRecords][i][parentItem])) {\n                if (this.parent.getBatchChanges()[addedRecords][i][parentItem][primaryKey] === records[this.addRowIndex][primaryKey]) {\n                    this.batchChildCount = this.batchChildCount + 1;\n                }\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchSave = function (e) {\n        var changeRecords = 'changedRecords';\n        var deleterecords = 'deletedRecords';\n        var changedRecords = e.batchChanges[changeRecords];\n        if (e.batchChanges[changeRecords].length) {\n            var columnName = void 0;\n            for (var i = 0; i < changedRecords.length; i++) {\n                editAction({ value: changedRecords[i], action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName);\n            }\n        }\n        if (e.batchChanges[deleterecords].length) {\n            var deletedRecords = e.batchChanges[deleterecords];\n            var record = deletedRecords;\n            for (var i = 0; i < record.length; i++) {\n                this.deleteUniqueID(record[i].uniqueID);\n                var childs = findChildrenRecords(record[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                e.batchChanges[deleterecords] = e.batchChanges[deleterecords].concat(childs);\n            }\n        }\n        this.isAdd = false;\n    };\n    BatchEdit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    BatchEdit.prototype.batchCancelAction = function () {\n        var targetElement = 'targetElement';\n        var index;\n        var parentItem = 'parentItem';\n        var indexvalue = 'index';\n        var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n        var childRecords = 'childRecords';\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        if (!isNullOrUndefined(this.parent[targetElement])) {\n            var row = this.parent[targetElement].closest('tr');\n            this.parent.collapseRow(row);\n            this.parent[targetElement] = null;\n        }\n        if (!isNullOrUndefined(this.batchAddedRecords)) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[primaryKey]; }).indexOf(this.batchAddedRecords[i][primaryKey]);\n                data.splice(index, 1);\n                if (this.parent.editSettings.newRowPosition === 'Child') {\n                    index = currentViewRecords.map(function (e) { return e[primaryKey]; })\n                        .indexOf(this.batchAddedRecords[i][parentItem][primaryKey]);\n                    var children = currentViewRecords[index][childRecords];\n                    for (var j = 0; j < children.length; j++) {\n                        if (children[j][primaryKey] === this.batchAddedRecords[i][primaryKey]) {\n                            currentViewRecords[index][childRecords].splice(j, 1);\n                        }\n                    }\n                }\n            }\n        }\n        if (!isNullOrUndefined(this.batchDeletedRecords)) {\n            for (var i = 0; i < this.batchDeletedRecords.length; i++) {\n                if (!isNullOrUndefined(this.batchDeletedRecords[i][parentItem])) {\n                    index = currentViewRecords.map(function (e) { return e[primaryKey]; })\n                        .indexOf(this.batchDeletedRecords[i][parentItem][primaryKey]);\n                    var positionIndex = this.batchDeletedRecords[i][indexvalue] === 0 ? this.batchDeletedRecords[i][indexvalue] :\n                        this.batchDeletedRecords[i][indexvalue] - 1;\n                    currentViewRecords[index][childRecords].splice(positionIndex, 0, this.batchDeletedRecords[i]);\n                }\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.currentViewRecords = [];\n        this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchIndex = 0;\n        this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchDeletedRecords = [];\n        this.parent.refresh();\n    };\n    BatchEdit.prototype.batchSave = function (args) {\n        if (this.parent.editSettings.mode === 'Batch') {\n            var i = void 0;\n            var batchChanges = this.parent.getBatchChanges();\n            var deletedRecords = 'deletedRecords';\n            var addedRecords = 'addedRecords';\n            var index = 'index';\n            var uniqueID = 'uniqueID';\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n            var primarykey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var level = 'level';\n            var addRecords = batchChanges[addedRecords];\n            var parentItem = 'parentItem';\n            var selectedIndex = void 0;\n            var addRowIndex = void 0;\n            var columnName = void 0;\n            var addRowRecord = void 0;\n            var childRecords = 'childRecords';\n            if (addRecords.length > 1 && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                addRecords.reverse();\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Bottom') {\n                data.splice(data.length - addRecords.length, addRecords.length);\n                if (!this.parent.allowPaging) {\n                    if (currentViewRecords.length > addRecords.length) {\n                        currentViewRecords.splice(currentViewRecords.length - addRecords.length, addRecords.length);\n                    }\n                }\n                else {\n                    var totalRecords = extendArray(data);\n                    var startIndex = totalRecords.map(function (e) { return e[primarykey_1]; })\n                        .indexOf(currentViewRecords[0][primarykey_1]);\n                    var endIndex = startIndex + this.parent.grid.pageSettings.pageSize;\n                    currentViewRecords = totalRecords.splice(startIndex, endIndex);\n                }\n            }\n            for (i = 0; i < addRecords.length; i++) {\n                var taskData = extend({}, addRecords[i]);\n                delete taskData.parentItem;\n                delete taskData.uniqueID;\n                delete taskData.index;\n                delete taskData.level;\n                delete taskData.hasChildRecords;\n                delete taskData.childRecords;\n                delete taskData.parentUniqueID;\n                if (!isNullOrUndefined(taskData.primaryParent)) {\n                    delete taskData.primaryParent;\n                }\n                addRecords[i].taskData = taskData;\n                addRowRecord = this.batchAddRowRecord[i];\n                if (isNullOrUndefined(addRowRecord)) {\n                    addRowRecord = this.batchAddRowRecord[i - 1];\n                }\n                if (this.isSelfReference) {\n                    if (!isNullOrUndefined(addRecords[i].parentItem)) {\n                        updateParentRow(primarykey_1, addRecords[i].parentItem, 'add', this.parent, this.isSelfReference, addRecords[i]);\n                    }\n                }\n                if (!isNullOrUndefined(addRowRecord)) {\n                    addRowIndex = addRowRecord.index;\n                }\n                if (this.parent.editSettings.newRowPosition !== 'Top' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    if (isNullOrUndefined(addRecords[i].parentItem) && this.selectedIndex === -1) {\n                        selectedIndex = -1;\n                        addRowRecord = null;\n                    }\n                }\n                editAction({ value: addRecords[i], action: 'add' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                selectedIndex = null;\n                if (this.parent.editSettings.newRowPosition === 'Child' && !isNullOrUndefined(addRecords[i][parentItem])) {\n                    var indexValue = currentViewRecords.map(function (e) { return e[primarykey_1]; })\n                        .indexOf(addRecords[i][parentItem][primarykey_1]);\n                    var children = currentViewRecords[indexValue][childRecords];\n                    for (var j = 0; j < children.length; j++) {\n                        if (children[j][primarykey_1] === addRecords[i][primarykey_1]) {\n                            currentViewRecords[indexValue][childRecords].splice(j, 1);\n                        }\n                    }\n                }\n            }\n            if (batchChanges[deletedRecords].length) {\n                for (i = 0; i < batchChanges[deletedRecords].length; i++) {\n                    editAction({ value: batchChanges[deletedRecords][i], action: 'delete' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                }\n            }\n            this.parent.parentData = [];\n            for (var i_1 = 0; i_1 < data.length; i_1++) {\n                data[i_1][index] = i_1;\n                setValue('uniqueIDCollection.' + data[i_1][uniqueID] + '.index', i_1, this.parent);\n                if (!data[i_1][level]) {\n                    this.parent.parentData.push(data[i_1]);\n                }\n            }\n        }\n        this.batchAddRowRecord = this.batchAddedRecords = this.batchRecords = this.batchDeletedRecords = this.currentViewRecords = [];\n    };\n    return BatchEdit;\n}());\nexport { BatchEdit };\n","import { Grid, Edit as GridEdit, getUid, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, extend, setValue, removeClass, addClass, getValue, isBlazor } from '@syncfusion/ej2-base';\nimport { updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { DataManager, RemoteSaveAdaptor } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, isRemoteData } from '../utils';\nimport { editAction, updateParentRow } from './crud-actions';\nimport { BatchEdit } from './batch-edit';\n/**\n * TreeGrid Edit Module\n * The `Edit` module is used to handle editing actions.\n */\nvar Edit = /** @class */ (function () {\n    /**\n     * Constructor for Edit module\n     */\n    function Edit(parent) {\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        Grid.Inject(GridEdit);\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.previousNewRowPosition = null;\n        this.internalProperties = {};\n        this.batchEditModule = new BatchEdit(this.parent);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Edit.prototype.getModuleName = function () {\n        return 'edit';\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.addEventListener = function () {\n        this.parent.on(events.crudAction, this.crudAction, this);\n        this.parent.on(events.beginEdit, this.beginEdit, this);\n        this.parent.on(events.beginAdd, this.beginAdd, this);\n        this.parent.on(events.recordDoubleClick, this.recordDoubleClick, this);\n        this.parent.on(events.cellSave, this.cellSave, this);\n        this.parent.on(events.batchCancel, this.batchCancel, this);\n        this.parent.grid.on(events.keyPressed, this.keyPressed, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n        this.parent.on(events.cellEdit, this.cellEdit, this);\n        this.parent.on('actionBegin', this.editActionEvents, this);\n        this.parent.on('actionComplete', this.editActionEvents, this);\n        this.parent.grid.on(events.doubleTap, this.recordDoubleClick, this);\n        this.parent.grid.on('dblclick', this.gridDblClick, this);\n        this.parent.on('savePreviousRowPosition', this.savePreviousRowPosition, this);\n        // this.parent.on(events.beforeDataBound, this.beforeDataBound, this);\n        this.parent.grid.on(events.beforeStartEdit, this.beforeStartEdit, this);\n        this.parent.grid.on(events.beforeBatchCancel, this.beforeBatchCancel, this);\n    };\n    Edit.prototype.gridDblClick = function (e) {\n        this.doubleClickTarget = e.target;\n    };\n    Edit.prototype.beforeStartEdit = function (args) {\n        this.parent.trigger(events.actionBegin, args);\n    };\n    Edit.prototype.beforeBatchCancel = function (args) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            this.parent.trigger(events.actionComplete, args);\n        }\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.crudAction, this.crudAction);\n        this.parent.off(events.beginEdit, this.beginEdit);\n        this.parent.off(events.beginAdd, this.beginAdd);\n        this.parent.off(events.recordDoubleClick, this.recordDoubleClick);\n        this.parent.off(events.batchCancel, this.batchCancel);\n        this.parent.grid.off(events.keyPressed, this.keyPressed);\n        this.parent.grid.off('content-ready', this.contentready);\n        this.parent.off(events.cellEdit, this.cellEdit);\n        this.parent.off('actionBegin', this.editActionEvents);\n        this.parent.off('actionComplete', this.editActionEvents);\n        this.parent.grid.off(events.doubleTap, this.recordDoubleClick);\n        this.parent.off('savePreviousRowPosition', this.savePreviousRowPosition);\n        this.parent.grid.off(events.beforeStartEdit, this.beforeStartEdit);\n        this.parent.grid.off(events.beforeBatchCancel, this.beforeBatchCancel);\n        this.parent.grid.off('dblclick', this.gridDblClick);\n        //this.parent.grid.off('click', this.gridSingleClick);\n    };\n    /**\n     * To destroy the editModule\n     * @return {void}\n     * @hidden\n     */\n    Edit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.applyFormValidation = function (cols) {\n        this.parent.grid.editModule.applyFormValidation(cols);\n    };\n    Edit.prototype.editActionEvents = function (args) {\n        var eventArgs = getObject('editAction', args);\n        var eventName = getObject('name', eventArgs);\n        var treeObj = this.parent;\n        var adaptor = treeObj.dataSource.adaptor;\n        if ((isRemoteData(treeObj) || adaptor instanceof RemoteSaveAdaptor) &&\n            (eventArgs.requestType === 'save' && eventArgs.action === 'add') &&\n            (treeObj.editSettings.newRowPosition === 'Child' || treeObj.editSettings.newRowPosition === 'Below'\n                || treeObj.editSettings.newRowPosition === 'Above')) {\n            if (eventName === 'actionBegin') {\n                var rowIndex = isNullOrUndefined(eventArgs.row) || !Object.keys(eventArgs.row).length ? this.selectedIndex :\n                    eventArgs.row.rowIndex - 1;\n                var keyData = (!isNullOrUndefined(rowIndex) && rowIndex !== -1) ?\n                    treeObj.getCurrentViewRecords()[rowIndex][treeObj.getPrimaryKeyFieldNames()[0]] : -1;\n                treeObj.grid.query.addParams('relationalKey', keyData);\n            }\n            else if (eventName === 'actionComplete') {\n                var paramsLength = treeObj.grid.query.params.length;\n                for (var i = 0; i < paramsLength; i++) {\n                    if (treeObj.grid.query.params[i].key === 'relationalKey') {\n                        treeObj.grid.query.params.splice(i);\n                    }\n                }\n            }\n        }\n        if (this.parent.editSettings.mode === 'Batch' && eventArgs.requestType === 'paging') {\n            this.parent.notify('batchPageAction', {});\n        }\n    };\n    Edit.prototype.recordDoubleClick = function (args) {\n        var target = args.target;\n        if (isNullOrUndefined(target.closest('td.e-rowcell'))) {\n            return;\n        }\n        var column = this.parent.grid.getColumnByIndex(+target.closest('td.e-rowcell').getAttribute('aria-colindex'));\n        if (this.parent.editSettings.mode === 'Cell' && !this.isOnBatch && column && !column.isPrimaryKey &&\n            column.allowEditing && !(target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && this.parent.editSettings.allowEditOnDblClick) {\n            this.isOnBatch = true;\n            this.parent.grid.setProperties({ selectedRowIndex: args.rowIndex }, true);\n            this.updateGridEditMode('Batch');\n        }\n    };\n    Edit.prototype.updateGridEditMode = function (mode) {\n        this.parent.grid.setProperties({ editSettings: { mode: mode } }, true);\n        var updateMethod = getObject('updateEditObj', this.parent.grid.editModule);\n        updateMethod.apply(this.parent.grid.editModule);\n        this.parent.grid.isEdit = false;\n    };\n    Edit.prototype.keyPressed = function (args) {\n        if (this.isOnBatch || (this.parent.editSettings.mode === 'Cell' && isBlazor() && this.parent.isServerRendered)) {\n            this.keyPress = args.action;\n        }\n        if (args.action === 'f2') {\n            this.recordDoubleClick(args);\n        }\n    };\n    Edit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    Edit.prototype.cellEdit = function (args) {\n        var _this = this;\n        var promise = 'promise';\n        var prom = args[promise];\n        delete args[promise];\n        if (this.keyPress !== 'enter') {\n            this.parent.trigger(events.cellEdit, args, function (celleditArgs) {\n                if (!celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.enableToolbarItems('edit');\n                }\n                else if (celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.isOnBatch = false;\n                    _this.updateGridEditMode('Normal');\n                }\n                if (!isNullOrUndefined(prom)) {\n                    prom.resolve(celleditArgs);\n                }\n            });\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell') {\n            if (this.keyPress === 'tab' || this.keyPress === 'shiftTab') {\n                this.keyPress = null;\n            }\n            else if (this.keyPress === 'enter') {\n                args.cancel = true;\n                this.keyPress = null;\n            }\n        }\n        // if (this.isAdd && this.parent.editSettings.mode === 'Batch' && !args.cell.parentElement.classList.contains('e-insertedrow')) {\n        //   this.isAdd = false;\n        // }\n    };\n    Edit.prototype.enableToolbarItems = function (request) {\n        if (!isNullOrUndefined(this.parent.grid.toolbarModule)) {\n            var toolbarID = this.parent.element.id + '_gridcontrol_';\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'add', toolbarID + 'edit', toolbarID + 'delete'], request === 'save');\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'update', toolbarID + 'cancel'], request === 'edit');\n        }\n    };\n    Edit.prototype.batchCancel = function (e) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            var cellDetails = getValue('editModule.cellDetails', this.parent.grid.editModule);\n            var selectRowIndex = cellDetails.rowIndex;\n            this.parent.renderModule.cellRender({\n                data: cellDetails.rowData,\n                cell: this.parent.getRows()[selectRowIndex].cells[this.parent.treeColumnIndex],\n                column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n            });\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        if (this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify('batchCancelAction', {});\n        }\n    };\n    Edit.prototype.cellSave = function (args) {\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.element.querySelector('form')) {\n            args.cancel = true;\n            var editModule = 'editModule';\n            setValue('isEdit', false, this.parent.grid);\n            setValue('isEditCollapse', true, this.parent);\n            args.rowData[args.columnName] = args.value;\n            var row = void 0;\n            if (isNullOrUndefined(args.cell)) {\n                row = this.parent.grid.editModule[editModule].form.parentElement.parentNode;\n            }\n            else {\n                row = args.cell.parentNode;\n            }\n            var rowIndex_1;\n            var primaryKeys_1 = this.parent.getPrimaryKeyFieldNames();\n            if (isNullOrUndefined(row)) {\n                this.parent.grid.getCurrentViewRecords().filter(function (e, i) {\n                    if (e[primaryKeys_1[0]] === args.rowData[primaryKeys_1[0]]) {\n                        rowIndex_1 = i;\n                        return;\n                    }\n                });\n            }\n            else {\n                rowIndex_1 = this.parent.getRows().indexOf(row);\n            }\n            var arg = {};\n            extend(arg, args);\n            arg.cancel = false;\n            arg.type = 'save';\n            row = this.parent.grid.getRows()[row.rowIndex];\n            this.parent.trigger(events.actionBegin, arg);\n            if (!arg.cancel) {\n                this.blazorTemplates(args);\n                this.updateCell(args, rowIndex_1);\n                if (this.parent.grid.aggregateModule) {\n                    this.parent.grid.aggregateModule.refresh(args.rowData);\n                }\n                this.parent.grid.editModule.formObj.destroy();\n                if (this.keyPress !== 'tab' && this.keyPress !== 'shiftTab') {\n                    this.updateGridEditMode('Normal');\n                    this.isOnBatch = false;\n                }\n                this.enableToolbarItems('save');\n                removeClass([row], ['e-editedrow', 'e-batchrow']);\n                removeClass(row.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n                this.parent.grid.focusModule.restoreFocus();\n                editAction({ value: args.rowData, action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, args.columnName);\n                var saveArgs = {\n                    type: 'save', column: this.parent.getColumnByField(args.columnName), data: args.rowData,\n                    previousData: args.previousValue, row: row, target: args.cell\n                };\n                this.parent.trigger(events.actionComplete, saveArgs);\n            }\n            else {\n                this.parent.grid.isEdit = true;\n            }\n        }\n    };\n    Edit.prototype.blazorTemplates = function (args) {\n        if (isBlazor() && this.parent.isServerRendered) {\n            var cols = this.parent.grid.getColumns();\n            var colModel = 'columnModel';\n            var columnModel = this.parent.grid[colModel];\n            var str = 'isStringTemplate';\n            for (var i = 0; i < cols.length; i++) {\n                if (columnModel[i].template) {\n                    var templateID = this.parent.grid.element.id + cols[i].uid;\n                    columnModel[i].getColumnTemplate()(extend({ 'index': [i] }, args.rowData), this.parent.grid, 'template', templateID, this.parent.grid[str], null);\n                }\n                if (cols[i].editTemplate) {\n                    updateBlazorTemplate(this.parent.grid.element.id + cols[i].uid + 'editTemplate', 'EditTemplate', cols[i]);\n                }\n                if (cols[i].template) {\n                    updateBlazorTemplate(this.parent.grid.element.id + cols[i].uid, 'Template', cols[i], false);\n                }\n            }\n        }\n    };\n    Edit.prototype.updateCell = function (args, rowIndex) {\n        this.parent.grid.editModule.updateRow(rowIndex, args.rowData);\n        this.parent.grid.getRowsObject()[rowIndex].data = args.rowData;\n    };\n    Edit.prototype.crudAction = function (details, columnName) {\n        editAction(details, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName, this.addRowRecord);\n        this.parent.parentData = [];\n        var data = this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            data[i].index = i;\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            if (details.value[key] === data[i][key]) {\n                if (details.action === 'add') {\n                    data[i].level = this.internalProperties.level;\n                    data[i].taskData = this.internalProperties.taskData;\n                    data[i].uniqueID = this.internalProperties.uniqueID;\n                    if (!isNullOrUndefined(this.internalProperties.parentItem)) {\n                        data[i].parentItem = this.internalProperties.parentItem;\n                        data[i].parentUniqueID = this.internalProperties.parentUniqueID;\n                    }\n                    data[i].childRecords = this.internalProperties.childRecords;\n                }\n            }\n            setValue('uniqueIDCollection.' + data[i].uniqueID + '.index', i, this.parent);\n            if (!data[i].level) {\n                this.parent.parentData.push(data[i]);\n            }\n        }\n        if (details.action === 'add' && this.previousNewRowPosition != null) {\n            this.parent.setProperties({ editSettings: { newRowPosition: this.previousNewRowPosition } }, true);\n            this.previousNewRowPosition = null;\n        }\n    };\n    Edit.prototype.updateIndex = function (data, rows, records) {\n        for (var j = 0; j < this.parent.getDataRows().length; j++) {\n            var data1 = records[j];\n            var index = getValue('uniqueIDCollection.' + data1.uniqueID + '.index', this.parent);\n            data1.index = index;\n            if (!isNullOrUndefined(data1.parentItem)) {\n                var parentIndex = getValue('uniqueIDCollection.' + data1.parentItem.uniqueID + '.index', this.parent);\n                data1.parentItem.index = parentIndex;\n            }\n        }\n        var count = -1;\n        for (var k = 0; k < this.parent.getRows().length; k++) {\n            if (!rows[k].classList.contains('e-detailrow')) {\n                count++;\n            }\n            var data2 = records[count];\n            var index = data2.index;\n            var level = data2.level;\n            var row = rows[k];\n            if (!isNullOrUndefined(data2.parentItem)) {\n                index = getValue('uniqueIDCollection.' + data2.parentItem.uniqueID + '.index', this.parent);\n            }\n            var treecell = row.cells[this.parent.treeColumnIndex];\n            for (var l = 0; l < treecell.classList.length; l++) {\n                var value = treecell.classList[l];\n                var remove = /e-gridrowindex/i;\n                var removed = /e-griddetailrowindex/i;\n                var result = value.match(remove);\n                var results = value.match(removed);\n                if (result != null) {\n                    removeClass([treecell], value);\n                }\n                if (results != null) {\n                    removeClass([treecell], value);\n                }\n            }\n            if (!rows[k].classList.contains('e-detailrow')) {\n                addClass([treecell], 'e-gridrowindex' + index + 'level' + level);\n            }\n            else {\n                addClass([treecell], 'e-griddetailrowindex' + index + 'level' + level);\n            }\n        }\n    };\n    Edit.prototype.beginAdd = function (args) {\n        var position;\n        var index = this.addRowIndex;\n        var records = this.parent.grid.getCurrentViewRecords();\n        if (this.parent.editSettings.mode === 'Batch') {\n            index = this.batchEditModule.getAddRowIndex();\n            this.selectedIndex = this.batchEditModule.getSelectedIndex();\n            if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                records = this.batchEditModule.getBatchRecords();\n            }\n        }\n        var rows = this.parent.grid.getDataRows();\n        var movableRows;\n        if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n            movableRows = this.parent.getMovableDataRows();\n        }\n        if (this.parent.editSettings.mode !== 'Dialog') {\n            if (this.parent.editSettings.newRowPosition === 'Above') {\n                position = 'before';\n            }\n            else if ((this.parent.editSettings.newRowPosition === 'Below' ||\n                this.parent.editSettings.newRowPosition === 'Child')\n                && this.selectedIndex > -1) {\n                position = 'after';\n                if (records[index].expanded) {\n                    if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                        || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                        index += findChildrenRecords(records[index]).length;\n                        if (this.parent.editSettings.newRowPosition !== 'Child') {\n                            var batchChildCount = this.batchEditModule.getBatchChildCount();\n                            index = index + batchChildCount;\n                        }\n                    }\n                    else {\n                        index += findChildrenRecords(records[index]).length;\n                    }\n                }\n            }\n            if (this.selectedIndex > -1 && (index || (this.parent.editSettings.newRowPosition === 'Child'\n                || this.parent.editSettings.newRowPosition === 'Below'))) {\n                if (index >= rows.length) {\n                    index = rows.length - 2;\n                }\n                var focussedElement = document.activeElement;\n                rows[index + 1][position](rows[0]);\n                setValue('batchIndex', index + 1, this.batchEditModule);\n                if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                    movableRows[index + 1][position](movableRows[0]);\n                    setValue('batchIndex', index + 1, this.batchEditModule);\n                }\n                if (this.parent.editSettings.mode === 'Row' || this.parent.editSettings.mode === 'Cell') {\n                    var errors = this.parent.grid.getContentTable().querySelectorAll('.e-griderror');\n                    for (var i = 0; i < errors.length; i++) {\n                        errors[i].remove();\n                    }\n                    setValue('errorRules', [], this.parent.grid.editModule.formObj);\n                }\n                focussedElement.focus();\n            }\n        }\n    };\n    // private beforeDataBound(args: BeforeDataBoundArgs): void {\n    //   if (this.parent.grid.isEdit && this.parent.dataSource instanceof DataManager &&\n    //         this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor) {\n    //     let action: string = getValue('action', args);\n    //     let data: Object = getValue('data', args);\n    //     if (action === 'edit' && !isNullOrUndefined(this.editedData)) {\n    //       data = extend(this.editedData, data);\n    //       this.editedData = null;\n    //     }\n    //     if (!isNullOrUndefined(this.addedData)) {\n    //       let addedData: Object = args.result[args.result.length - 1];\n    //       addedData = extend(this.addedData, addedData);\n    //       this.addedData = null;\n    //       args.result.splice(this.addedIndex, 0, addedData);\n    //       args.result.splice(args.result.length, 1);\n    //     }\n    //   }\n    // }\n    Edit.prototype.beginEdit = function (args) {\n        if (args.requestType === 'refresh' && this.isOnBatch) {\n            args.cancel = true;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell' && args.requestType === 'beginEdit') {\n            args.cancel = true;\n            return;\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-frame'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (args.requestType === 'delete') {\n            var data = args.data;\n            for (var i = 0; i < data.length; i++) {\n                this.deleteUniqueID(data[i].uniqueID);\n                var childs = findChildrenRecords(data[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                args.data = data.concat(childs);\n            }\n        }\n        if (args.requestType === 'add') {\n            this.selectedIndex = this.parent.grid.selectedRowIndex;\n            this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n            this.addRowRecord = this.parent.getSelectedRecords()[0];\n        }\n        args = this.beginAddEdit(args);\n        // if (args.requestType === 'save' &&\n        //    ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor))) {\n        //      if (args.action === 'edit') {\n        //           this.editedData = args.data;\n        //      } else if (args.action === 'add') {\n        //           this.addedData = value;\n        //      }\n        // }\n    };\n    Edit.prototype.savePreviousRowPosition = function (args) {\n        if (this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n    };\n    Edit.prototype.beginAddEdit = function (args) {\n        var value = args.data;\n        if (args.action === 'add') {\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var position = null;\n            value.taskData = isNullOrUndefined(value.taskData) ? extend({}, args.data) : value.taskData;\n            // let currentData: ITreeData[] = this.batchRecords.length ? this.batchRecords :\n            //            <ITreeData[]>this.parent.grid.getCurrentViewRecords();\n            var currentData = this.parent.grid.getCurrentViewRecords();\n            var index = this.addRowIndex;\n            value.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + value.uniqueID, value, this.parent);\n            var level = void 0;\n            var dataIndex = void 0;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentItem = void 0;\n            var parentIdMapping = void 0;\n            if (currentData.length) {\n                level = currentData[this.addRowIndex].level;\n                dataIndex = currentData[this.addRowIndex].index;\n                idMapping = currentData[this.addRowIndex][this.parent.idMapping];\n                parentIdMapping = currentData[this.addRowIndex][this.parent.parentIdMapping];\n                if (currentData[this.addRowIndex].parentItem) {\n                    parentUniqueID = currentData[this.addRowIndex].parentItem.uniqueID;\n                }\n                parentItem = currentData[this.addRowIndex].parentItem;\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top' && currentData.length) {\n                if (this.parent.editSettings.newRowPosition === 'Above') {\n                    position = 'before';\n                    index = currentData[this.addRowIndex].index;\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Below') {\n                    position = 'after';\n                    var childRecordCount = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex = currentData[this.addRowIndex].index;\n                    index = (childRecordCount > 0) ? (currentDataIndex + childRecordCount) : (currentDataIndex);\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Child') {\n                    position = 'after';\n                    if (this.selectedIndex > -1) {\n                        value.parentItem = extend({}, currentData[this.addRowIndex]);\n                        value.parentUniqueID = value.parentItem.uniqueID;\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    var childRecordCount1 = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex1 = currentData[this.addRowIndex].index;\n                    index = (childRecordCount1 > 0) ? (currentDataIndex1 + childRecordCount1) : (currentDataIndex1);\n                    value.level = level + 1;\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = idMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below') {\n                    if (this.selectedIndex > -1 && level) {\n                        value.parentUniqueID = parentUniqueID;\n                        value.parentItem = extend({}, parentItem);\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    value.level = level;\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = parentIdMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (position != null && this.selectedIndex > -1) {\n                    args.index = position === 'before' ? index : index + 1;\n                }\n                if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    var dataSource = (this.parent.grid.dataSource instanceof DataManager ?\n                        this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n                    args.index = dataSource.length;\n                }\n            }\n            if (isNullOrUndefined(value.level)) {\n                value.level = level;\n            }\n            // this.addedIndex = args.index;\n            value.hasChildRecords = false;\n            value.childRecords = [];\n            value.index = 0;\n        }\n        if (args.action === 'add') {\n            this.internalProperties = { level: value.level, parentItem: value.parentItem, uniqueID: value.uniqueID,\n                taskData: value.taskData, parentUniqueID: isNullOrUndefined(value.parentItem) ? undefined : value.parentItem.uniqueID,\n                childRecords: value.childRecords };\n        }\n        if (args.requestType === 'delete') {\n            var deletedValues = args.data;\n            for (var i = 0; i < deletedValues.length; i++) {\n                if (deletedValues[i].parentItem) {\n                    var parentItem = getParentData(this.parent, deletedValues[i].parentItem.uniqueID);\n                    if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                        var childIndex = parentItem.childRecords.indexOf(deletedValues[i]);\n                        parentItem.childRecords.splice(childIndex, 1);\n                    }\n                }\n            }\n        }\n        return args;\n    };\n    /**\n     * If the data,index and position given, Adds the record to treegrid rows otherwise it will create edit form.\n     * @return {void}\n     */\n    Edit.prototype.addRecord = function (data, index, position) {\n        this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        if (data) {\n            if (index > -1) {\n                this.selectedIndex = index;\n                this.addRowIndex = index;\n            }\n            else {\n                this.selectedIndex = this.parent.selectedRowIndex;\n                this.addRowIndex = this.parent.selectedRowIndex;\n            }\n            if (position) {\n                this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n            }\n            this.parent.grid.editModule.addRecord(data, index);\n        }\n        else {\n            this.parent.grid.editModule.addRecord(data, index);\n        }\n    };\n    /**\n     * Checks the status of validation at the time of editing. If validation is passed, it returns true.\n     * @return {boolean}\n     */\n    Edit.prototype.editFormValidate = function () {\n        return this.parent.grid.editModule.editFormValidate();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.destroyForm = function () {\n        this.parent.grid.editModule.destroyForm();\n    };\n    Edit.prototype.contentready = function (e) {\n        if (!isNullOrUndefined(e.args.requestType)\n            && (e.args.requestType.toString() === 'delete' || e.args.requestType.toString() === 'save'\n                || (this.parent.editSettings.mode === 'Batch' && e.args.requestType.toString() === 'batchsave'))) {\n            this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                this.updateIndex(this.parent.grid.dataSource, this.parent.getMovableDataRows(), this.parent.getCurrentViewRecords());\n            }\n        }\n    };\n    /**\n     * If the row index and field is given, edits the particular cell in a row.\n     * @return {void}\n     */\n    Edit.prototype.editCell = function (rowIndex, field) {\n        if (this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch') {\n            if (this.parent.editSettings.mode !== 'Batch') {\n                this.isOnBatch = true;\n                this.updateGridEditMode('Batch');\n            }\n            this.parent.grid.editModule.editCell(rowIndex, field);\n        }\n    };\n    return Edit;\n}());\nexport { Edit };\n","import { Grid, CommandColumn as Command } from '@syncfusion/ej2-grids';\n/**\n * Command Column Module for TreeGrid\n * @hidden\n */\nvar CommandColumn = /** @class */ (function () {\n    function CommandColumn(parent) {\n        Grid.Inject(Command);\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    CommandColumn.prototype.getModuleName = function () {\n        return 'commandColumn';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    CommandColumn.prototype.destroy = function () {\n        //this.removeEventListener();\n    };\n    return CommandColumn;\n}());\nexport { CommandColumn };\n","import { Grid, getObject } from '@syncfusion/ej2-grids';\nimport { DetailRow as detailrow } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, addClass, isBlazor } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isRemoteData } from '../utils';\n/**\n * TreeGrid Detail Row module\n * @hidden\n */\nvar DetailRow = /** @class */ (function () {\n    function DetailRow(parent) {\n        Grid.Inject(detailrow);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    DetailRow.prototype.getModuleName = function () {\n        return 'detailRow';\n    };\n    DetailRow.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.on('detaildataBound', this.detaildataBound, this);\n        this.parent.grid.on('detail-indentcell-info', this.setIndentVisibility, this);\n        this.parent.on('childRowExpand', this.childRowExpand, this);\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('actioncomplete', this.actioncomplete, this);\n    };\n    /**\n     * @hidden\n     */\n    DetailRow.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.off('detaildataBound', this.detaildataBound);\n        this.parent.off('childRowExpand', this.childRowExpand);\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('actioncomplete', this.actioncomplete);\n        this.parent.grid.off('detail-indentcell-info', this.setIndentVisibility);\n    };\n    DetailRow.prototype.setIndentVisibility = function (args) {\n        var visible = 'visible';\n        args[visible] = false;\n    };\n    DetailRow.prototype.dataBoundArg = function () {\n        var detailele = this.parent.getRows().filter(function (e) {\n            return !e.classList.contains('e-detailrow');\n        });\n        for (var i = 0; i < detailele.length; i++) {\n            var elements = detailele[i].getElementsByClassName('e-detailrowcollapse');\n            var detailData = this.parent.grid.getRowObjectFromUID(detailele[i].getAttribute('data-Uid'));\n            var parentItem = getObject('parentItem', this.parent.grid.getCurrentViewRecords()[i]);\n            if (isNullOrUndefined(parentItem) || !isNullOrUndefined(parentItem) &&\n                getExpandStatus(this.parent, detailData.data, this.parent.grid.getCurrentViewRecords())) {\n                this.parent.grid.detailRowModule.expand(elements[0]);\n            }\n        }\n    };\n    DetailRow.prototype.childRowExpand = function (args) {\n        var detailRowElement = args.row.getElementsByClassName('e-detailrowcollapse');\n        if (!isNullOrUndefined(detailRowElement[0])) {\n            this.parent.grid.detailRowModule.expand(detailRowElement[0]);\n        }\n    };\n    DetailRow.prototype.rowExpandCollapse = function (args) {\n        if (isRemoteData(this.parent)) {\n            return;\n        }\n        for (var i = 0; i < args.detailrows.length; i++) {\n            args.detailrows[i].style.display = args.action;\n        }\n    };\n    DetailRow.prototype.detaildataBound = function (args) {\n        if (!isBlazor() || !this.parent.isServerRendered) {\n            var data = args.data;\n            var row = args.detailElement.parentElement.previousSibling;\n            var index = !isNullOrUndefined(data.parentItem) ? data.parentItem.index : data.index;\n            var expandClass_1 = 'e-gridrowindex' + index + 'level' + data.level;\n            var classlist = row.querySelector('.' + expandClass_1).classList;\n            var gridClas = [].slice.call(classlist).filter(function (gridclass) { return (gridclass === expandClass_1); });\n            var newNo = gridClas[0].length;\n            var slicedclas = gridClas.toString().slice(6, newNo);\n            var detailClass = 'e-griddetail' + slicedclas;\n            addClass([args.detailElement.parentElement], detailClass);\n        }\n    };\n    ;\n    DetailRow.prototype.actioncomplete = function (args) {\n        if (args.requestType === 'beginEdit' || args.requestType === 'add') {\n            var spann = (args.row.querySelectorAll('.e-editcell')[0].getAttribute('colSpan'));\n            var colum = parseInt(spann, 10) - 1;\n            var updtdcolum = colum.toString();\n            args.row.querySelectorAll('.e-editcell')[0].setAttribute('colSpan', updtdcolum);\n        }\n        var focusElement = this.parent.grid.contentModule.getRows();\n        for (var i = 0; i < focusElement.length; i++) {\n            focusElement[i].cells[0].visible = false;\n        }\n        var focusModule = getObject('focusModule', this.parent.grid);\n        var matrix = 'refreshMatrix';\n        focusModule[matrix](true)({ rows: this.parent.grid.contentModule.getRows() });\n    };\n    /**\n     * Destroys the DetailModule.\n     * @method destroy\n     * @return {void}\n     */\n    DetailRow.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return DetailRow;\n}());\nexport { DetailRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualContentRenderer } from '@syncfusion/ej2-grids';\nimport { InterSectionObserver } from '@syncfusion/ej2-grids';\nimport { TreeVirtualRowModelGenerator } from '../renderer/virtual-row-model-generator';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, EventHandler, getValue, setValue } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\n/**\n * Content renderer for TreeGrid\n */\nvar VirtualTreeContentRenderer = /** @class */ (function (_super) {\n    __extends(VirtualTreeContentRenderer, _super);\n    function VirtualTreeContentRenderer(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        _this.isExpandCollapse = false;\n        _this.translateY = 0;\n        _this.maxiPage = 0;\n        /** @hidden */\n        _this.startIndex = -1;\n        _this.endIndex = -1;\n        _this.preTranslate = 0;\n        _this.isRemoteExpand = false;\n        _this.addEventListener();\n        return _this;\n    }\n    VirtualTreeContentRenderer.prototype.getModelGenerator = function () {\n        return new TreeVirtualRowModelGenerator(this.parent);\n    };\n    VirtualTreeContentRenderer.prototype.getRowByIndex = function (index) {\n        return this.parent.getDataRows().filter(function (e) { return parseInt(e.getAttribute('aria-rowindex'), 0) === index; })[0];\n    };\n    VirtualTreeContentRenderer.prototype.addEventListener = function () {\n        this.parent.on(events.virtualActionArgs, this.virtualOtherAction, this);\n        this.parent.on(events.indexModifier, this.indexModifier, this);\n    };\n    VirtualTreeContentRenderer.prototype.virtualOtherAction = function (args) {\n        if (args.setTop) {\n            this.translateY = 0;\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        else if (args.isExpandCollapse) {\n            this.isExpandCollapse = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.indexModifier = function (args) {\n        args.startIndex = this.startIndex;\n        args.endIndex = this.endIndex;\n    };\n    VirtualTreeContentRenderer.prototype.eventListener = function (action) {\n        var _this = this;\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '')) {\n            this.parent[action]('data-ready', this.onDataReady, this);\n            //this.parent[action]('refresh-virtual-block', this.refreshContentRows, this);\n            this.fn = function () {\n                _this.observers.observes(function (scrollArgs) { return _this.scrollListeners(scrollArgs); });\n                _this.parent.off('content-ready', _this.fn);\n            };\n            this.parent.on('content-ready', this.fn, this);\n        }\n        else {\n            _super.prototype.eventListener.call(this, 'on');\n        }\n    };\n    VirtualTreeContentRenderer.prototype.onDataReady = function (e) {\n        _super.prototype.onDataReady.call(this, e);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '')) {\n            if (!isNullOrUndefined(e.count)) {\n                this.totalRecords = e.count;\n                getValue('virtualEle', this).setVirtualHeight(this.parent.getRowHeight() * e.count, '100%');\n                var outBuffer = 4; // this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n            }\n            if (!isNullOrUndefined(e.requestType) && e.requestType.toString() === 'collapseAll') {\n                this.contents.scrollTop = 0;\n            }\n        }\n    };\n    VirtualTreeContentRenderer.prototype.renderTable = function () {\n        _super.prototype.renderTable.call(this);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '')) {\n            getValue('observer', this).options.debounceEvent = false;\n            this.observers = new TreeInterSectionObserver(this.parent, getValue('observer', this).element, getValue('observer', this).options);\n            this.contents = this.getPanel().firstChild;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.getTranslateY = function (sTop, cHeight, info, isOnenter) {\n        if (this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') {\n            if (this.isRemoteExpand) {\n                this.isRemoteExpand = false;\n                return this.preTranslate;\n            }\n            else {\n                this.preTranslate = _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n                return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n            }\n        }\n        else {\n            return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.scrollListeners = function (scrollArgs) {\n        var info = scrollArgs.sentinel;\n        var outBuffer = 10; //this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n        var content = this.parent.getContent().querySelector('.e-content');\n        var scrollHeight = outBuffer * this.parent.getRowHeight();\n        var upScroll = (scrollArgs.offset.top - this.translateY) < 0;\n        var downScroll = (scrollArgs.offset.top - this.translateY) > scrollHeight;\n        if (upScroll) {\n            var vHeight = +(this.parent.height.toString().indexOf('%') < 0 ? this.parent.height :\n                this.parent.element.getBoundingClientRect().height);\n            var index = (~~(content.scrollTop / this.parent.getRowHeight())\n                + Math.ceil(vHeight / this.parent.getRowHeight()))\n                - this.parent.getRows().length;\n            index = (index > 0) ? index : 0;\n            this.startIndex = index;\n            this.endIndex = index + this.parent.getRows().length;\n            if (this.endIndex > this.totalRecords) {\n                var lastInx = this.totalRecords - 1;\n                var remains = this.endIndex % lastInx;\n                this.endIndex = lastInx;\n                this.startIndex = this.startIndex - remains;\n            }\n            //var firsttdinx = parseInt(this.parent.getContent().querySelector('.e-content td').getAttribute('index'), 0);\n            var rowPt = Math.ceil(scrollArgs.offset.top / this.parent.getRowHeight());\n            rowPt = rowPt % this.parent.pageSettings.pageSize;\n            var firsttdinx = 0;\n            if (!isNullOrUndefined(this.parent.getRows()[rowPt])) {\n                var attr = this.parent.getContent().querySelectorAll('.e-content tr')[rowPt]\n                    .querySelector('td').getAttribute('index');\n                firsttdinx = +attr; // this.parent.getContent().querySelector('.e-content tr').getAttribute('aria-rowindex');\n            }\n            if (firsttdinx === 0) {\n                this.translateY = scrollArgs.offset.top;\n            }\n            else {\n                var height = this.parent.getRowHeight();\n                this.translateY = (scrollArgs.offset.top - (outBuffer * height) > 0) ?\n                    scrollArgs.offset.top - (outBuffer * height) + 10 : 0;\n            }\n        }\n        else if (downScroll) {\n            var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n            var lastIndex = nextSetResIndex + this.parent.getRows().length;\n            if (lastIndex > this.totalRecords) {\n                lastIndex = nextSetResIndex +\n                    (this.totalRecords - nextSetResIndex);\n            }\n            this.startIndex = lastIndex - this.parent.getRows().length;\n            this.endIndex = lastIndex;\n            this.translateY = scrollArgs.offset.top;\n        }\n        if ((downScroll && (scrollArgs.offset.top < (this.parent.getRowHeight() * this.totalRecords)))\n            || (upScroll)) {\n            var viewInfo = getValue('getInfoFromView', this).apply(this, [scrollArgs.direction, info, scrollArgs.offset]);\n            this.parent.notify(viewInfo.event, { requestType: 'virtualscroll', focusElement: scrollArgs.focusElement });\n        }\n    };\n    VirtualTreeContentRenderer.prototype.appendContent = function (target, newChild, e) {\n        if (this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') {\n            if (getValue('isExpandCollapse', e)) {\n                this.isRemoteExpand = true;\n            }\n            _super.prototype.appendContent.call(this, target, newChild, e);\n        }\n        else {\n            var info = e.virtualInfo.sentinelInfo && e.virtualInfo.sentinelInfo.axis === 'Y' &&\n                getValue('currentInfo', this).page && getValue('currentInfo', this).page !== e.virtualInfo.page ?\n                getValue('currentInfo', this) : e.virtualInfo;\n            var cBlock = (info.columnIndexes[0]) - 1;\n            var cOffset = this.getColumnOffset(cBlock);\n            //this.virtualEle.setWrapperWidth(width, ( Browser.isIE || Browser.info.name === 'edge') as boolean);\n            target = this.parent.createElement('tbody');\n            target.appendChild(newChild);\n            var replace = 'replaceWith';\n            this.getTable().querySelector('tbody')[replace](target);\n            if (!this.isExpandCollapse || this.translateY === 0) {\n                getValue('virtualEle', this).adjustTable(cOffset, this.translateY);\n            }\n            else {\n                this.isExpandCollapse = false;\n            }\n            setValue('prevInfo', info, this);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('data-ready', this.onDataReady);\n        this.parent.off('content-ready', this.fn);\n        this.parent.off(events.virtualActionArgs, this.virtualOtherAction);\n        this.parent.off(events.indexModifier, this.indexModifier);\n    };\n    return VirtualTreeContentRenderer;\n}(VirtualContentRenderer));\nexport { VirtualTreeContentRenderer };\nvar TreeInterSectionObserver = /** @class */ (function (_super) {\n    __extends(TreeInterSectionObserver, _super);\n    function TreeInterSectionObserver() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.isWheeling = false;\n        _this.newPos = 0;\n        _this.lastPos = 0;\n        _this.timer = 0;\n        return _this;\n    }\n    TreeInterSectionObserver.prototype.observes = function (callback) {\n        setValue('containerRect', getValue('options', this).container.getBoundingClientRect(), this);\n        EventHandler.add(getValue('options', this).container, 'scroll', this.virtualScrollHandlers(callback), this);\n    };\n    TreeInterSectionObserver.prototype.clear = function () {\n        this.lastPos = null;\n    };\n    TreeInterSectionObserver.prototype.virtualScrollHandlers = function (callback) {\n        var _this = this;\n        var prevTop = 0;\n        var prevLeft = 0;\n        return function (e) {\n            var scrollTop = e.target.scrollTop;\n            var scrollLeft = e.target.scrollLeft;\n            var direction = prevTop < scrollTop ? 'down' : 'up';\n            direction = prevLeft === scrollLeft ? direction : prevLeft < scrollLeft ? 'right' : 'left';\n            prevTop = scrollTop;\n            prevLeft = scrollLeft;\n            var current = getValue('sentinelInfo', _this)[direction];\n            var delta = 0;\n            _this.newPos = scrollTop;\n            if (_this.lastPos != null) { // && newPos < maxScroll \n                delta = _this.newPos - _this.lastPos;\n            }\n            _this.lastPos = _this.newPos;\n            if (_this.timer) {\n                clearTimeout(_this.timer);\n            }\n            _this.timer = setTimeout(_this.clear, 0);\n            /*if (this.options.axes.indexOf(current.axis) === -1) {\n                return;\n            }*/\n            /*if(delta > 45 || delta < -45){\n              this.isWheeling = true;\n            }*/\n            if ((delta > 100 || delta < -100) && (e && e.preventDefault)) {\n                e.returnValue = false;\n                e.preventDefault();\n            }\n            callback({ direction: direction, isWheel: _this.isWheeling,\n                sentinel: current, offset: { top: scrollTop, left: scrollLeft },\n                focusElement: document.activeElement });\n        };\n    };\n    return TreeInterSectionObserver;\n}(InterSectionObserver));\nexport { TreeInterSectionObserver };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Grid, VirtualScroll as GridVirtualScroll } from '@syncfusion/ej2-grids';\nimport { RenderType } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { getExpandStatus } from '../utils';\nimport { VirtualTreeContentRenderer } from '../renderer/virtual-tree-content-render';\n/**\n * TreeGrid Virtual Scroll module will handle Virtualization\n * @hidden\n */\nvar VirtualScroll = /** @class */ (function () {\n    /**\n     * Constructor for VirtualScroll module\n     */\n    function VirtualScroll(parent) {\n        this.prevstartIndex = -1;\n        this.prevendIndex = -1;\n        this.parent = parent;\n        var name = 'name';\n        var injectedModules = 'injectedModules';\n        var modules = Grid.prototype[injectedModules];\n        for (var i = 0; i < modules.length; i++) {\n            if (modules[i] === GridVirtualScroll) {\n                modules.splice(i, 1);\n                break;\n            }\n        }\n        Grid.Inject(TreeVirtual);\n        this.addEventListener();\n    }\n    VirtualScroll.prototype.returnVisualData = function (args) {\n        args.data = this.visualData;\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    VirtualScroll.prototype.getModuleName = function () {\n        return 'virtualScroll';\n    };\n    /**\n     * @hidden\n     */\n    VirtualScroll.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds, this);\n        this.parent.on(events.pagingActions, this.virtualPageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    VirtualScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds);\n        this.parent.off(events.pagingActions, this.virtualPageAction);\n    };\n    VirtualScroll.prototype.collapseExpandVirtualchilds = function (row) {\n        this.parent.grid.notify(events.virtualActionArgs, { isExpandCollapse: true });\n        this.expandCollapseRec = row.record;\n        row.record.expanded = row.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: row.row,\n            action: row.action,\n            record: row.record,\n            count: this.parent.flatData.length\n        };\n        var requestType = getValue('isCollapseAll', this.parent) ? 'collapseAll' : 'refresh';\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret, { requestType: requestType });\n    };\n    VirtualScroll.prototype.virtualPageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        var parents = dm.executeLocal(new Query().where(expanded));\n        var visualData = parents.filter(function (e) {\n            return getExpandStatus(_this.parent, e, parents);\n        });\n        this.visualData = visualData;\n        this.parent.grid.notify(events.dataListener, { data: visualData });\n        var counts = { startIndex: -1, endIndex: -1 };\n        this.parent.grid.notify(events.indexModifier, counts);\n        var startIndex = counts.startIndex;\n        var endIndex = counts.endIndex;\n        pageingDetails.count = visualData.length;\n        if (startIndex === -1 && endIndex === -1) {\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm.dataSource.json = visualData;\n            pageingDetails.result = dm.executeLocal(query);\n        }\n        else {\n            var requestType = pageingDetails.actionArgs.requestType;\n            if (requestType === 'filtering') {\n                startIndex = 0;\n                endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n            }\n            //if ((this.prevendIndex !== -1 && this.prevstartIndex !== -1) && \n            //this.prevendIndex === endIndex && this.prevstartIndex === startIndex) {\n            if (!isNullOrUndefined(this.expandCollapseRec)) {\n                var resourceCount = this.parent.getRows();\n                var sIndex = visualData.indexOf(this.expandCollapseRec);\n                var tempdata = visualData.slice(sIndex, sIndex + resourceCount.length);\n                if (tempdata.length < resourceCount.length && sIndex >= 0) {\n                    sIndex = visualData.length - resourceCount.length;\n                    sIndex = sIndex > 0 ? sIndex : 0;\n                    startIndex = sIndex;\n                    endIndex = visualData.length;\n                }\n                else if (getValue('isCollapseAll', this.parent)) {\n                    startIndex = 0;\n                    endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                    this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n                }\n                this.expandCollapseRec = null;\n            }\n            //}\n            pageingDetails.result = visualData.slice(startIndex, endIndex);\n            this.prevstartIndex = startIndex;\n            this.prevendIndex = endIndex;\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    /**\n     * To destroy the virtualScroll module\n     * @return {void}\n     * @hidden\n     */\n    VirtualScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return VirtualScroll;\n}());\nexport { VirtualScroll };\nvar TreeVirtual = /** @class */ (function (_super) {\n    __extends(TreeVirtual, _super);\n    function TreeVirtual(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        getValue('parent', _this).off('initial-load', getValue('instantiateRenderer', _this), _this);\n        getValue('parent', _this).on('initial-load', _this.instantiateRenderers, _this);\n        return _this;\n    }\n    TreeVirtual.prototype.instantiateRenderers = function () {\n        getValue('parent', this).log(['limitation', 'virtual_height'], 'virtualization');\n        var renderer = getValue('locator', this).getService('rendererFactory');\n        getValue('addRenderer', renderer)\n            .apply(renderer, [RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this))]);\n        //renderer.addRenderer(RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this)));\n        this.ensurePageSize();\n    };\n    TreeVirtual.prototype.ensurePageSize = function () {\n        var parentGrid = getValue('parent', this);\n        var rowHeight = parentGrid.getRowHeight();\n        if (!isNullOrUndefined(parentGrid.height) && typeof (parentGrid.height) === 'string' && parentGrid.height.indexOf('%') !== -1) {\n            parentGrid.element.style.height = parentGrid.height;\n        }\n        var vHeight = parentGrid.height.toString().indexOf('%') < 0 ? parentGrid.height :\n            parentGrid.element.getBoundingClientRect().height;\n        var blockSize = ~~(vHeight / rowHeight);\n        var height = blockSize * 2;\n        var size = parentGrid.pageSettings.pageSize;\n        parentGrid.setProperties({ pageSettings: { pageSize: size < height ? height : size } }, true);\n    };\n    return TreeVirtual;\n}(GridVirtualScroll));\nexport { TreeVirtual };\n","import { parentsUntil } from '@syncfusion/ej2-grids';\nimport { Grid, Freeze as FreezeColumn } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Freeze module\n * @hidden\n */\nvar Freeze = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function Freeze(parent) {\n        Grid.Inject(FreezeColumn);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    Freeze.prototype.addEventListener = function () {\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.grid.on('dblclick', this.dblClickHandler, this);\n    };\n    Freeze.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.grid.off('dblclick', this.dblClickHandler);\n    };\n    Freeze.prototype.rowExpandCollapse = function (args) {\n        var movableRows = this.parent.getMovableDataRows();\n        var frozenrows = this.parent.getRows();\n        var rows;\n        if (!args.detailrows.length) {\n            rows = movableRows.filter(function (e) {\n                return e.querySelector('.e-gridrowindex' + args.record.index + 'level' + (args.record.level + 1));\n            });\n        }\n        else {\n            rows = args.detailrows;\n        }\n        for (var i = 0; i < rows.length; i++) {\n            var rData = this.parent.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n            rows[i].style.display = args.action;\n            var queryselector = args.action === 'none' ? '.e-treecolumn-container .e-treegridcollapse'\n                : '.e-treecolumn-container .e-treegridexpand';\n            if (frozenrows[rows[i].rowIndex].querySelector(queryselector)) {\n                var cRow = [];\n                for (var i_1 = 0; i_1 < movableRows.length; i_1++) {\n                    if (movableRows[i_1].querySelector('.e-gridrowindex' + rData.index + 'level' + (rData.level + 1))) {\n                        cRow.push(movableRows[i_1]);\n                    }\n                }\n                if (cRow.length) {\n                    this.rowExpandCollapse({ detailrows: cRow, action: args.action });\n                }\n            }\n        }\n    };\n    Freeze.prototype.dblClickHandler = function (e) {\n        if (parentsUntil(e.target, 'e-rowcell') &&\n            this.parent.grid.editSettings.allowEditOnDblClick && this.parent.editSettings.mode !== 'Cell') {\n            this.parent.grid.editModule.startEdit(parentsUntil(e.target, 'e-row'));\n        }\n    };\n    Freeze.prototype.dataBoundArg = function (args) {\n        var checkboxColumn = this.parent.getColumns().filter(function (e) {\n            return e.showCheckbox;\n        });\n        if (checkboxColumn.length && this.parent.freezeModule && this.parent.initialRender) {\n            addClass([this.parent.element.getElementsByClassName('e-grid')[0]], 'e-checkselection');\n        }\n    };\n    Freeze.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Freeze.prototype.getModuleName = function () {\n        return 'freeze';\n    };\n    return Freeze;\n}());\nexport { Freeze };\n","import * as index from './index';\nindex.TreeGrid.Inject(index.Filter, index.Page, index.Sort, index.Reorder, index.Toolbar, index.Aggregate, index.Resize, index.ColumnMenu, index.ExcelExport, index.PdfExport, index.CommandColumn, index.ContextMenu, index.Edit, index.Selection, index.VirtualScroll, index.DetailRow, index.RowDD, index.Freeze);\nexport * from './index';\n"],"names":["isRemoteData","parent","dataSource","DataManager","adaptor","ODataAdaptor","WebApiAdaptor","WebMethodAdaptor","CacheAdaptor","UrlAdaptor","isCountRequired","isCheckboxcolumn","i","columns","length","showCheckbox","isFilterChildHierarchy","isNullOrUndefined","grid","searchSettings","key","hierarchyMode","allowFiltering","filterSettings","findParentRecords","records","datas","len","Object","keys","getObject","push","getExpandStatus","record","parents","childParent","parentRecord","parentItem","getParentData","uniqueID","initialRender","expandStateMapping","expanded","findChildrenRecords","hasChildRecords","childRecords","concat","isOffline","dm","ready","extendArray","array","obj","objArr","j","getPlainData","value","index","level","requireFilter","editAction","details","control","isSelfReference","addRowIndex","selectedIndex","columnName","addRowRecord","batchChanges","action","getPrimaryKeyFieldNames","treeData","json","modifiedData","originalData","isSkip","editSettings","mode","editModule","getBatchChanges","addAct","addAction","Array","extend","newRowPosition","k","taskData","hasOwnProperty","parentIdMapping","idMapping","splice","childMapping","updateParentRow","currentData_1","parentData","flatData","filter","e","p","removeChildRecords","currentViewRecords","getCurrentViewRecords","unshift","primaryKeys","currentdata","isChildAll","editedData","child","index_1","currentRecords","map","sortSettings","parentUniqueID","indexOf","data","setRowData","row","getRowByIndex","getRows","getRowIndexByPrimaryKey","movableRow","frozenRows","getFrozenColumns","getMovableRowByIndex","renderModule","cellRender","cell","cells","treeColumnIndex","frozenColumns","column","getColumns","requestType","Column","options","this","allowEditing","edit","disableHtmlEncode","allowReordering","showColumnMenu","allowSorting","allowResizing","merge","__extends","extendStatics","d","b","setPrototypeOf","__proto__","__","constructor","prototype","create","__decorate","decorators","target","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Predicate","_super","apply","Property","ChildProperty","FilterSettings","Collection","TextWrapSettings","TreeClipboard","_this","call","treeCopyContent","copiedUniqueIdCollection","treeGridParent","setCopyData","withHeader","window","getSelection","toString","clipBoardTextArea","rows","selectionSettings","selectedIndexes","getSelectedRowIndexes","sort","a","classList","contains","slice","querySelectorAll","uniqueid","getSelectedRecords","copyHierarchyMode","parentContentData","childContentData","headerTextArray","getVisibleColumns","headerText","args","cancel","trigger","Browser","userAgent","match","setSelectionRange","select","treeLevel","copy","paste","rowIndex","colIndex","getModuleName","destroy","childData","GridClipboard","Selection","selectedItems","addEventListener","on","headerCheckbox","columnCheckbox","updateGridActions","checkboxSelection","removeEventListener","isDestroyed","off","checkBox","checkWrap","parentsUntil","querySelector","closest","selectCheckboxes","triggerChkChangeEvent","nextElementSibling","autoCheckHierarchy","checkBoxvalue","headerSelection","checkState","rowElement","checked","rowData","getCheckedRecords","getCheckboxcolumnIndex","mappingUid","columnIndex","col","uid","headerCelllength","getHeaderContent","getAttribute","headerElement","rowChkBox","createElement","className","attrs","type","createCheckBox","label","add","style","width","insertBefore","cloneNode","firstChild","renderColumnCheckbox","setAttribute","checkboxState","checkbox","removeClass","container","containerELe","spanEle","innerHTML","divEle","appendChild","rowIndexes","flatRecord","isBlazor","traverSelection","ischildItem","updateSelectedItems","updateParentSelection","filterModule","filteredResult","getFilteredChildRecords","count","isSummaryRow","indeter","checkChildRecords","this_1","childRecord","currentRecord","checkBoxRecord","checkAll","enableVirtualization","rec","checkedRecord","recordIndex","checkboxRecord","tr","movableTr","getMovableDataRows","checkedIndex","checkBoxclass","childLength","updatedData","forEach","getCheckedrecords","getCheckedRowIndexes","Print","Grid","Inject","GridPrint","printTreeGrid","printGrid","gridElement","queryCellInfo","rowDataBound","beforeDataBound","addClass","print","SearchSettings","SelectionSettings","Render","templateResult","columnTemplateResult","RowModifier","allowPaging","pageSettings","pageSizeMode","enableCollapseAll","display","proxy_1","parentrec","getValue","cellElement","pad","filterLevel","totalIconsWidth","getColumnByField","field","summaryRow","getColumnIndexByUid","emptyExpandIcon","styles","n","iconRequired","hasFilteredChildRecords","expandIcon","expand","collapsed","allowTextWrap","updateTreeCell","notify","checkboxElement","parseInt","summaryData","rowTemplate","textContent","appendChildren","children","template","DataManipulation","addedRecords","parentItems","taskIds","hierarchyData","storedIndex","sortedData","isSortAction","dataResults","updateParentRemoteData","beginSorting","updateData","collectExpandingRecs","dataProcessor","isRemote","convertToFlatData","query","Query","where","addParams","hasChildMapping","qry","clone","queries","executeQuery","then","DataUtil","distinct","result","httpRequest","statusText","setValue","zerothLevelData","dataManagerSuccess","hideSpinner","tempData","selfData","mappingData","executeLocal","group","groupData","items","selfReferenceUpdate","createRecords","shift","loadChildOnDemand","getUid","element","id","Math","ceil","random","rowDetails","gridRows","getContentTable","parentRow","isServerRendered","targetEle","getElementsByClassName","getRowObjectFromUID","childRows","expandingTd","detailRowModule","getDataModule","generateQuery","clonequries","fn","showSpinner","currentViewData","inx","haveChild","aggregates","gridQuery","aggregateQuery","summaryQuery","q","summaryModule","calculateSummaryValue","totalRecordsCount","virtualArgs","remoteVirtualAction","contentModule","currentInfo","prevInfo","loadNext","currentPage","nextInfo","page","parentRecords","treeGridData","currentData","dataStateChange","dataObj","isExport","expresults","exportType","isPrinting","actionArgs","actionData","actionAddArgs","primaryKeyColumnName","dataValue","isLocalData","updateAction","results","filterQuery","searchQuery","fltrQuery","srchQuery","filteredData","srtQry","srt","compFun","sortComparer","bind","direction","sortBy","sortArgs","temp","paging","printMode","dataResult","ToolbarItem","ContextMenuItems","PageSettings","AggregateColumn","intl","Internationalization","templateFn","setFormatter","cultureName","format","skeleton","formatFn","getFormatFunction","getDateFormat","getNumberFormat","getFormatter","setTemplate","helper","undefined","footerTemplate","getEnumValue","CellType","Summary","compile","property","getTemplate","setPropertiesSilent","prop","setProperties","AggregateRow","EditSettings","SortDescriptor","SortSettings","TreeGrid","uniqueIDCollection","uniqueIDFilterCollection","changedRecords","deletedRecords","TreeGrid_1","TreeGridSelection","mergePersistTreeGridData","excelExport","excelExportProperties","isMultipleExport","workbook","isBlob","excelExportModule","Map","csvExport","pdfExport","pdfExportProperties","pdfDoc","pdfExportModule","preRender","TreeGridLocale","initProperties","defaultLocale","Above","Below","AddRow","ExpandAll","CollapseAll","RowIndent","RowOutdent","l10n","L10n","locale","sortByColumn","isMultiSort","sortModule","sortColumn","clearSorting","removeSortColumn","search","searchString","autoFitColumns","fieldNames","resizeModule","updateColumnModel","reorderColumns","fromFName","toFName","localeObject","gridLocale","treeGridLocale","load","printModule","treeGridkeyActionHandler","allowKeyboard","expandAll","collapseAll","collapserow","collapseRow","expandCollapseRequest","expandrow","expandRow","parentElement","summaryElement","findnextRowElement","selectRow","cellIndex","clearSelection","targetRow","summaryRowElement","findPreviousRowElement","rIndex","cIndex","previousElementSibling","columnModel","isExpandAll","isCollapseAll","keyConfigs","ctrlDownArrow","ctrlUpArrow","ctrlShiftUpArrow","ctrlShiftDownArrow","downArrow","upArrow","offline","RemoteSaveAdaptor","wireEvents","EventHandler","mouseClickHandler","keyboardModule","KeyboardEvents","keyAction","eventName","tabIndex","requiredModules","modules","member","toolbar","contextMenuItems","allowExcelExport","detailTemplate","allowPdfExport","allowRowDragAndDrop","allowAdding","allowDeleting","isCommandColumn","allowSelection","some","commands","commandsTemplate","unwireEvents","remove","render","createSpinner","dataModule","autoGenerateColumns","convertTreeData","loadGrid","rowDropSettings","targetID","addListener","gridContainer","height","appendTo","renderComplete","destroyTemplateFn","clearTemplate","fn_1","gridRendered","gridObserver","afterGridRender","clipboardModule","setBlazorGUID","setColIndex","bindGridEvents","selectionModule","ind","griddata","bindGridProperties","bindedDataSource","enableRtl","getGridColumns","columnQueryMode","getActualProperties","pagerTemplate","enableAltRow","enableHover","enableAutoFill","rowHeight","gridLines","getGridToolbar","toolbarTemplate","textWrapSettings","selectedRowIndex","getContextMenu","columnMenuItems","getGridEditSettings","triggerEvents","treeGrid","rowSelecting","rowSelected","rowDeselected","resizeStop","excelQueryCellInfo","pdfQueryCellInfo","checkBoxChange","pdfExportComplete","excelExportComplete","excelHeaderQueryCellInfo","pdfHeaderQueryCellInfo","dataSourceChanged","recordDoubleClick","rowDeselecting","cellDeselected","cellDeselecting","columnMenuOpen","columnMenuClick","cellSelected","headerCellInfo","resizeStart","resizing","columnDrag","columnDragStart","columnDrop","beforePrint","beforeCopy","beforePaste","printComplete","actionFailure","extendedGridDataBoundEvent","extendedGridEvents","extendedGridActionEvents","extendedGridEditEvents","bindGridDragEvents","bindCallBackEvents","dataBound","updateRowTemplate","updateAltRow","req","callBackPromise_1","Deferred","beforeDataBoundArgs","resolve","beginEdit","toolbarClick","callBackPromise","toolbarargs","cellSelecting","cellselectingArgs","begineditArgs","cellEdit","cellSave","events_1","boundedEvents","pop","isExpandRefresh","isContextMenuOpen","contextitems","contextMenuModule","contextMenu","cellsaveArgs","getElement","cellSaved","promise","batchAdd","beforeBatchSave","beforeBatchAdd","batchDelete","beforeBatchDelete","batchCancel","setTimeout","treeColumnRowTemplate","datacount","defaultQuery","dm_1","JsonAdaptor","actionComplete","actionBegin","expandicon","updateTreeGridModel","detailDataBound","contextMenuClick","contextMenuOpen","rowDragStartHelper","rowDragStart","rowDrag","isEdit","rowDrop","registeredTemplate","allowEditOnDblClick","showConfirmDialog","showDeleteConfirmDialog","dialog","text","getConstant","Search","tooltipText","prefixIcon","tooltip","tooltipindent","tooltipoutdent","treeGridColumn","gridColumn","gridColumnCollection","treeColumn","getColumnByUid","_i","_a","onPropertyChanged","newProp","oldProp","requireRefresh","properties_1","refreshColumns","allowMultiSorting","eventListener","renderTable","refresh","closeEdit","removeListener","dataBind","getPersistData","keyEntity","ignoreOnPersist","ignoreOnColumn","currentObject","ignoreInArrays","addOnPersist","ignoreInColumn","touches","isEditCollapse","getPager","addRecord","position","saveCell","updateCell","updateRow","deleteRecord","fieldName","startEdit","editCell","enableToolbarItems","isEnable","toolbarModule","enableItems","endEdit","deleteRow","setCellValue","primaryKey","goToPage","pageNo","pagerModule","updateExternalMessage","message","getCellFromIndex","iterateArrayOrObject","item","getColumnFieldNames","getFooterContent","getFooterContentTable","showColumns","showBy","hideColumns","hideBy","getColumnHeaderByField","getColumnHeaderByIndex","getColumnHeaderByUid","getColumnIndexByField","isRefresh","stackedHeader","gridColumns","getContent","mergeColumns","storedColumn","getDataRows","dRows","getHeaderTable","getRowInfo","getUidByColumnField","cols","visible","indexes","refreshUI","refreshHeader","dialogObj","targetElement","rowInfo","getCollapseExpandRecords","expandingArgs","expandCollapse","collapseArgs","collapsingArgs","expandAtLevel","getRecordDetails","collapseAtLevel","expandCollapseAll","isChild","updateChildOnDemand","displayAction","detailrows","remoteExpand","localExpand","deff","data_1","length_1","rows_1","args_1","collapseRemoteChild","movableRows","rows_2","getMovableRows","visibleRowCount","gridRow","rcell","arg","getRowsObject","rData","collapsingTd","collapse","expandElement","cRow","eRows","i_1","updateResultModel","returnResult","filterByColumn","filterOperator","filterValue","predicate","matchCase","ignoreAccent","actualFilterValue","actualOperator","clearFiltering","removeFilteredColsByField","isClearFilterBar","isToggle","selectRows","selectCell","getSelectedRows","getMovableCellFromIndex","getFrozenCount","cnt","isFrozen","getSelectedRowCellIndexes","baseModule","treeModule","reorderRows","fromIndexes","toIndex","rowDragAndDropModule","Complex","RowDropSettings","Event","NotifyPropertyChanges","Component","Reorder","GridReorder","getTreeColumn","treeIndex","updatedCols","f","Resize","GridResize","fName","RowDD","canDrop","isDraggedWithChild","isaddtoBottom","GridDragDrop","getChildrecordsByParentID","Rowdraging","rowDropped","rowsAdded","rowsRemoved","tObj","dropPosition","dropIndex","dropRows","orderToIndex","draggedRecord","dragRecords","draggedRecord_1","dragRecords_1","deleteDragRow","refreshGridDataSource","tempDataSource","idx","droppedRecord","proxy","removeFirstrowBorder","isRemove","canremove","removeLastrowBorder","isEmptyRow","islastRowIndex","updateIcon","rowEle","rowPositionHeight","addErrorElem","rowTop","toolHeight","document","getElementById","offsetHeight","positionOffSet","getOffset","contentHeight","top","scrollTop","firstElementChild","offsetTop","divide","topRowSegment","middleRowSegment","bottomRowSegment","posy","left","pageY","isTopSegment","isMiddleRowSegment","isBottomRowSegment","removeChildBorder","removetopOrBottomBorder","addFirstrowBorder","removeErrorElem","topOrBottomBorder","addRemoveClasses","addLastRowborder","borderElem","node","div","gridheaderEle","toolbarHeight","getToolbar","multiplegrid","offsetWidth","getScrollWidth","trElement","bottomborder","gridcontentEle","bottom","scrollElem","scrollWidth","Scroll","getScrollBarWidth","dragelem","ele","errorVal","content","parentNode","removeChild","spanContent","paddingLeft","errorelem","border","box","getBoundingClientRect","body","docElem","documentElement","pageYOffset","scrollLeft","pageXOffset","clientTop","clientLeft","round","cloneElement","cursor","rowIdx","ensuredropPosition","dropElement","ej2_instances","dragDropGrid","srcControl","targetIndex","isNaN","getTargetIdx","selectedRecord","isByMethod","isMultipleGrid","dragLength","recordIndex1","dropAtTop","getChildCount","updateChildRecordLevel","updateChildRecord","droppedRecordIndex","dropMiddle","newParentIndex","childRecordsLength","recordLevel","childItem","deletedRow","removeRecords","flatParentData","childIndex","removeChildItem","idz","recordIndex_1","parentIndex","primaryKeyField","deletedRecordCount","i_2","draggedRecords","rowDragMoudule","TreeVirtualRowModelGenerator","getDatas","visualData","generateRows","notifyArgs","url","checkAndResetCache","clear","cache","groups","getBlockSize","VirtualRowModelGenerator","Filter","GridFilter","isHierarchyFilter","flatFilteredData","filteredParentRecs","updatedFilteredRecord","clearFilterLevel","dataDetails","addParentRecord","ischild","checkChildExsist","parent_1","parRecord","updateParentFilteredRecord","updateFilterLevel","uniqueIDValue","childRec","isExist","parent_2","parent_3","fLevel","ExcelExport","GridExcel","updateExcelResultModel","isCsv","Promise","reject","isLocal","customData","manipulateExportProperties","book","dtSrc","queryResult","flatsData","dataSrc","indent","PdfExport","GridPdf","updatePdfResultModel","customsData","manipulatePdfProperties","flatDatas","paragraphIndent","Page","GridPage","collapseExpandPagedchilds","pageAction","ret","pageRoot","pagedResults","newResults","t","res","pageingDetails","propname","skip","size","pageSize","current","take","or","parents_1","floor","Toolbar","tool","refreshToolbar","toolbarClickHandler","Aggregate","GridAggregate","flatChildRecords","isSort","flatRecords","columnLength","summaryLength","getChildRecordsLength","summaryRowIndex","len_1","len_2","showChildSummary","createSummaryItem","idx_1","currentIndex","summaryParent","itemData","summary","displayColumn","keys_1","getSummaryValues","summaryColumn","single","getFormatFromType","tempObj","requiresCount","summaryKey","sumData","types","toLowerCase","val","calculateAggregate","disp","value_1","summaryformat","Sort","GridSort","flatSortedData","updateModel","createdSortedRecords","sortParams","iterateSort","childSort","ColumnMenu","GridColumnMenu","getColumnMenu","columnMenuModule","ContextMenu","cmenu","addRow","editRecord","BatchEdit","batchChildCount","batchAddedRecords","batchDeletedRecords","batchAddRowRecord","batchRecords","isAdd","batchSave","batchPageAction","batchCancelAction","getBatchRecords","getAddRowIndex","getSelectedIndex","getBatchChildCount","getColumnByIndex","added","primaryKey_1","currentDataIndex","indexvalue","newBatchRowAdded","changes","batchIndex","primaryParent","childRecordCount","actualIndex","updateChildCount","updateRowIndex","focusModule","table","matrix","primarykey","childs","selectedRecords","deleteUniqueID","positionIndex","primarykey_1","addRecords","reverse","totalRecords","startIndex","endIndex","indexValue","Edit","GridEdit","previousNewRowPosition","internalProperties","batchEditModule","crudAction","beginAdd","keyPressed","contentready","editActionEvents","gridDblClick","savePreviousRowPosition","beforeStartEdit","beforeBatchCancel","doubleClickTarget","applyFormValidation","eventArgs","treeObj","keyData","paramsLength","params","isOnBatch","isPrimaryKey","updateGridEditMode","keyPress","prom","celleditArgs","request","toolbarID","cellDetails","selectRowIndex","form","rowIndex_1","primaryKeys_1","blazorTemplates","aggregateModule","formObj","restoreFocus","saveArgs","previousData","previousValue","templateID","getColumnTemplate","editTemplate","updateBlazorTemplate","updateIndex","data1","data2","treecell","l","focussedElement","activeElement","errors","focus","beginAddEdit","childRecordCount1","currentDataIndex1","deletedValues","editFormValidate","destroyForm","CommandColumn","Command","DetailRow","detailrow","dataBoundArg","detaildataBound","setIndentVisibility","childRowExpand","rowExpandCollapse","actioncomplete","detailele","elements","detailData","detailRowElement","detailElement","previousSibling","expandClass_1","classlist","gridClas","gridclass","newNo","detailClass","spann","updtdcolum","focusElement","VirtualTreeContentRenderer","locator","isExpandCollapse","translateY","maxiPage","preTranslate","isRemoteExpand","getModelGenerator","virtualOtherAction","indexModifier","setTop","onDataReady","observers","observes","scrollArgs","scrollListeners","setVirtualHeight","getRowHeight","contents","debounceEvent","TreeInterSectionObserver","getPanel","getTranslateY","sTop","cHeight","info","isOnenter","sentinel","scrollHeight","upScroll","offset","downScroll","vHeight","lastInx","remains","rowPt","firsttdinx","nextSetResIndex","lastIndex","viewInfo","event","appendContent","newChild","virtualInfo","sentinelInfo","axis","cBlock","columnIndexes","cOffset","getColumnOffset","getTable","adjustTable","VirtualContentRenderer","isWheeling","newPos","lastPos","timer","callback","virtualScrollHandlers","prevTop","prevLeft","delta","clearTimeout","preventDefault","returnValue","isWheel","InterSectionObserver","VirtualScroll","prevstartIndex","prevendIndex","GridVirtualScroll","TreeVirtual","returnVisualData","collapseExpandVirtualchilds","virtualPageAction","expandCollapseRec","counts","resourceCount","sIndex","instantiateRenderers","log","renderer","getService","RenderType","Content","ensurePageSize","parentGrid","Freeze","FreezeColumn","dblClickHandler","frozenrows","queryselector","freezeModule","index.TreeGrid","index.Filter","index.Page","index.Sort","index.Reorder","index.Toolbar","index.Aggregate","index.Resize","index.ColumnMenu","index.ExcelExport","index.PdfExport","index.CommandColumn","index.ContextMenu","index.Edit","index.Selection","index.VirtualScroll","index.DetailRow","index.RowDD","index.Freeze"],"mappings":"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"}