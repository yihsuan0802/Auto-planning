/**
 * @fileoverview added by tsickle
 * Generated from: lib/chart.module.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @license
 * Copyright Felix Itzenplitz. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at
 * https://github.com/cebor/angular-highcharts/blob/master/LICENSE
 */
import { NgModule } from '@angular/core';
import { ChartDirective } from './chart.directive';
import { ChartService, HIGHCHARTS_MODULES } from './chart.service';
var ɵ0 = [];
var ChartModule = /** @class */ (function () {
    function ChartModule(cs) {
        this.cs = cs;
        this.cs.initModules();
    }
    ChartModule.decorators = [
        { type: NgModule, args: [{
                    exports: [ChartDirective],
                    declarations: [ChartDirective],
                    providers: [
                        { provide: HIGHCHARTS_MODULES, useValue: ɵ0 },
                        ChartService
                    ]
                },] }
    ];
    /** @nocollapse */
    ChartModule.ctorParameters = function () { return [
        { type: ChartService }
    ]; };
    return ChartModule;
}());
export { ChartModule };
if (false) {
    /**
     * @type {?}
     * @private
     */
    ChartModule.prototype.cs;
}
export { ɵ0 };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hhcnQubW9kdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vYW5ndWxhci1oaWdoY2hhcnRzLyIsInNvdXJjZXMiOlsibGliL2NoYXJ0Lm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBUUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDbkQsT0FBTyxFQUFFLFlBQVksRUFBRSxrQkFBa0IsRUFBRSxNQUFNLGlCQUFpQixDQUFDO1NBTXRCLEVBQUU7QUFKL0M7SUFTRSxxQkFBb0IsRUFBZ0I7UUFBaEIsT0FBRSxHQUFGLEVBQUUsQ0FBYztRQUNsQyxJQUFJLENBQUMsRUFBRSxDQUFDLFdBQVcsRUFBRSxDQUFDO0lBQ3hCLENBQUM7O2dCQVhGLFFBQVEsU0FBQztvQkFDUixPQUFPLEVBQUUsQ0FBQyxjQUFjLENBQUM7b0JBQ3pCLFlBQVksRUFBRSxDQUFDLGNBQWMsQ0FBQztvQkFDOUIsU0FBUyxFQUFFO3dCQUNULEVBQUUsT0FBTyxFQUFFLGtCQUFrQixFQUFFLFFBQVEsSUFBSSxFQUFFO3dCQUM3QyxZQUFZO3FCQUNiO2lCQUNGOzs7O2dCQVRRLFlBQVk7O0lBY3JCLGtCQUFDO0NBQUEsQUFaRCxJQVlDO1NBSlksV0FBVzs7Ozs7O0lBQ1YseUJBQXdCIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IEZlbGl4IEl0emVucGxpdHouIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXRcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9jZWJvci9hbmd1bGFyLWhpZ2hjaGFydHMvYmxvYi9tYXN0ZXIvTElDRU5TRVxuICovXG5pbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ2hhcnREaXJlY3RpdmUgfSBmcm9tICcuL2NoYXJ0LmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBDaGFydFNlcnZpY2UsIEhJR0hDSEFSVFNfTU9EVUxFUyB9IGZyb20gJy4vY2hhcnQuc2VydmljZSc7XG5cbkBOZ01vZHVsZSh7XG4gIGV4cG9ydHM6IFtDaGFydERpcmVjdGl2ZV0sXG4gIGRlY2xhcmF0aW9uczogW0NoYXJ0RGlyZWN0aXZlXSxcbiAgcHJvdmlkZXJzOiBbXG4gICAgeyBwcm92aWRlOiBISUdIQ0hBUlRTX01PRFVMRVMsIHVzZVZhbHVlOiBbXSB9LFxuICAgIENoYXJ0U2VydmljZVxuICBdXG59KVxuZXhwb3J0IGNsYXNzIENoYXJ0TW9kdWxlIHtcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBjczogQ2hhcnRTZXJ2aWNlKSB7XG4gICAgdGhpcy5jcy5pbml0TW9kdWxlcygpO1xuICB9XG59XG4iXX0=